{"version":3,"file":"historico.bundle.js","mappings":"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","sources":["webpack://registro-chamados/./static/js/components/HistoricoReact.js","webpack://registro-chamados/webpack/bootstrap","webpack://registro-chamados/webpack/runtime/harmony module decorator","webpack://registro-chamados/./static/js/entries/historico.js"],"sourcesContent":["// HistoricoReact.js - Componente React para Histórico de Chamadas\r\nclass HistoricoReact extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            chamadas: this.props.chamadas || [],\r\n            chamadasFiltradas: this.props.chamadas || [],\r\n            filtros: this.props.filtros || {\r\n                tipo: '',\r\n                status: '',\r\n                data_inicio: '',\r\n                data_fim: '',\r\n                busca: ''\r\n            },\r\n            isLoading: false,\r\n            selectedChamadas: [],\r\n            currentPage: 1,\r\n            itemsPerPage: 10,\r\n            sortField: 'data_criacao',\r\n            sortDirection: 'desc',\r\n            showExportOptions: false,\r\n            // Novos estados para modais\r\n            showDetalhesModal: false,\r\n            showEditarModal: false,\r\n            chamadaSelecionada: null,\r\n            dadosEdicao: {},\r\n            salvandoEdicao: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('✅ Componente HistoricoReact iniciado');\r\n        this.aplicarFiltros();\r\n        this.initializeAnimations();\r\n    }\r\n\r\n    initializeAnimations = () => {\r\n        // Animação de entrada para o formulário\r\n        const formContainer = document.querySelector('.historico-form-container');\r\n        if (formContainer) {\r\n            formContainer.style.opacity = '0';\r\n            formContainer.style.transform = 'translateY(20px)';\r\n            \r\n            setTimeout(() => {\r\n                formContainer.style.transition = 'all 0.6s ease';\r\n                formContainer.style.opacity = '1';\r\n                formContainer.style.transform = 'translateY(0)';\r\n            }, 100);\r\n        }\r\n    }\r\n\r\n    handleFiltroChange = (campo, valor) => {\r\n        this.setState(prevState => ({\r\n            filtros: {\r\n                ...prevState.filtros,\r\n                [campo]: valor\r\n            }\r\n        }), () => {\r\n            this.aplicarFiltros();\r\n        });\r\n    }\r\n\r\n    aplicarFiltros = () => {\r\n        const { chamadas, filtros } = this.state;\r\n        let chamadasFiltradas = [...chamadas];\r\n\r\n        // Filtro por busca\r\n        if (filtros.busca) {\r\n            const busca = filtros.busca.toLowerCase();\r\n            chamadasFiltradas = chamadasFiltradas.filter(chamada =>\r\n                chamada.nome_contato.toLowerCase().includes(busca) ||\r\n                chamada.telefone.includes(busca) ||\r\n                chamada.unidade_solicitante.nome.toLowerCase().includes(busca) ||\r\n                chamada.unidade_executante.nome.toLowerCase().includes(busca) ||\r\n                chamada.descricao.toLowerCase().includes(busca) ||\r\n                chamada.nome_atendente.toLowerCase().includes(busca)\r\n            );\r\n        }\r\n\r\n        // Filtro por tipo\r\n        if (filtros.tipo) {\r\n            chamadasFiltradas = chamadasFiltradas.filter(chamada =>\r\n                chamada.tipo_chamada === filtros.tipo\r\n            );\r\n        }\r\n\r\n        // Filtro por status\r\n        if (filtros.status) {\r\n            chamadasFiltradas = chamadasFiltradas.filter(chamada =>\r\n                chamada.status === filtros.status\r\n            );\r\n        }\r\n\r\n        // Filtros de data (simulação - em produção seria feito no backend)\r\n        if (filtros.data_inicio || filtros.data_fim) {\r\n            // Para simplificar, mantemos todas as chamadas quando há filtros de data\r\n            // Em produção, isso seria processado no backend\r\n        }\r\n\r\n        this.setState({ \r\n            chamadasFiltradas,\r\n            currentPage: 1 // Reset para primeira página\r\n        });\r\n    }\r\n\r\n    limparFiltros = () => {\r\n        const filtrosLimpos = {\r\n            tipo: '',\r\n            status: '',\r\n            data_inicio: '',\r\n            data_fim: '',\r\n            busca: ''\r\n        };\r\n\r\n        this.setState({ \r\n            filtros: filtrosLimpos,\r\n            chamadasFiltradas: this.state.chamadas,\r\n            currentPage: 1\r\n        });\r\n    }\r\n\r\n    handleSort = (field) => {\r\n        const { sortField, sortDirection } = this.state;\r\n        const newDirection = sortField === field && sortDirection === 'asc' ? 'desc' : 'asc';\r\n        \r\n        this.setState({\r\n            sortField: field,\r\n            sortDirection: newDirection\r\n        }, () => {\r\n            this.sortChamadas();\r\n        });\r\n    }\r\n\r\n    sortChamadas = () => {\r\n        const { chamadasFiltradas, sortField, sortDirection } = this.state;\r\n        \r\n        const sorted = [...chamadasFiltradas].sort((a, b) => {\r\n            let aValue = a[sortField];\r\n            let bValue = b[sortField];\r\n            \r\n            // Tratamento especial para campos aninhados\r\n            if (sortField === 'unidade_solicitante') {\r\n                aValue = a.unidade_solicitante.nome;\r\n                bValue = b.unidade_solicitante.nome;\r\n            }\r\n            \r\n            if (typeof aValue === 'string') {\r\n                aValue = aValue.toLowerCase();\r\n                bValue = bValue.toLowerCase();\r\n            }\r\n            \r\n            if (sortDirection === 'asc') {\r\n                return aValue > bValue ? 1 : -1;\r\n            } else {\r\n                return aValue < bValue ? 1 : -1;\r\n            }\r\n        });\r\n        \r\n        this.setState({ chamadasFiltradas: sorted });\r\n    }\r\n\r\n    handlePageChange = (page) => {\r\n        this.setState({ currentPage: page });\r\n    }\r\n\r\n    toggleChamadaSelection = (chamadaId) => {\r\n        this.setState(prevState => ({\r\n            selectedChamadas: prevState.selectedChamadas.includes(chamadaId)\r\n                ? prevState.selectedChamadas.filter(id => id !== chamadaId)\r\n                : [...prevState.selectedChamadas, chamadaId]\r\n        }));\r\n    }\r\n\r\n    selectAllChamadas = () => {\r\n        const { chamadasFiltradas } = this.state;\r\n        const currentPageChamadas = this.getCurrentPageChamadas();\r\n        \r\n        this.setState(prevState => {\r\n            const allSelected = currentPageChamadas.every(chamada => \r\n                prevState.selectedChamadas.includes(chamada.id)\r\n            );\r\n            \r\n            if (allSelected) {\r\n                return {\r\n                    selectedChamadas: prevState.selectedChamadas.filter(id => \r\n                        !currentPageChamadas.some(chamada => chamada.id === id)\r\n                    )\r\n                };\r\n            } else {\r\n                const newSelected = currentPageChamadas\r\n                    .filter(chamada => !prevState.selectedChamadas.includes(chamada.id))\r\n                    .map(chamada => chamada.id);\r\n                \r\n                return {\r\n                    selectedChamadas: [...prevState.selectedChamadas, ...newSelected]\r\n                };\r\n            }\r\n        });\r\n    }\r\n\r\n    getCurrentPageChamadas = () => {\r\n        const { chamadasFiltradas, currentPage, itemsPerPage } = this.state;\r\n        const startIndex = (currentPage - 1) * itemsPerPage;\r\n        const endIndex = startIndex + itemsPerPage;\r\n        return chamadasFiltradas.slice(startIndex, endIndex);\r\n    }\r\n\r\n    getTotalPages = () => {\r\n        const { chamadasFiltradas, itemsPerPage } = this.state;\r\n        return Math.ceil(chamadasFiltradas.length / itemsPerPage);\r\n    }\r\n\r\n    handleExport = (tipo) => {\r\n        const { filtros } = this.state;\r\n        const { urls } = this.props;\r\n        \r\n        // Construir URL com filtros\r\n        const params = new URLSearchParams();\r\n        Object.keys(filtros).forEach(key => {\r\n            if (filtros[key]) {\r\n                params.append(key, filtros[key]);\r\n            }\r\n        });\r\n        \r\n        let exportUrl;\r\n        switch (tipo) {\r\n            case 'pdf':\r\n                exportUrl = urls.export_pdf;\r\n                break;\r\n            case 'excel':\r\n                exportUrl = urls.export_excel;\r\n                break;\r\n            case 'csv':\r\n                exportUrl = urls.export_csv;\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n        \r\n        const fullUrl = `${exportUrl}?${params.toString()}`;\r\n        window.open(fullUrl, '_blank');\r\n        \r\n        this.setState({ showExportOptions: false });\r\n        this.showNotification(`Exportação ${tipo.toUpperCase()} iniciada!`, 'success');\r\n    }\r\n\r\n    showNotification = (message, type = 'info') => {\r\n        const notification = document.createElement('div');\r\n        notification.className = `notification-toast ${type}`;\r\n        notification.innerHTML = `\r\n            <div class=\"toast-icon\">\r\n                <i class=\"fas ${type === 'success' ? 'fa-check-circle' : \r\n                                type === 'error' ? 'fa-exclamation-circle' : \r\n                                type === 'warning' ? 'fa-exclamation-triangle' :\r\n                                'fa-info-circle'}\"></i>\r\n            </div>\r\n            <div class=\"toast-content\">${message}</div>\r\n            <button type=\"button\" class=\"toast-close\" onclick=\"this.parentElement.remove()\">\r\n                <i class=\"fas fa-times\"></i>\r\n            </button>\r\n        `;\r\n\r\n        let notificationsArea = document.querySelector('.notifications-premium');\r\n        if (!notificationsArea) {\r\n            notificationsArea = document.createElement('div');\r\n            notificationsArea.className = 'notifications-premium';\r\n            document.querySelector('.content-wrapper').prepend(notificationsArea);\r\n        }\r\n\r\n        notificationsArea.appendChild(notification);\r\n\r\n        setTimeout(() => {\r\n            if (notification.parentNode) {\r\n                notification.style.opacity = '0';\r\n                notification.style.transform = 'translateX(100%)';\r\n                setTimeout(() => notification.remove(), 300);\r\n            }\r\n        }, 5000);\r\n    }\r\n\r\n    // Método para ver detalhes da chamada\r\n    verDetalhes = async (chamadaId) => {\r\n        this.setState({ isLoading: true });\r\n\r\n        try {\r\n            const response = await fetch(`/accounts/chamada/${chamadaId}/detalhes/`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'X-Requested-With': 'XMLHttpRequest',\r\n                    'Content-Type': 'application/json',\r\n                }\r\n            });\r\n\r\n            if (response.ok) {\r\n                const result = await response.json();\r\n                if (result.success) {\r\n                    this.setState({\r\n                        chamadaSelecionada: result.data,\r\n                        showDetalhesModal: true,\r\n                        isLoading: false\r\n                    });\r\n                } else {\r\n                    this.showNotification(result.message || 'Erro ao carregar detalhes', 'error');\r\n                    this.setState({ isLoading: false });\r\n                }\r\n            } else {\r\n                this.showNotification('Erro ao carregar detalhes da chamada', 'error');\r\n                this.setState({ isLoading: false });\r\n            }\r\n        } catch (error) {\r\n            console.error('Erro ao buscar detalhes:', error);\r\n            this.showNotification('Erro de conexão ao buscar detalhes', 'error');\r\n            this.setState({ isLoading: false });\r\n        }\r\n    }\r\n\r\n    // Método para abrir modal de edição\r\n    abrirEdicao = async (chamadaId) => {\r\n        this.setState({ isLoading: true });\r\n\r\n        try {\r\n            const response = await fetch(`/accounts/chamada/${chamadaId}/editar-form/`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'X-Requested-With': 'XMLHttpRequest',\r\n                    'Content-Type': 'application/json',\r\n                }\r\n            });\r\n\r\n            if (response.ok) {\r\n                const result = await response.json();\r\n                if (result.success) {\r\n                    this.setState({\r\n                        chamadaSelecionada: result.data,\r\n                        dadosEdicao: { ...result.data },\r\n                        showEditarModal: true,\r\n                        isLoading: false\r\n                    });\r\n                } else {\r\n                    this.showNotification(result.message || 'Erro ao carregar dados para edição', 'error');\r\n                    this.setState({ isLoading: false });\r\n                }\r\n            } else {\r\n                this.showNotification('Erro ao carregar dados para edição', 'error');\r\n                this.setState({ isLoading: false });\r\n            }\r\n        } catch (error) {\r\n            console.error('Erro ao buscar dados para edição:', error);\r\n            this.showNotification('Erro de conexão ao buscar dados', 'error');\r\n            this.setState({ isLoading: false });\r\n        }\r\n    }\r\n\r\n    // Método para salvar edições\r\n    salvarEdicao = async () => {\r\n        const { dadosEdicao } = this.state;\r\n        \r\n        // Validações básicas\r\n        if (!dadosEdicao.nome_contato || !dadosEdicao.telefone || !dadosEdicao.unidade) {\r\n            this.showNotification('Preencha todos os campos obrigatórios', 'warning');\r\n            return;\r\n        }\r\n\r\n        this.setState({ salvandoEdicao: true });\r\n\r\n        try {\r\n            const response = await fetch('/accounts/api/editar-chamada/', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'X-CSRFToken': this.props.csrfToken,\r\n                },\r\n                body: JSON.stringify(dadosEdicao)\r\n            });\r\n\r\n            if (response.ok) {\r\n                const result = await response.json();\r\n                if (result.success) {\r\n                    // Atualizar a lista de chamadas no estado\r\n                    this.setState(prevState => ({\r\n                        chamadas: prevState.chamadas.map(chamada => \r\n                            chamada.id === dadosEdicao.id \r\n                                ? { ...chamada, ...dadosEdicao }\r\n                                : chamada\r\n                        ),\r\n                        showEditarModal: false,\r\n                        salvandoEdicao: false,\r\n                        chamadaSelecionada: null,\r\n                        dadosEdicao: {}\r\n                    }), () => {\r\n                        this.aplicarFiltros(); // Reaplicar filtros para atualizar a visualização\r\n                    });\r\n\r\n                    this.showNotification('Chamada atualizada com sucesso!', 'success');\r\n                } else {\r\n                    this.showNotification(result.message || 'Erro ao salvar alterações', 'error');\r\n                    this.setState({ salvandoEdicao: false });\r\n                }\r\n            } else {\r\n                this.showNotification('Erro ao salvar alterações', 'error');\r\n                this.setState({ salvandoEdicao: false });\r\n            }\r\n        } catch (error) {\r\n            console.error('Erro ao salvar edição:', error);\r\n            this.showNotification('Erro de conexão ao salvar', 'error');\r\n            this.setState({ salvandoEdicao: false });\r\n        }\r\n    }\r\n\r\n    // Método para fechar modais\r\n    fecharModais = () => {\r\n        this.setState({\r\n            showDetalhesModal: false,\r\n            showEditarModal: false,\r\n            chamadaSelecionada: null,\r\n            dadosEdicao: {},\r\n            salvandoEdicao: false\r\n        });\r\n    }\r\n\r\n    // Método para atualizar dados de edição\r\n    atualizarDadosEdicao = (campo, valor) => {\r\n        this.setState(prevState => ({\r\n            dadosEdicao: {\r\n                ...prevState.dadosEdicao,\r\n                [campo]: valor\r\n            }\r\n        }));\r\n    }\r\n\r\n    formatStatus = (status) => {\r\n        const statusMap = {\r\n            'PENDENTE': { label: 'Pendente', class: 'warning' },\r\n            'EM_ANDAMENTO': { label: 'Em Andamento', class: 'info' },\r\n            'CONCLUIDA': { label: 'Concluída', class: 'success' },\r\n            'CANCELADA': { label: 'Cancelada', class: 'danger' }\r\n        };\r\n        \r\n        return statusMap[status] || { label: status, class: 'secondary' };\r\n    }\r\n\r\n    render() {\r\n        const { \r\n            chamadasFiltradas, filtros, isLoading, selectedChamadas, \r\n            currentPage, itemsPerPage, sortField, sortDirection, showExportOptions,\r\n            showDetalhesModal, showEditarModal, chamadaSelecionada, dadosEdicao, salvandoEdicao\r\n        } = this.state;\r\n        \r\n        const { opcoes } = this.props;\r\n        const currentPageChamadas = this.getCurrentPageChamadas();\r\n        const totalPages = this.getTotalPages();\r\n        const allCurrentPageSelected = currentPageChamadas.length > 0 && \r\n            currentPageChamadas.every(chamada => selectedChamadas.includes(chamada.id));\r\n\r\n        return (\r\n            <div className=\"historico-form-container\">\r\n                {isLoading && (\r\n                    <div className=\"loading-overlay-historico\">\r\n                        <div className=\"loading-spinner-historico\"></div>\r\n                    </div>\r\n                )}\r\n\r\n                {/* Header do Formulário */}\r\n                <div className=\"form-header-historico\">\r\n                    <h2 className=\"form-title-historico\">\r\n                        <i className=\"fas fa-filter\"></i>\r\n                        Filtros e Resultados\r\n                    </h2>\r\n                    <p className=\"form-subtitle-historico\">\r\n                        Encontrados {chamadasFiltradas.length} registros\r\n                    </p>\r\n                </div>\r\n\r\n                {/* Corpo do Formulário */}\r\n                <div className=\"form-body-historico\">\r\n                    {/* Seção de Filtros */}\r\n                    <div className=\"filtros-section\">\r\n                        <div className=\"filtros-header\">\r\n                            <h3>\r\n                                <i className=\"fas fa-search\"></i>\r\n                                Filtrar Chamadas\r\n                            </h3>\r\n                            <div className=\"filtros-actions\">\r\n                                <button \r\n                                    className=\"btn-filter secondary\"\r\n                                    onClick={this.limparFiltros}\r\n                                >\r\n                                    <i className=\"fas fa-broom\"></i>\r\n                                    Limpar\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"filtros-grid\">\r\n                            <div className=\"filtro-group\">\r\n                                <label>\r\n                                    <i className=\"fas fa-search\"></i>\r\n                                    Buscar\r\n                                </label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"filtro-input\"\r\n                                    value={filtros.busca}\r\n                                    onChange={(e) => this.handleFiltroChange('busca', e.target.value)}\r\n                                    placeholder=\"Nome, telefone, unidade...\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"filtro-group\">\r\n                                <label>\r\n                                    <i className=\"fas fa-list\"></i>\r\n                                    Tipo de Chamada\r\n                                </label>\r\n                                <select\r\n                                    className=\"filtro-select\"\r\n                                    value={filtros.tipo}\r\n                                    onChange={(e) => this.handleFiltroChange('tipo', e.target.value)}\r\n                                >\r\n                                    <option value=\"\">Todos os tipos</option>\r\n                                    {opcoes.tipos_chamada.map(tipo => (\r\n                                        <option key={tipo.value} value={tipo.value}>\r\n                                            {tipo.label}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n\r\n                            <div className=\"filtro-group\">\r\n                                <label>\r\n                                    <i className=\"fas fa-flag\"></i>\r\n                                    Status\r\n                                </label>\r\n                                <select\r\n                                    className=\"filtro-select\"\r\n                                    value={filtros.status}\r\n                                    onChange={(e) => this.handleFiltroChange('status', e.target.value)}\r\n                                >\r\n                                    <option value=\"\">Todos os status</option>\r\n                                    {opcoes.status_choices.map(status => (\r\n                                        <option key={status.value} value={status.value}>\r\n                                            {status.label}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n\r\n                            <div className=\"filtro-group\">\r\n                                <label>\r\n                                    <i className=\"fas fa-calendar\"></i>\r\n                                    Data Início\r\n                                </label>\r\n                                <input\r\n                                    type=\"date\"\r\n                                    className=\"filtro-input\"\r\n                                    value={filtros.data_inicio}\r\n                                    onChange={(e) => this.handleFiltroChange('data_inicio', e.target.value)}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"filtro-group\">\r\n                                <label>\r\n                                    <i className=\"fas fa-calendar\"></i>\r\n                                    Data Fim\r\n                                </label>\r\n                                <input\r\n                                    type=\"date\"\r\n                                    className=\"filtro-input\"\r\n                                    value={filtros.data_fim}\r\n                                    onChange={(e) => this.handleFiltroChange('data_fim', e.target.value)}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Seção de Resultados */}\r\n                    <div className=\"resultados-section\">\r\n                        <div className=\"resultados-header\">\r\n                            <div className=\"resultados-info\">\r\n                                <h3>\r\n                                    <i className=\"fas fa-table\"></i>\r\n                                    Registros\r\n                                </h3>\r\n                                <span className=\"resultados-count\">\r\n                                    {chamadasFiltradas.length} encontrados\r\n                                </span>\r\n                            </div>\r\n                            \r\n                            <div className=\"resultados-actions\">\r\n                                <div className=\"export-dropdown\">\r\n                                    <button \r\n                                        className=\"btn-export\"\r\n                                        onClick={() => this.setState({ showExportOptions: !showExportOptions })}\r\n                                    >\r\n                                        <i className=\"fas fa-download\"></i>\r\n                                        Exportar\r\n                                        <i className=\"fas fa-chevron-down\"></i>\r\n                                    </button>\r\n                                    \r\n                                    {showExportOptions && (\r\n                                        <div className=\"export-options\">\r\n                                            <button onClick={() => this.handleExport('pdf')}>\r\n                                                <i className=\"fas fa-file-pdf\"></i>\r\n                                                PDF\r\n                                            </button>\r\n                                            <button onClick={() => this.handleExport('excel')}>\r\n                                                <i className=\"fas fa-file-excel\"></i>\r\n                                                Excel\r\n                                            </button>\r\n                                            <button onClick={() => this.handleExport('csv')}>\r\n                                                <i className=\"fas fa-file-csv\"></i>\r\n                                                CSV\r\n                                            </button>\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Tabela */}\r\n                        <div className=\"table-container\">\r\n                            <table className=\"table-modern\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>\r\n                                            <input\r\n                                                type=\"checkbox\"\r\n                                                checked={allCurrentPageSelected}\r\n                                                onChange={this.selectAllChamadas}\r\n                                            />\r\n                                        </th>\r\n                                        <th \r\n                                            className={`sortable ${sortField === 'data_criacao' ? sortDirection : ''}`}\r\n                                            onClick={() => this.handleSort('data_criacao')}\r\n                                        >\r\n                                            Data/Hora\r\n                                            <i className=\"fas fa-sort\"></i>\r\n                                        </th>\r\n                                        <th \r\n                                            className={`sortable ${sortField === 'nome_contato' ? sortDirection : ''}`}\r\n                                            onClick={() => this.handleSort('nome_contato')}\r\n                                        >\r\n                                            Contato\r\n                                            <i className=\"fas fa-sort\"></i>\r\n                                        </th>\r\n                                        <th>Telefone</th>\r\n                                        <th \r\n                                            className={`sortable ${sortField === 'unidade_solicitante' ? sortDirection : ''}`}\r\n                                            onClick={() => this.handleSort('unidade_solicitante')}\r\n                                        >\r\n                                            Unidade Solicitante\r\n                                            <i className=\"fas fa-sort\"></i>\r\n                                        </th>\r\n                                        <th>Tipo</th>\r\n                                        <th>Status</th>\r\n                                        <th>Atendente</th>\r\n                                        <th>Ações</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {currentPageChamadas.length === 0 ? (\r\n                                        <tr>\r\n                                            <td colSpan=\"9\" className=\"no-data\">\r\n                                                <div className=\"no-data-content\">\r\n                                                    <i className=\"fas fa-search\"></i>\r\n                                                    <h4>Nenhum registro encontrado</h4>\r\n                                                    <p>Tente ajustar os filtros para encontrar mais resultados</p>\r\n                                                </div>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ) : (\r\n                                        currentPageChamadas.map(chamada => {\r\n                                            const statusInfo = this.formatStatus(chamada.status);\r\n                                            \r\n                                            return (\r\n                                                <tr key={chamada.id}>\r\n                                                    <td>\r\n                                                        <input\r\n                                                            type=\"checkbox\"\r\n                                                            checked={selectedChamadas.includes(chamada.id)}\r\n                                                            onChange={() => this.toggleChamadaSelection(chamada.id)}\r\n                                                        />\r\n                                                    </td>\r\n                                                    <td>{chamada.data_criacao}</td>\r\n                                                    <td>\r\n                                                        <div className=\"contact-info\">\r\n                                                            <strong>{chamada.nome_contato}</strong>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        <a href={`tel:${chamada.telefone}`} className=\"phone-link\">\r\n                                                            {chamada.telefone}\r\n                                                        </a>\r\n                                                    </td>\r\n                                                    <td>{chamada.unidade_solicitante.nome}</td>\r\n                                                    <td>\r\n                                                        <span className=\"tipo-badge\">\r\n                                                            {chamada.tipo_chamada}\r\n                                                        </span>\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        <span className={`status-badge ${statusInfo.class}`}>\r\n                                                            {statusInfo.label}\r\n                                                        </span>\r\n                                                    </td>\r\n                                                    <td>{chamada.nome_atendente}</td>\r\n                                                    <td>\r\n                                                        <div className=\"action-buttons\">\r\n                                                            <button \r\n                                                                className=\"btn-action view\"\r\n                                                                title=\"Ver detalhes\"\r\n                                                                onClick={() => this.verDetalhes(chamada.id)}\r\n                                                            >\r\n                                                                <i className=\"fas fa-eye\"></i>\r\n                                                            </button>\r\n                                                            <button \r\n                                                                className=\"btn-action edit\"\r\n                                                                title=\"Editar\"\r\n                                                                onClick={() => this.abrirEdicao(chamada.id)}\r\n                                                            >\r\n                                                                <i className=\"fas fa-edit\"></i>\r\n                                                            </button>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            );\r\n                                        })\r\n                                    )}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        {/* Paginação */}\r\n                        {totalPages > 1 && (\r\n                            <div className=\"pagination-container\">\r\n                                <div className=\"pagination-info\">\r\n                                    Página {currentPage} de {totalPages} \r\n                                    ({chamadasFiltradas.length} registros)\r\n                                </div>\r\n                                \r\n                                <div className=\"pagination-controls\">\r\n                                    <button \r\n                                        className=\"pagination-btn\"\r\n                                        disabled={currentPage === 1}\r\n                                        onClick={() => this.handlePageChange(currentPage - 1)}\r\n                                    >\r\n                                        <i className=\"fas fa-chevron-left\"></i>\r\n                                        Anterior\r\n                                    </button>\r\n                                    \r\n                                    {Array.from({ length: Math.min(5, totalPages) }, (_, i) => {\r\n                                        let pageNum;\r\n                                        if (totalPages <= 5) {\r\n                                            pageNum = i + 1;\r\n                                        } else if (currentPage <= 3) {\r\n                                            pageNum = i + 1;\r\n                                        } else if (currentPage >= totalPages - 2) {\r\n                                            pageNum = totalPages - 4 + i;\r\n                                        } else {\r\n                                            pageNum = currentPage - 2 + i;\r\n                                        }\r\n                                        \r\n                                        return (\r\n                                            <button\r\n                                                key={pageNum}\r\n                                                className={`pagination-btn ${currentPage === pageNum ? 'active' : ''}`}\r\n                                                onClick={() => this.handlePageChange(pageNum)}\r\n                                            >\r\n                                                {pageNum}\r\n                                            </button>\r\n                                        );\r\n                                    })}\r\n                                    \r\n                                    <button \r\n                                        className=\"pagination-btn\"\r\n                                        disabled={currentPage === totalPages}\r\n                                        onClick={() => this.handlePageChange(currentPage + 1)}\r\n                                    >\r\n                                        Próximo\r\n                                        <i className=\"fas fa-chevron-right\"></i>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Modal de Detalhes */}\r\n                {showDetalhesModal && chamadaSelecionada && (\r\n                    <div className=\"modal-overlay\" onClick={this.fecharModais}>\r\n                        <div className=\"modal-content modal-large\" onClick={(e) => e.stopPropagation()}>\r\n                            <div className=\"modal-header\">\r\n                                <h3>\r\n                                    <i className=\"fas fa-eye\"></i>\r\n                                    Detalhes da Chamada {chamadaSelecionada.codigo}\r\n                                </h3>\r\n                                <button className=\"modal-close\" onClick={this.fecharModais}>\r\n                                    <i className=\"fas fa-times\"></i>\r\n                                </button>\r\n                            </div>\r\n                            \r\n                            <div className=\"modal-body\">\r\n                                <div className=\"detalhes-grid\">\r\n                                    <div className=\"detalhe-item\">\r\n                                        <label>Contato:</label>\r\n                                        <span>{chamadaSelecionada.nome_contato}</span>\r\n                                    </div>\r\n                                    <div className=\"detalhe-item\">\r\n                                        <label>Telefone:</label>\r\n                                        <span>\r\n                                            <a href={`tel:${chamadaSelecionada.telefone}`} className=\"phone-link\">\r\n                                                {chamadaSelecionada.telefone}\r\n                                            </a>\r\n                                        </span>\r\n                                    </div>\r\n                                    <div className=\"detalhe-item\">\r\n                                        <label>Função:</label>\r\n                                        <span>{chamadaSelecionada.funcao || 'Não informado'}</span>\r\n                                    </div>\r\n                                    <div className=\"detalhe-item\">\r\n                                        <label>Setor:</label>\r\n                                        <span>{chamadaSelecionada.setor || 'Não informado'}</span>\r\n                                    </div>\r\n                                    <div className=\"detalhe-item\">\r\n                                        <label>Unidade:</label>\r\n                                        <span>{chamadaSelecionada.unidade}</span>\r\n                                    </div>\r\n                                    <div className=\"detalhe-item\">\r\n                                        <label>Município:</label>\r\n                                        <span>{chamadaSelecionada.municipio || 'Não informado'}</span>\r\n                                    </div>\r\n                                    <div className=\"detalhe-item\">\r\n                                        <label>CNES:</label>\r\n                                        <span>{chamadaSelecionada.cnes || 'Não informado'}</span>\r\n                                    </div>\r\n                                    <div className=\"detalhe-item\">\r\n                                        <label>Contato CNES:</label>\r\n                                        <span>{chamadaSelecionada.contato_telefonico_cnes || 'Não informado'}</span>\r\n                                    </div>\r\n                                    <div className=\"detalhe-item\">\r\n                                        <label>Tipo de Chamada:</label>\r\n                                        <span className=\"tipo-badge\">{chamadaSelecionada.tipo_chamada}</span>\r\n                                    </div>\r\n                                    <div className=\"detalhe-item\">\r\n                                        <label>Status:</label>\r\n                                        <span className={`status-badge ${this.formatStatus(chamadaSelecionada.status).class}`}>\r\n                                            {chamadaSelecionada.status}\r\n                                        </span>\r\n                                    </div>\r\n                                    <div className=\"detalhe-item\">\r\n                                        <label>Atendente:</label>\r\n                                        <span>{chamadaSelecionada.nome_atendente}</span>\r\n                                    </div>\r\n                                    <div className=\"detalhe-item\">\r\n                                        <label>Criado por:</label>\r\n                                        <span>{chamadaSelecionada.usuario_criador}</span>\r\n                                    </div>\r\n                                    <div className=\"detalhe-item full-width\">\r\n                                        <label>Descrição:</label>\r\n                                        <p className=\"descricao-completa\">{chamadaSelecionada.descricao}</p>\r\n                                    </div>\r\n                                    {chamadaSelecionada.solucao && (\r\n                                        <div className=\"detalhe-item full-width\">\r\n                                            <label>Solução:</label>\r\n                                            <p className=\"solucao-completa\">{chamadaSelecionada.solucao}</p>\r\n                                        </div>\r\n                                    )}\r\n                                    <div className=\"detalhe-item\">\r\n                                        <label>Data de Criação:</label>\r\n                                        <span>{chamadaSelecionada.data_criacao}</span>\r\n                                    </div>\r\n                                    <div className=\"detalhe-item\">\r\n                                        <label>Última Atualização:</label>\r\n                                        <span>{chamadaSelecionada.data_atualizacao}</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                {/* Modal de Edição */}\r\n                {showEditarModal && chamadaSelecionada && (\r\n                    <div className=\"modal-overlay\" onClick={this.fecharModais}>\r\n                        <div className=\"modal-content modal-large\" onClick={(e) => e.stopPropagation()}>\r\n                            <div className=\"modal-header\">\r\n                                <h3>\r\n                                    <i className=\"fas fa-edit\"></i>\r\n                                    Editar Chamada {chamadaSelecionada.codigo}\r\n                                </h3>\r\n                                <button className=\"modal-close\" onClick={this.fecharModais}>\r\n                                    <i className=\"fas fa-times\"></i>\r\n                                </button>\r\n                            </div>\r\n                            \r\n                            <div className=\"modal-body\">\r\n                                <form className=\"edicao-form\" onSubmit={(e) => { e.preventDefault(); this.salvarEdicao(); }}>\r\n                                    <div className=\"form-grid\">\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"nome_contato\">Nome do Contato *</label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                id=\"nome_contato\"\r\n                                                value={dadosEdicao.nome_contato || ''}\r\n                                                onChange={(e) => this.atualizarDadosEdicao('nome_contato', e.target.value)}\r\n                                                required\r\n                                            />\r\n                                        </div>\r\n                                        \r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"telefone\">Telefone *</label>\r\n                                            <input\r\n                                                type=\"tel\"\r\n                                                id=\"telefone\"\r\n                                                value={dadosEdicao.telefone || ''}\r\n                                                onChange={(e) => this.atualizarDadosEdicao('telefone', e.target.value)}\r\n                                                required\r\n                                            />\r\n                                        </div>\r\n                                        \r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"funcao\">Função</label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                id=\"funcao\"\r\n                                                value={dadosEdicao.funcao || ''}\r\n                                                onChange={(e) => this.atualizarDadosEdicao('funcao', e.target.value)}\r\n                                            />\r\n                                        </div>\r\n                                        \r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"setor\">Setor</label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                id=\"setor\"\r\n                                                value={dadosEdicao.setor || ''}\r\n                                                onChange={(e) => this.atualizarDadosEdicao('setor', e.target.value)}\r\n                                            />\r\n                                        </div>\r\n                                        \r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"unidade\">Unidade *</label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                id=\"unidade\"\r\n                                                value={dadosEdicao.unidade || ''}\r\n                                                onChange={(e) => this.atualizarDadosEdicao('unidade', e.target.value)}\r\n                                                required\r\n                                            />\r\n                                        </div>\r\n                                        \r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"municipio\">Município</label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                id=\"municipio\"\r\n                                                value={dadosEdicao.municipio || ''}\r\n                                                onChange={(e) => this.atualizarDadosEdicao('municipio', e.target.value)}\r\n                                            />\r\n                                        </div>\r\n                                        \r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"cnes\">CNES</label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                id=\"cnes\"\r\n                                                value={dadosEdicao.cnes || ''}\r\n                                                onChange={(e) => this.atualizarDadosEdicao('cnes', e.target.value)}\r\n                                            />\r\n                                        </div>\r\n                                        \r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"contato_telefonico_cnes\">Contato CNES</label>\r\n                                            <input\r\n                                                type=\"tel\"\r\n                                                id=\"contato_telefonico_cnes\"\r\n                                                value={dadosEdicao.contato_telefonico_cnes || ''}\r\n                                                onChange={(e) => this.atualizarDadosEdicao('contato_telefonico_cnes', e.target.value)}\r\n                                            />\r\n                                        </div>\r\n                                        \r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"tipo_chamada\">Tipo de Chamada *</label>\r\n                                            <select\r\n                                                id=\"tipo_chamada\"\r\n                                                value={dadosEdicao.tipo_chamada || ''}\r\n                                                onChange={(e) => this.atualizarDadosEdicao('tipo_chamada', e.target.value)}\r\n                                                required\r\n                                            >\r\n                                                <option value=\"\">Selecione o tipo</option>\r\n                                                {opcoes.tipos_chamada.map(tipo => (\r\n                                                    <option key={tipo.value} value={tipo.value}>\r\n                                                        {tipo.label}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </div>\r\n                                        \r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"status\">Status *</label>\r\n                                            <select\r\n                                                id=\"status\"\r\n                                                value={dadosEdicao.status || ''}\r\n                                                onChange={(e) => this.atualizarDadosEdicao('status', e.target.value)}\r\n                                                required\r\n                                            >\r\n                                                <option value=\"\">Selecione o status</option>\r\n                                                {opcoes.status_choices.map(status => (\r\n                                                    <option key={status.value} value={status.value}>\r\n                                                        {status.label}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </div>\r\n                                        \r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"nome_atendente\">Atendente *</label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                id=\"nome_atendente\"\r\n                                                value={dadosEdicao.nome_atendente || ''}\r\n                                                onChange={(e) => this.atualizarDadosEdicao('nome_atendente', e.target.value)}\r\n                                                required\r\n                                            />\r\n                                        </div>\r\n                                        \r\n                                        <div className=\"form-group full-width\">\r\n                                            <label htmlFor=\"descricao\">Descrição *</label>\r\n                                            <textarea\r\n                                                id=\"descricao\"\r\n                                                rows=\"4\"\r\n                                                value={dadosEdicao.descricao || ''}\r\n                                                onChange={(e) => this.atualizarDadosEdicao('descricao', e.target.value)}\r\n                                                required\r\n                                            ></textarea>\r\n                                        </div>\r\n                                        \r\n                                        <div className=\"form-group full-width\">\r\n                                            <label htmlFor=\"solucao\">Solução</label>\r\n                                            <textarea\r\n                                                id=\"solucao\"\r\n                                                rows=\"3\"\r\n                                                value={dadosEdicao.solucao || ''}\r\n                                                onChange={(e) => this.atualizarDadosEdicao('solucao', e.target.value)}\r\n                                                placeholder=\"Descreva a solução aplicada (opcional)\"\r\n                                            ></textarea>\r\n                                        </div>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"modal-footer\">\r\n                                        <button \r\n                                            type=\"button\" \r\n                                            className=\"btn-cancel\"\r\n                                            onClick={this.fecharModais}\r\n                                            disabled={salvandoEdicao}\r\n                                        >\r\n                                            Cancelar\r\n                                        </button>\r\n                                        <button \r\n                                            type=\"submit\" \r\n                                            className=\"btn-save\"\r\n                                            disabled={salvandoEdicao}\r\n                                        >\r\n                                            {salvandoEdicao ? (\r\n                                                <>\r\n                                                    <i className=\"fas fa-spinner fa-spin\"></i>\r\n                                                    Salvando...\r\n                                                </>\r\n                                            ) : (\r\n                                                <>\r\n                                                    <i className=\"fas fa-save\"></i>\r\n                                                    Salvar Alterações\r\n                                                </>\r\n                                            )}\r\n                                        </button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// CSS adicional para o componente\r\nconst historicoStyles = document.createElement('style');\r\nhistoricoStyles.textContent = `\r\n/* ===== SEÇÃO DE FILTROS ===== */\r\n.filtros-section {\r\n    margin-bottom: 2rem;\r\n    padding: 1.5rem;\r\n    background: #f8fafc;\r\n    border-radius: 16px;\r\n    border: 1px solid #e2e8f0;\r\n}\r\n\r\n.filtros-header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin-bottom: 1.5rem;\r\n}\r\n\r\n.filtros-header h3 {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 0.5rem;\r\n    color: #1f2937;\r\n    font-size: 1.125rem;\r\n    font-weight: 600;\r\n    margin: 0;\r\n}\r\n\r\n.filtros-actions {\r\n    display: flex;\r\n    gap: 0.75rem;\r\n}\r\n\r\n.btn-filter {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 0.5rem;\r\n    padding: 0.5rem 1rem;\r\n    border-radius: 8px;\r\n    font-weight: 500;\r\n    border: none;\r\n    cursor: pointer;\r\n    transition: all 0.3s ease;\r\n    font-size: 0.875rem;\r\n}\r\n\r\n.btn-filter.secondary {\r\n    background: #f3f4f6;\r\n    color: #374151;\r\n    border: 1px solid #d1d5db;\r\n}\r\n\r\n.btn-filter.secondary:hover {\r\n    background: #e5e7eb;\r\n    transform: translateY(-1px);\r\n}\r\n\r\n.filtros-grid {\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n    gap: 1rem;\r\n}\r\n\r\n.filtro-group {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 0.5rem;\r\n}\r\n\r\n.filtro-group label {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 0.5rem;\r\n    font-weight: 500;\r\n    color: #374151;\r\n    font-size: 0.875rem;\r\n}\r\n\r\n.filtro-input, .filtro-select {\r\n    padding: 0.5rem 0.75rem;\r\n    border: 1px solid #d1d5db;\r\n    border-radius: 8px;\r\n    font-size: 0.875rem;\r\n    transition: all 0.3s ease;\r\n    background: white;\r\n}\r\n\r\n.filtro-input:focus, .filtro-select:focus {\r\n    outline: none;\r\n    border-color: #6366f1;\r\n    box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);\r\n}\r\n\r\n/* ===== SEÇÃO DE RESULTADOS ===== */\r\n.resultados-section {\r\n    margin-top: 2rem;\r\n}\r\n\r\n.resultados-header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin-bottom: 1rem;\r\n    padding-bottom: 1rem;\r\n    border-bottom: 1px solid #e5e7eb;\r\n}\r\n\r\n.resultados-info {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 1rem;\r\n}\r\n\r\n.resultados-info h3 {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 0.5rem;\r\n    color: #1f2937;\r\n    font-size: 1.125rem;\r\n    font-weight: 600;\r\n    margin: 0;\r\n}\r\n\r\n.resultados-count {\r\n    background: #f3f4f6;\r\n    color: #374151;\r\n    padding: 0.25rem 0.75rem;\r\n    border-radius: 12px;\r\n    font-size: 0.875rem;\r\n    font-weight: 500;\r\n}\r\n\r\n.resultados-actions {\r\n    display: flex;\r\n    gap: 1rem;\r\n    align-items: center;\r\n}\r\n\r\n/* ===== DROPDOWN DE EXPORTAÇÃO ===== */\r\n.export-dropdown {\r\n    position: relative;\r\n}\r\n\r\n.btn-export {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 0.5rem;\r\n    padding: 0.5rem 1rem;\r\n    background: linear-gradient(135deg, #6366f1, #4f46e5);\r\n    color: white;\r\n    border: none;\r\n    border-radius: 8px;\r\n    font-weight: 500;\r\n    cursor: pointer;\r\n    transition: all 0.3s ease;\r\n    font-size: 0.875rem;\r\n}\r\n\r\n.btn-export:hover {\r\n    transform: translateY(-1px);\r\n    box-shadow: 0 4px 12px rgba(99, 102, 241, 0.3);\r\n}\r\n\r\n.export-options {\r\n    position: absolute;\r\n    top: 100%;\r\n    right: 0;\r\n    background: white;\r\n    border: 1px solid #e5e7eb;\r\n    border-radius: 8px;\r\n    box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1);\r\n    z-index: 1000;\r\n    margin-top: 0.5rem;\r\n    min-width: 120px;\r\n}\r\n\r\n.export-options button {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 0.5rem;\r\n    width: 100%;\r\n    padding: 0.75rem 1rem;\r\n    background: none;\r\n    border: none;\r\n    color: #374151;\r\n    cursor: pointer;\r\n    transition: all 0.2s ease;\r\n    font-size: 0.875rem;\r\n}\r\n\r\n.export-options button:hover {\r\n    background: #f3f4f6;\r\n    color: #6366f1;\r\n}\r\n\r\n.export-options button:first-child {\r\n    border-radius: 8px 8px 0 0;\r\n}\r\n\r\n.export-options button:last-child {\r\n    border-radius: 0 0 8px 8px;\r\n}\r\n\r\n/* ===== TABELA ===== */\r\n.table-container {\r\n    background: white;\r\n    border-radius: 12px;\r\n    overflow: hidden;\r\n    border: 1px solid #e5e7eb;\r\n    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.table-modern {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n}\r\n\r\n.table-modern th {\r\n    background: #f8fafc;\r\n    padding: 1rem 0.75rem;\r\n    text-align: left;\r\n    font-weight: 600;\r\n    color: #374151;\r\n    font-size: 0.875rem;\r\n    border-bottom: 1px solid #e5e7eb;\r\n    position: relative;\r\n}\r\n\r\n.table-modern th.sortable {\r\n    cursor: pointer;\r\n    user-select: none;\r\n    transition: all 0.2s ease;\r\n}\r\n\r\n.table-modern th.sortable:hover {\r\n    background: #f1f5f9;\r\n    color: #6366f1;\r\n}\r\n\r\n.table-modern th.sortable i {\r\n    margin-left: 0.5rem;\r\n    opacity: 0.5;\r\n}\r\n\r\n.table-modern th.sortable.asc i:before {\r\n    content: \"\\\\f0de\";\r\n    opacity: 1;\r\n    color: #6366f1;\r\n}\r\n\r\n.table-modern th.sortable.desc i:before {\r\n    content: \"\\\\f0dd\";\r\n    opacity: 1;\r\n    color: #6366f1;\r\n}\r\n\r\n.table-modern td {\r\n    padding: 0.75rem;\r\n    border-bottom: 1px solid #f1f5f9;\r\n    color: #374151;\r\n    font-size: 0.875rem;\r\n}\r\n\r\n.table-modern tbody tr:hover {\r\n    background: #f8fafc;\r\n}\r\n\r\n.table-modern tbody tr:last-child td {\r\n    border-bottom: none;\r\n}\r\n\r\n/* ===== BADGES E STATUS ===== */\r\n.status-badge {\r\n    padding: 0.25rem 0.75rem;\r\n    border-radius: 12px;\r\n    font-size: 0.75rem;\r\n    font-weight: 500;\r\n    text-transform: uppercase;\r\n    letter-spacing: 0.025em;\r\n}\r\n\r\n.status-badge.success {\r\n    background: rgba(16, 185, 129, 0.1);\r\n    color: #047857;\r\n}\r\n\r\n.status-badge.warning {\r\n    background: rgba(245, 158, 11, 0.1);\r\n    color: #d97706;\r\n}\r\n\r\n.status-badge.info {\r\n    background: rgba(59, 130, 246, 0.1);\r\n    color: #1d4ed8;\r\n}\r\n\r\n.status-badge.danger {\r\n    background: rgba(239, 68, 68, 0.1);\r\n    color: #dc2626;\r\n}\r\n\r\n.status-badge.secondary {\r\n    background: rgba(107, 114, 128, 0.1);\r\n    color: #4b5563;\r\n}\r\n\r\n.tipo-badge {\r\n    background: #f3f4f6;\r\n    color: #374151;\r\n    padding: 0.25rem 0.5rem;\r\n    border-radius: 6px;\r\n    font-size: 0.75rem;\r\n    font-weight: 500;\r\n}\r\n\r\n/* ===== AÇÕES DA TABELA ===== */\r\n.action-buttons {\r\n    display: flex;\r\n    gap: 0.5rem;\r\n}\r\n\r\n.btn-action {\r\n    width: 32px;\r\n    height: 32px;\r\n    border: none;\r\n    border-radius: 6px;\r\n    cursor: pointer;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    transition: all 0.2s ease;\r\n    font-size: 0.875rem;\r\n}\r\n\r\n.btn-action.view {\r\n    background: rgba(59, 130, 246, 0.1);\r\n    color: #1d4ed8;\r\n}\r\n\r\n.btn-action.view:hover {\r\n    background: rgba(59, 130, 246, 0.2);\r\n    transform: scale(1.05);\r\n}\r\n\r\n.btn-action.edit {\r\n    background: rgba(245, 158, 11, 0.1);\r\n    color: #d97706;\r\n}\r\n\r\n.btn-action.edit:hover {\r\n    background: rgba(245, 158, 11, 0.2);\r\n    transform: scale(1.05);\r\n}\r\n\r\n/* ===== PAGINAÇÃO ===== */\r\n.pagination-container {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin-top: 1.5rem;\r\n    padding-top: 1rem;\r\n    border-top: 1px solid #e5e7eb;\r\n}\r\n\r\n.pagination-info {\r\n    color: #6b7280;\r\n    font-size: 0.875rem;\r\n}\r\n\r\n.pagination-controls {\r\n    display: flex;\r\n    gap: 0.5rem;\r\n}\r\n\r\n.pagination-btn {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 0.25rem;\r\n    padding: 0.5rem 0.75rem;\r\n    border: 1px solid #d1d5db;\r\n    background: white;\r\n    color: #374151;\r\n    border-radius: 6px;\r\n    cursor: pointer;\r\n    transition: all 0.2s ease;\r\n    font-size: 0.875rem;\r\n}\r\n\r\n.pagination-btn:hover:not(:disabled) {\r\n    background: #f3f4f6;\r\n    border-color: #6366f1;\r\n    color: #6366f1;\r\n}\r\n\r\n.pagination-btn:disabled {\r\n    opacity: 0.5;\r\n    cursor: not-allowed;\r\n}\r\n\r\n.pagination-btn.active {\r\n    background: #6366f1;\r\n    color: white;\r\n    border-color: #6366f1;\r\n}\r\n\r\n/* ===== SEM DADOS ===== */\r\n.no-data {\r\n    text-align: center;\r\n    padding: 3rem 1rem;\r\n}\r\n\r\n.no-data-content {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    gap: 1rem;\r\n    color: #6b7280;\r\n}\r\n\r\n.no-data-content i {\r\n    font-size: 3rem;\r\n    opacity: 0.5;\r\n}\r\n\r\n.no-data-content h4 {\r\n    color: #374151;\r\n    margin: 0;\r\n}\r\n\r\n.no-data-content p {\r\n    margin: 0;\r\n    font-size: 0.875rem;\r\n}\r\n\r\n/* ===== LINKS ESPECIAIS ===== */\r\n.phone-link {\r\n    color: #6366f1;\r\n    text-decoration: none;\r\n    font-weight: 500;\r\n}\r\n\r\n.phone-link:hover {\r\n    text-decoration: underline;\r\n}\r\n\r\n.contact-info strong {\r\n    color: #1f2937;\r\n}\r\n\r\n/* ===== LOADING OVERLAY ===== */\r\n.loading-overlay-historico {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background: rgba(255, 255, 255, 0.9);\r\n    backdrop-filter: blur(4px);\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    z-index: 1000;\r\n    border-radius: 24px;\r\n}\r\n\r\n/* ===== MODAIS ===== */\r\n.modal-overlay {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background: rgba(0, 0, 0, 0.6);\r\n    backdrop-filter: blur(4px);\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    z-index: 10000;\r\n    padding: 1rem;\r\n}\r\n\r\n.modal-content {\r\n    background: white;\r\n    border-radius: 16px;\r\n    box-shadow: 0 25px 50px rgba(0, 0, 0, 0.3);\r\n    width: 100%;\r\n    max-width: 600px;\r\n    max-height: 90vh;\r\n    overflow: hidden;\r\n    display: flex;\r\n    flex-direction: column;\r\n    animation: modalSlideIn 0.3s ease-out;\r\n}\r\n\r\n.modal-content.modal-large {\r\n    max-width: 900px;\r\n}\r\n\r\n@keyframes modalSlideIn {\r\n    from {\r\n        opacity: 0;\r\n        transform: translateY(-20px) scale(0.95);\r\n    }\r\n    to {\r\n        opacity: 1;\r\n        transform: translateY(0) scale(1);\r\n    }\r\n}\r\n\r\n.modal-header {\r\n    padding: 1.5rem 2rem;\r\n    border-bottom: 1px solid #e5e7eb;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    background: #f8fafc;\r\n}\r\n\r\n.modal-header h3 {\r\n    margin: 0;\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 0.75rem;\r\n    color: #1f2937;\r\n    font-size: 1.25rem;\r\n    font-weight: 600;\r\n}\r\n\r\n.modal-close {\r\n    width: 40px;\r\n    height: 40px;\r\n    border: none;\r\n    background: rgba(156, 163, 175, 0.1);\r\n    border-radius: 50%;\r\n    color: #6b7280;\r\n    cursor: pointer;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    transition: all 0.2s ease;\r\n    font-size: 1.125rem;\r\n}\r\n\r\n.modal-close:hover {\r\n    background: rgba(239, 68, 68, 0.1);\r\n    color: #dc2626;\r\n}\r\n\r\n.modal-body {\r\n    padding: 2rem;\r\n    overflow-y: auto;\r\n    flex: 1;\r\n}\r\n\r\n.modal-footer {\r\n    padding: 1.5rem 2rem;\r\n    border-top: 1px solid #e5e7eb;\r\n    display: flex;\r\n    gap: 1rem;\r\n    justify-content: flex-end;\r\n    background: #f8fafc;\r\n}\r\n\r\n/* ===== DETALHES ===== */\r\n.detalhes-grid {\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\r\n    gap: 1.5rem;\r\n}\r\n\r\n.detalhe-item {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 0.5rem;\r\n}\r\n\r\n.detalhe-item.full-width {\r\n    grid-column: 1 / -1;\r\n}\r\n\r\n.detalhe-item label {\r\n    font-weight: 600;\r\n    color: #374151;\r\n    font-size: 0.875rem;\r\n    text-transform: uppercase;\r\n    letter-spacing: 0.025em;\r\n}\r\n\r\n.detalhe-item span {\r\n    color: #1f2937;\r\n    font-size: 1rem;\r\n}\r\n\r\n.descricao-completa,\r\n.solucao-completa {\r\n    background: #f3f4f6;\r\n    padding: 1rem;\r\n    border-radius: 8px;\r\n    color: #374151;\r\n    line-height: 1.6;\r\n    margin: 0;\r\n    white-space: pre-wrap;\r\n}\r\n\r\n.solucao-completa {\r\n    background: #ecfdf5;\r\n    border-left: 4px solid #10b981;\r\n}\r\n\r\n/* ===== FORMULÁRIO DE EDIÇÃO ===== */\r\n.edicao-form {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 1.5rem;\r\n}\r\n\r\n.form-grid {\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\r\n    gap: 1.5rem;\r\n}\r\n\r\n.form-group {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 0.5rem;\r\n}\r\n\r\n.form-group.full-width {\r\n    grid-column: 1 / -1;\r\n}\r\n\r\n.form-group label {\r\n    font-weight: 500;\r\n    color: #374151;\r\n    font-size: 0.875rem;\r\n}\r\n\r\n.form-group input,\r\n.form-group select,\r\n.form-group textarea {\r\n    padding: 0.75rem;\r\n    border: 1px solid #d1d5db;\r\n    border-radius: 8px;\r\n    font-size: 0.875rem;\r\n    transition: all 0.3s ease;\r\n    background: white;\r\n}\r\n\r\n.form-group input:focus,\r\n.form-group select:focus,\r\n.form-group textarea:focus {\r\n    outline: none;\r\n    border-color: #6366f1;\r\n    box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);\r\n}\r\n\r\n.form-group textarea {\r\n    resize: vertical;\r\n    min-height: 100px;\r\n    font-family: inherit;\r\n}\r\n\r\n/* ===== BOTÕES DOS MODAIS ===== */\r\n.btn-cancel,\r\n.btn-save {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 0.5rem;\r\n    padding: 0.75rem 1.5rem;\r\n    border-radius: 8px;\r\n    font-weight: 500;\r\n    cursor: pointer;\r\n    transition: all 0.3s ease;\r\n    border: none;\r\n    font-size: 0.875rem;\r\n}\r\n\r\n.btn-cancel {\r\n    background: #f3f4f6;\r\n    color: #374151;\r\n    border: 1px solid #d1d5db;\r\n}\r\n\r\n.btn-cancel:hover:not(:disabled) {\r\n    background: #e5e7eb;\r\n    transform: translateY(-1px);\r\n}\r\n\r\n.btn-save {\r\n    background: linear-gradient(135deg, #6366f1, #4f46e5);\r\n    color: white;\r\n}\r\n\r\n.btn-save:hover:not(:disabled) {\r\n    transform: translateY(-1px);\r\n    box-shadow: 0 8px 25px rgba(99, 102, 241, 0.3);\r\n}\r\n\r\n.btn-save:disabled,\r\n.btn-cancel:disabled {\r\n    opacity: 0.6;\r\n    cursor: not-allowed;\r\n}\r\n\r\n/* ===== RESPONSIVIDADE ===== */\r\n@media (max-width: 768px) {\r\n    .filtros-grid {\r\n        grid-template-columns: 1fr;\r\n    }\r\n    \r\n    .resultados-header {\r\n        flex-direction: column;\r\n        gap: 1rem;\r\n        align-items: flex-start;\r\n    }\r\n    \r\n    .table-container {\r\n        overflow-x: auto;\r\n    }\r\n    \r\n    .pagination-container {\r\n        flex-direction: column;\r\n        gap: 1rem;\r\n        align-items: center;\r\n    }\r\n    \r\n    .pagination-controls {\r\n        flex-wrap: wrap;\r\n        justify-content: center;\r\n    }\r\n    \r\n    .modal-content {\r\n        max-width: 95vw;\r\n        margin: 0.5rem;\r\n    }\r\n    \r\n    .modal-header,\r\n    .modal-body,\r\n    .modal-footer {\r\n        padding: 1rem;\r\n    }\r\n    \r\n    .detalhes-grid {\r\n        grid-template-columns: 1fr;\r\n        gap: 1rem;\r\n    }\r\n    \r\n    .form-grid {\r\n        grid-template-columns: 1fr;\r\n        gap: 1rem;\r\n    }\r\n    \r\n    .modal-footer {\r\n        flex-direction: column;\r\n    }\r\n}\r\n`;\r\n\r\nif (!document.querySelector('#historico-styles')) {\r\n    historicoStyles.id = 'historico-styles';\r\n    document.head.appendChild(historicoStyles);\r\n}\r\n\r\n// Função de renderização\r\nfunction renderHistoricoReact() {\r\n    console.log('🔍 Debug - Tentando renderizar HistoricoReact');\r\n    console.log('🔍 Debug - Dados:', window.historicoData);\r\n    \r\n    const container = document.getElementById('historico-react-root');\r\n    console.log('🔍 Debug - Container encontrado:', container);\r\n    \r\n    if (container && window.historicoData && typeof React !== 'undefined' && typeof ReactDOM !== 'undefined') {\r\n        console.log('✅ Todos os requisitos atendidos, inicializando React...');\r\n        const root = ReactDOM.createRoot ? ReactDOM.createRoot(container) : null;\r\n        \r\n        if (root) {\r\n            // React 18\r\n            console.log('✅ Renderizando com React 18');\r\n            root.render(React.createElement(HistoricoReact, window.historicoData));\r\n        } else {\r\n            // React 17\r\n            console.log('✅ Renderizando com React 17');\r\n            ReactDOM.render(\r\n                React.createElement(HistoricoReact, window.historicoData),\r\n                container\r\n            );\r\n        }\r\n    } else {\r\n        console.error('❌ Erro: Container ou dados não encontrados', {\r\n            container: container,\r\n            dados: window.historicoData\r\n        });\r\n        \r\n        // Fallback simples\r\n        if (container) {\r\n            container.innerHTML = `\r\n                <div style=\"padding: 2rem; text-align: center; background: white; border-radius: 12px; margin: 2rem;\">\r\n                    <div style=\"color: #dc2626; font-size: 3rem; margin-bottom: 1rem;\">⚠️</div>\r\n                    <h3 style=\"color: #374151; margin-bottom: 1rem;\">Erro ao carregar histórico</h3>\r\n                    <p style=\"color: #6b7280; margin-bottom: 2rem;\">\r\n                        Não foi possível carregar o componente de histórico.\r\n                    </p>\r\n                    <button onclick=\"window.location.reload()\" style=\"\r\n                        background: #6366f1; \r\n                        color: white; \r\n                        padding: 0.75rem 1.5rem; \r\n                        border: none; \r\n                        border-radius: 8px; \r\n                        cursor: pointer;\r\n                        font-weight: 500;\r\n                    \">\r\n                        🔄 Recarregar Página\r\n                    </button>\r\n                </div>\r\n            `;\r\n        }\r\n    }\r\n}\r\n\r\n// Exportar o componente globalmente (para compatibilidade)\r\nwindow.HistoricoReact = HistoricoReact;\r\n\r\n// Exportar como módulo ES6\r\nif (typeof module !== 'undefined' && module.exports) {\r\n    module.exports = HistoricoReact;\r\n}\r\n\r\n// Inicializar quando DOM estiver pronto\r\nif (document.readyState === 'loading') {\r\n    document.addEventListener('DOMContentLoaded', renderHistoricoReact);\r\n} else {\r\n    renderHistoricoReact();\r\n}\r\n\r\n// Export para ES6 modules\r\nexport default HistoricoReact;\r\n\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.hmd = (module) => {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: () => {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","// Entry point para o bundle do Histórico React\r\nconsole.log('🚀 Carregando bundle do HistoricoReact...');\r\n\r\n// Importar o componente HistoricoReact\r\nimport '../components/HistoricoReact.js';\r\n\r\nconsole.log('✅ Bundle do HistoricoReact carregado com sucesso');\r\n"],"names":["e","t","r","Symbol","n","iterator","o","toStringTag","i","c","prototype","Generator","u","Object","create","_regeneratorDefine2","f","p","y","G","v","a","d","bind","length","l","TypeError","call","done","value","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","m","defineProperty","enumerable","configurable","writable","_invoke","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","_toConsumableArray","Array","isArray","_arrayLikeToArray","_arrayWithoutHoles","from","_iterableToArray","toString","slice","constructor","name","test","_unsupportedIterableToArray","_nonIterableSpread","ownKeys","keys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","push","_objectSpread","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","_defineProperties","_toPropertyKey","key","_isNativeReflectConstruct","Boolean","valueOf","Reflect","construct","_getPrototypeOf","_setPrototypeOf","_typeof","toPrimitive","String","_toPrimitive","HistoricoReact","props","_this","_classCallCheck","ReferenceError","_assertThisInitialized","_possibleConstructorReturn","_callSuper","formContainer","document","querySelector","style","opacity","transform","setTimeout","transition","campo","valor","setState","prevState","filtros","aplicarFiltros","_this$state","state","chamadas","chamadasFiltradas","busca","toLowerCase","chamada","nome_contato","includes","telefone","unidade_solicitante","nome","unidade_executante","descricao","nome_atendente","tipo","tipo_chamada","status","data_inicio","data_fim","currentPage","field","_this$state2","sortField","sortDirection","newDirection","sortChamadas","_this$state3","sorted","sort","b","aValue","bValue","page","chamadaId","selectedChamadas","id","concat","currentPageChamadas","getCurrentPageChamadas","every","some","newSelected","map","_this$state4","itemsPerPage","startIndex","endIndex","_this$state5","Math","ceil","exportUrl","urls","params","URLSearchParams","append","export_pdf","export_excel","export_csv","fullUrl","window","open","showExportOptions","showNotification","toUpperCase","message","type","undefined","notification","createElement","className","innerHTML","notificationsArea","prepend","appendChild","parentNode","remove","_ref","_callee","response","result","_t","_context","isLoading","fetch","method","headers","ok","json","success","chamadaSelecionada","data","showDetalhesModal","console","error","_x","_ref2","_callee2","_t2","_context2","dadosEdicao","showEditarModal","_x2","_callee3","_t3","_context3","unidade","salvandoEdicao","csrfToken","body","JSON","stringify","label","class","_inherits","React","Component","log","this","initializeAnimations","_this2","_this$state6","opcoes","totalPages","getTotalPages","allCurrentPageSelected","onClick","limparFiltros","onChange","handleFiltroChange","target","placeholder","tipos_chamada","status_choices","handleExport","checked","selectAllChamadas","handleSort","colSpan","statusInfo","formatStatus","toggleChamadaSelection","data_criacao","href","title","verDetalhes","abrirEdicao","disabled","handlePageChange","min","_","pageNum","fecharModais","stopPropagation","codigo","funcao","setor","municipio","cnes","contato_telefonico_cnes","usuario_criador","solucao","data_atualizacao","onSubmit","preventDefault","salvarEdicao","htmlFor","atualizarDadosEdicao","required","rows","Fragment","historicoStyles","renderHistoricoReact","historicoData","container","getElementById","ReactDOM","root","createRoot","render","dados","textContent","head","module","exports","readyState","addEventListener","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","loaded","__webpack_modules__","hmd","children","set","Error"],"sourceRoot":""}