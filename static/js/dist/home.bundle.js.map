{"version":3,"file":"home.bundle.js","mappings":"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","sources":["webpack://registro-chamados/external var \"ReactDOM\"","webpack://registro-chamados/./node_modules/react-dom/client.js","webpack://registro-chamados/webpack/bootstrap","webpack://registro-chamados/webpack/runtime/compat get default export","webpack://registro-chamados/webpack/runtime/define property getters","webpack://registro-chamados/webpack/runtime/hasOwnProperty shorthand","webpack://registro-chamados/external var \"React\"","webpack://registro-chamados/./static/js/components/HomeReact.js","webpack://registro-chamados/./static/js/entries/home.js"],"sourcesContent":["module.exports = ReactDOM;","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = React;","import React, { useState, useEffect } from 'react';\n\n    function HomeReact(props) {\n    // Adicionando valores padrão para evitar erro caso usuario ou estatisticas venham undefined\n    const { usuario = {}, estatisticas = {}, ultimas_unidades = [], ultimas_chamadas = [] } = props;\n    const [currentTime, setCurrentTime] = useState(new Date());\n\n        // Atualizar hora em tempo real\n    useEffect(() => {\n            const timer = setInterval(() => {\n                setCurrentTime(new Date());\n            }, 1000);\n            return () => clearInterval(timer);\n        }, []);\n\n        // Função para formatar data e hora\n        const formatDateTime = (date) => {\n            return date.toLocaleString('pt-BR', {\n                weekday: 'long',\n                year: 'numeric',\n                month: 'long',\n                day: 'numeric',\n                hour: '2-digit',\n                minute: '2-digit',\n                second: '2-digit'\n            });\n        };\n\n        // Função para obter saudação baseada na hora\n        const getSaudacao = () => {\n            const hora = currentTime.getHours();\n            if (hora < 12) return 'Bom dia';\n            if (hora < 18) return 'Boa tarde';\n            return 'Boa noite';\n        };\n\n        // Renderizar card de estatística principal\n        const renderStatCard = (icon, number, label, description, colorClass, trend = '+') => (\n            React.createElement('div', { className: `stat-card-modern ${colorClass}` },\n                React.createElement('div', { className: 'stat-card-bg' }),\n                React.createElement('div', { className: 'stat-header' },\n                    React.createElement('div', { className: 'stat-icon-container' },\n                        React.createElement('div', { className: 'stat-icon-modern' },\n                            React.createElement('i', { className: icon }),\n                            React.createElement('div', { className: 'icon-pulse-ring' })\n                        )\n                    ),\n                    React.createElement('div', { className: 'stat-trend positive' },\n                        React.createElement('i', { className: 'fas fa-arrow-up' }),\n                        React.createElement('span', null, `${trend}`)\n                    )\n                ),\n                React.createElement('div', { className: 'stat-content' },\n                    React.createElement('div', { className: 'stat-number-large' }, number),\n                    React.createElement('div', { className: 'stat-label-modern' }, label),\n                    React.createElement('div', { className: 'stat-description' }, description)\n                ),\n                React.createElement('div', { className: 'stat-footer' },\n                    React.createElement('div', { className: 'stat-progress' },\n                        React.createElement('div', { className: 'progress-bar' },\n                            React.createElement('div', { \n                                className: 'progress-fill',\n                                style: { width: '85%' }\n                            })\n                        )\n                    )\n                )\n            )\n        );\n\n        // Renderizar mini estatística\n        const renderMiniStat = (icon, number, label, colorClass) => (\n            React.createElement('div', { className: `mini-stat-card ${colorClass}` },\n                React.createElement('div', { className: 'mini-stat-icon' },\n                    React.createElement('i', { className: icon })\n                ),\n                React.createElement('div', { className: 'mini-stat-content' },\n                    React.createElement('div', { className: 'mini-stat-number' }, number),\n                    React.createElement('div', { className: 'mini-stat-label' }, label)\n                )\n            )\n        );\n\n        // Renderizar card de menu\n        const renderMenuCard = (href, icon, title, description, badge, badgeClass = '', features = [], cardClass = '') => (\n            React.createElement('a', { \n                href: href, \n                className: `menu-card-modern ${cardClass}`,\n                style: cardClass === 'disabled' ? { pointerEvents: 'none' } : {}\n            },\n                React.createElement('div', { className: 'menu-card-bg' }),\n                React.createElement('div', { className: 'menu-card-header' },\n                    React.createElement('div', { className: 'menu-icon-modern' },\n                        React.createElement('i', { className: icon })\n                    ),\n                    badge && React.createElement('div', { className: `menu-badge ${badgeClass}` }, badge)\n                ),\n                React.createElement('div', { className: 'menu-card-content' },\n                    React.createElement('h3', { className: 'menu-title' }, title),\n                    React.createElement('p', { className: 'menu-description' }, description),\n                    features.length > 0 && React.createElement('div', { className: 'menu-features' },\n                        features.map((feature, index) => \n                            React.createElement('span', { \n                                key: index, \n                                className: `feature-tag ${cardClass === 'disabled' ? 'disabled' : ''}` \n                            }, feature)\n                        )\n                    )\n                ),\n                React.createElement('div', { className: 'menu-arrow' },\n                    React.createElement('i', { \n                        className: cardClass === 'disabled' ? 'fas fa-lock' : 'fas fa-arrow-right' \n                    })\n                )\n            )\n        );\n\n        return React.createElement('div', { className: 'home-react-container' },\n            // Background animado\n            React.createElement('div', { className: 'animated-background' },\n                React.createElement('div', { className: 'floating-shape shape-1' }),\n                React.createElement('div', { className: 'floating-shape shape-2' }),\n                React.createElement('div', { className: 'floating-shape shape-3' })\n            ),\n\n            // Container principal\n            React.createElement('div', { className: 'main-container' },\n                // Breadcrumb\n                React.createElement('div', { className: 'breadcrumb-container' },\n                    React.createElement('nav', { className: 'breadcrumb-modern' },\n                        React.createElement('div', { className: 'breadcrumb-item active' },\n                            React.createElement('i', { className: 'fas fa-home' }),\n                            React.createElement('span', null, 'Dashboard')\n                        )\n                    )\n                ),\n\n                // Header principal melhorado\n                React.createElement('div', { className: 'hero-section' },\n                    React.createElement('div', { className: 'hero-content' },\n                        React.createElement('div', { className: 'hero-main' },\n                            React.createElement('div', { className: 'welcome-badge' },\n                                React.createElement('i', { className: 'fas fa-user-md' }),\n                                React.createElement('span', null, 'Bem-vindo ao Sistema')\n                            ),\n                            React.createElement('h1', { className: 'hero-title' },\n                            `${getSaudacao()}, ${usuario.first_name || usuario.username || 'Usuário'}!`\n                            ),\n                            React.createElement('p', { className: 'hero-subtitle' },\n                                'Sistema de Registro de Chamadas Médicas'\n                            ),\n                            React.createElement('div', { className: 'hero-time' },\n                                React.createElement('i', { className: 'fas fa-clock' }),\n                                React.createElement('span', null, formatDateTime(currentTime))\n                            )\n                        ),\n                        React.createElement('div', { \n                            className: 'user-profile-section',\n                            'data-tooltip': usuario.avatar_url ? 'Clique para alterar sua foto' : 'Clique para adicionar sua foto'\n                        },\n                            usuario.avatar_url ?\n                                React.createElement('img', {\n                                    src: usuario.avatar_url,\n                                    alt: 'Foto do usuário',\n                                    className: 'user-avatar-img',\n                                    onClick: () => window.openAvatarModal()\n                                }) :\n                                React.createElement('div', {\n                                    className: 'user-avatar-placeholder',\n                                    onClick: () => window.openAvatarModal()\n                                },\n                                    React.createElement('i', { className: 'fas fa-camera' }),\n                                    React.createElement('span', { className: 'avatar-text' }, 'Adicionar Foto')\n                                )\n                        )\n                    ),\n                    React.createElement('div', { className: 'hero-decoration' },\n                        React.createElement('div', { className: 'decoration-circle circle-1' }),\n                        React.createElement('div', { className: 'decoration-circle circle-2' }),\n                        React.createElement('div', { className: 'decoration-circle circle-3' })\n                    )\n                ),\n\n                // Estatísticas principais modernizadas\n                React.createElement('div', { className: 'stats-section' },\n                    React.createElement('div', { className: 'section-header' },\n                        React.createElement('h2', { className: 'section-title' },\n                            React.createElement('i', { className: 'fas fa-chart-line' }),\n                            'Estatísticas do Sistema'\n                        ),\n                        React.createElement('div', { className: 'section-subtitle' },\n                            'Visão geral em tempo real'\n                        )\n                    ),\n                    React.createElement('div', { className: 'stats-grid' },\n                        renderStatCard(\n                            'fas fa-hospital-alt',\n                            estatisticas.total_unidades,\n                            'Total de Unidades',\n                            'Cadastradas no sistema',\n                            'primary'\n                        ),\n                        renderStatCard(\n                            'fas fa-phone-alt',\n                            estatisticas.total_chamadas,\n                            'Total de Chamadas',\n                            'Registradas no sistema',\n                            'success'\n                        ),\n                        renderStatCard(\n                            'fas fa-calendar-day',\n                            estatisticas.chamadas_hoje,\n                            'Chamadas Hoje',\n                            'Registradas hoje',\n                            'warning'\n                        ),\n                        renderStatCard(\n                            'fas fa-calendar-alt',\n                            estatisticas.chamadas_mes,\n                            'Chamadas Este Mês',\n                            'Neste mês',\n                            'info'\n                        )\n                    )\n                ),\n\n                // Distribuição de unidades\n                React.createElement('div', { className: 'distribution-section' },\n                    React.createElement('div', { className: 'section-header' },\n                        React.createElement('h3', { className: 'section-title small' },\n                            React.createElement('i', { className: 'fas fa-chart-pie' }),\n                            'Distribuição de Unidades por Tipo'\n                        )\n                    ),\n                    React.createElement('div', { className: 'mini-stats-grid' },\n                        renderMiniStat(\n                            'fas fa-play-circle',\n                            estatisticas.executantes,\n                            'Executante',\n                            'executante'\n                        ),\n                        renderMiniStat(\n                            'fas fa-hand-paper',\n                            estatisticas.solicitantes,\n                            'Solicitante',\n                            'solicitante'\n                        ),\n                        renderMiniStat(\n                            'fas fa-hospital-user',\n                            estatisticas.executante_solicitante,\n                            'Ambos',\n                            'mista'\n                        )\n                    )\n                ),\n\n                // Menu de acesso rápido modernizado\n                React.createElement('div', { className: 'quick-access-section' },\n                    React.createElement('div', { className: 'section-header' },\n                        React.createElement('h2', { className: 'section-title' },\n                            React.createElement('i', { className: 'fas fa-th-large' }),\n                            'Acesso Rápido'\n                        ),\n                        React.createElement('div', { className: 'section-subtitle' },\n                            'Navegue rapidamente para as principais funcionalidades'\n                        )\n                    ),\n                    React.createElement('div', { className: 'menu-grid-modern' },\n                        renderMenuCard(\n                            '/accounts/unidades-saude/',\n                            'fas fa-hospital-alt',\n                            'Unidades de Saúde',\n                            'Gerencie e visualize todas as unidades de saúde cadastradas',\n                            estatisticas.total_unidades,\n                            'primary',\n                            ['Visualizar', 'Editar', 'Exportar']\n                        ),\n                        renderMenuCard(\n                            '/accounts/registro-chamada/',\n                            'fas fa-phone-volume',\n                            'Registro de Chamadas',\n                            'Registre suas chamadas e ligações',\n                            estatisticas.chamadas_hoje,\n                            'urgent',\n                            ['Emergência', 'Registro', 'Histórico']\n                        ),\n                        renderMenuCard(\n                            '/accounts/lista-telefonica/',\n                            'fas fa-phone-alt',\n                            'Lista Telefônica',\n                            'Consulte contatos e números de emergência',\n                            'Ativo',\n                            'available',\n                            ['Contatos', 'Emergência', 'Busca']\n                        ),\n                        renderMenuCard(\n                            '/accounts/historico/',\n                            'fas fa-history',\n                            'Histórico',\n                            'Visualize o histórico completo de atendimentos',\n                            'Ativo',\n                            'info',\n                            ['Histórico', 'Filtros', 'Relatórios']\n                        ),\n                        // Mostrar Relatórios apenas para administradores\n                        (() => {\n                            try {\n                                const user = window.REACT_CONFIG?.user;\n                                const isAdmin = user && (user.is_staff === true || user.is_superuser === true);\n                                console.log('🔍 Verificando Relatórios - User:', user, 'isAdmin:', isAdmin);\n                                \n                                if (!isAdmin) {\n                                    console.log('❌ Usuário não é admin - Relatórios oculto');\n                                    return null;\n                                }\n                                \n                                console.log('✅ Usuário é admin - Relatórios visível');\n                                return renderMenuCard(\n                                    '/accounts/sistema/relatorios/',\n                                    'fas fa-chart-bar',\n                                    'Relatórios',\n                                    'Acesse relatórios detalhados e estatísticas',\n                                    'Ativo',\n                                    'warning',\n                                    ['Gráficos', 'Estatísticas', 'Exportar']\n                                );\n                            } catch (error) {\n                                console.error('❌ Erro ao verificar permissões para Relatórios:', error);\n                                return null;\n                            }\n                        })(),\n                        // Mostrar Configurações apenas para administradores\n                        (() => {\n                            try {\n                                const user = window.REACT_CONFIG?.user;\n                                const isAdmin = user && (user.is_staff === true || user.is_superuser === true);\n                                console.log('🔍 Verificando Configurações - User:', user, 'isAdmin:', isAdmin);\n                                \n                                if (!isAdmin) {\n                                    console.log('❌ Usuário não é admin - Configurações oculto');\n                                    return null;\n                                }\n                                \n                                console.log('✅ Usuário é admin - Configurações visível');\n                                return renderMenuCard(\n                                    '/accounts/configuracoes/',\n                                    'fas fa-cog',\n                                    'Configurações',\n                                    'Gerencie configurações do sistema e usuários',\n                                    'Ativo',\n                                    'info',\n                                    ['Sistema', 'Usuários', 'Backup']\n                                );\n                            } catch (error) {\n                                console.error('❌ Erro ao verificar permissões para Configurações:', error);\n                                return null;\n                            }\n                        })()\n                    )\n                ),\n\n                // Atividades recentes modernizadas\n                React.createElement('div', { className: 'activities-section' },\n                    React.createElement('div', { className: 'section-header' },\n                        React.createElement('h2', { className: 'section-title' },\n                            React.createElement('i', { className: 'fas fa-clock' }),\n                            'Atividades Recentes'\n                        ),\n                        React.createElement('div', { className: 'section-subtitle' },\n                            'Últimas atualizações do sistema'\n                        )\n                    ),\n                    React.createElement('div', { className: 'activities-grid' },\n                        // Últimas unidades\n                        React.createElement('div', { className: 'activity-panel' },\n                            React.createElement('div', { className: 'panel-header' },\n                                React.createElement('h3', { className: 'panel-title' },\n                                    React.createElement('i', { className: 'fas fa-hospital-alt' }),\n                                    'Unidades Recentes'\n                                ),\n                                React.createElement('a', { \n                                    href: '/accounts/unidades-saude/', \n                                    className: 'view-all-btn' \n                                },\n                                    'Ver todas ',\n                                    React.createElement('i', { className: 'fas fa-arrow-right' })\n                                )\n                            ),\n                            React.createElement('div', { className: 'activity-list' },\n                                ultimas_unidades.length > 0 ? \n                                    ultimas_unidades.slice(0, 3).map((unidade, index) =>\n                                        React.createElement('div', { \n                                            key: index, \n                                            className: 'activity-item-modern' \n                                        },\n                                            React.createElement('div', { \n                                                className: `activity-icon ${unidade.tipo.toLowerCase()}` \n                                            },\n                                                React.createElement('i', { className: 'fas fa-hospital' })\n                                            ),\n                                            React.createElement('div', { className: 'activity-content' },\n                                                React.createElement('div', { className: 'activity-title' }, \n                                                    unidade.nome\n                                                ),\n                                                React.createElement('div', { className: 'activity-meta' },\n                                                    React.createElement('span', { className: 'activity-type' }, \n                                                        unidade.tipo_display || unidade.tipo\n                                                    ),\n                                                    React.createElement('span', { className: 'activity-date' }, \n                                                        new Date(unidade.created_at).toLocaleDateString('pt-BR')\n                                                    )\n                                                )\n                                            ),\n                                            React.createElement('a', { \n                                                href: `/accounts/unidades-saude/${unidade.id}/visualizar/`,\n                                                className: 'activity-action'\n                                            },\n                                                React.createElement('i', { className: 'fas fa-eye' })\n                                            )\n                                        )\n                                    ) :\n                                    React.createElement('div', { className: 'empty-state' },\n                                        React.createElement('i', { className: 'fas fa-inbox' }),\n                                        React.createElement('span', null, 'Nenhuma unidade cadastrada ainda')\n                                    )\n                            )\n                        ),\n\n                        // Últimas chamadas\n                        React.createElement('div', { className: 'activity-panel' },\n                            React.createElement('div', { className: 'panel-header' },\n                                React.createElement('h3', { className: 'panel-title' },\n                                    React.createElement('i', { className: 'fas fa-phone-volume' }),\n                                    'Chamadas Recentes'\n                                ),\n                                React.createElement('a', { \n                                    href: '/accounts/historico/', \n                                    className: 'view-all-btn' \n                                },\n                                    'Ver todas ',\n                                    React.createElement('i', { className: 'fas fa-arrow-right' })\n                                )\n                            ),\n                            React.createElement('div', { className: 'activity-list' },\n                                ultimas_chamadas.length > 0 ? \n                                    ultimas_chamadas.slice(0, 3).map((chamada, index) =>\n                                        React.createElement('div', { \n                                            key: index, \n                                            className: 'activity-item-modern' \n                                        },\n                                            React.createElement('div', { \n                                                className: `activity-icon chamada ${chamada.tipo_chamada === 'EMERGENCIA' ? 'emergency' : 'normal'}` \n                                            },\n                                                React.createElement('i', { className: 'fas fa-phone' })\n                                            ),\n                                            React.createElement('div', { className: 'activity-content' },\n                                                React.createElement('div', { className: 'activity-title' }, \n                                                    chamada.nome_contato\n                                                ),\n                                                React.createElement('div', { className: 'activity-meta' },\n                                                    React.createElement('span', { className: 'activity-type' }, \n                                                        chamada.tipo_chamada_display || chamada.tipo_chamada\n                                                    ),\n                                                    React.createElement('span', { className: 'activity-date' }, \n                                                        new Date(chamada.data_criacao).toLocaleDateString('pt-BR')\n                                                    )\n                                                )\n                                            ),\n                                            React.createElement('div', { className: 'activity-status' },\n                                                React.createElement('span', { \n                                                    className: `status-badge ${chamada.status === 'CONCLUIDO' ? 'success' : chamada.status === 'EM_ANDAMENTO' ? 'warning' : 'info'}`\n                                                }, chamada.status_display || chamada.status)\n                                            )\n                                        )\n                                    ) :\n                                    React.createElement('div', { className: 'empty-state' },\n                                        React.createElement('i', { className: 'fas fa-phone-slash' }),\n                                        React.createElement('span', null, 'Nenhuma chamada registrada ainda')\n                                    )\n                            )\n                        )\n                    )\n                )\n            )\n        );\n    }\n\nexport default HomeReact; ","import React from 'react';\r\nimport { createRoot } from 'react-dom/client';\r\nimport HomeReact from '../components/HomeReact';\r\n\r\n// Exportar componente para window (para testes e uso global)\r\nwindow.HomeReact = HomeReact;\r\n\r\n// Renderizar automaticamente se container existir\r\nconst rootDiv = document.getElementById('home-react-root');\r\nif (rootDiv) {\r\n  const root = createRoot(rootDiv);\r\n  root.render(React.createElement(HomeReact));\r\n}"],"names":["module","exports","ReactDOM","m","createRoot","hydrateRoot","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","React","props","_props$usuario","usuario","_props$estatisticas","estatisticas","_props$ultimas_unidad","ultimas_unidades","_props$ultimas_chamad","ultimas_chamadas","_useState2","useState","Date","currentTime","setCurrentTime","useEffect","timer","setInterval","clearInterval","hora","renderStatCard","icon","number","label","description","colorClass","trend","arguments","length","className","concat","style","width","renderMiniStat","renderMenuCard","href","title","badge","badgeClass","features","cardClass","pointerEvents","map","feature","index","getHours","first_name","username","toLocaleString","weekday","year","month","day","hour","minute","second","avatar_url","src","alt","onClick","window","openAvatarModal","total_unidades","total_chamadas","chamadas_hoje","chamadas_mes","executantes","solicitantes","executante_solicitante","_window$REACT_CONFIG","user","REACT_CONFIG","isAdmin","is_staff","is_superuser","console","log","error","_window$REACT_CONFIG2","slice","unidade","tipo","toLowerCase","nome","tipo_display","created_at","toLocaleDateString","id","chamada","tipo_chamada","nome_contato","tipo_chamada_display","data_criacao","status","status_display","HomeReact","rootDiv","document","getElementById","render"],"sourceRoot":""}