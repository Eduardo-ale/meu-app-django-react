{"version":3,"file":"registro-chamada.bundle.js","mappings":"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","sources":["webpack://registro-chamados/./static/js/components/RegistroChamadaReact.js","webpack://registro-chamados/external var \"ReactDOM\"","webpack://registro-chamados/./node_modules/react-dom/client.js","webpack://registro-chamados/webpack/bootstrap","webpack://registro-chamados/webpack/runtime/compat get default export","webpack://registro-chamados/webpack/runtime/define property getters","webpack://registro-chamados/webpack/runtime/hasOwnProperty shorthand","webpack://registro-chamados/external var \"React\"","webpack://registro-chamados/./static/js/entries/registro-chamada.js"],"sourcesContent":["// Componente React para Registro de Chamadas - Versão Melhorada\n(function() {\n    'use strict';\n\n    function RegistroChamadaReact(props) {\n        const { usuario, dataAtual, csrfToken } = props;\n        \n        // Estados do formulário\n        const [formData, setFormData] = React.useState({\n            nome: '',\n            telefone: '',\n            funcao: '',\n            setor: '',\n            tipo_chamada: '',\n            status: '',\n            descricao: '',\n            unidade: '',\n            municipio: '',\n            cnes: '',\n            contato_telefonico_cnes: '',\n            nome_atendente: '',\n            solucao: ''\n        });\n\n        const [isLoading, setIsLoading] = React.useState(false);\n        const [errors, setErrors] = React.useState({});\n        const [municipioSugestoes, setMunicipioSugestoes] = React.useState([]);\n        const [showMunicipioDropdown, setShowMunicipioDropdown] = React.useState(false);\n        const [currentDateTime, setCurrentDateTime] = React.useState(new Date());\n        const [progress, setProgress] = React.useState({ percent: 0, filled: 0, total: 13 });\n        const [unidadeVerificada, setUnidadeVerificada] = React.useState(null);\n        const [verificandoUnidade, setVerificandoUnidade] = React.useState(false);\n        const [dadosCNES, setDadosCNES] = React.useState(null);\n        const [consultandoCNES, setConsultandoCNES] = React.useState(false);\n\n        // Estados adicionais para modal CNES\n        const [modalCNESAberto, setModalCNESAberto] = React.useState(false);\n        \n        // Estados para autocomplete de municípios\n        const [municipioSearching, setMunicipioSearching] = React.useState(false);\n        const [municipioResults, setMunicipioResults] = React.useState([]);\n        const [municipioDropdownOpen, setMunicipioDropdownOpen] = React.useState(false);\n        const [municipioDebounceTimer, setMunicipioDebounceTimer] = React.useState(null);\n        const [municipioHelpText, setMunicipioHelpText] = React.useState('⚡ Digite 2+ caracteres • 🔄 Busca inteligente • 📊 Máx. 10 resultados');\n\n        // Atualizar data/hora a cada segundo\n        React.useEffect(() => {\n            const timer = setInterval(() => {\n                setCurrentDateTime(new Date());\n            }, 1000);\n            return () => clearInterval(timer);\n        }, []);\n\n        // Calcular progresso do formulário\n        React.useEffect(() => {\n            const requiredFields = [\n                'nome', 'telefone', 'tipo_chamada', 'status', 'descricao',\n                'unidade', 'municipio', 'nome_atendente'\n            ];\n            \n            const filledFields = requiredFields.filter(field => \n                formData[field] && formData[field].trim() !== ''\n            ).length;\n            \n            const percent = Math.round((filledFields / requiredFields.length) * 100);\n            \n            setProgress({\n                percent,\n                filled: filledFields,\n                total: requiredFields.length\n            });\n        }, [formData]);\n\n        // Limpar timer de debounce do município ao desmontar\n        React.useEffect(() => {\n            return () => {\n                if (municipioDebounceTimer) {\n                    clearTimeout(municipioDebounceTimer);\n                }\n            };\n        }, [municipioDebounceTimer]);\n\n        // Monitorar estados do dropdown de municípios\n        React.useEffect(() => {\n            console.log('🔄 Estado do dropdown mudou:', {\n                dropdownOpen: municipioDropdownOpen,\n                resultsCount: municipioResults.length,\n                results: municipioResults\n            });\n        }, [municipioDropdownOpen, municipioResults]);\n\n        // Fechar modal com tecla ESC\n        React.useEffect(() => {\n            const handleEsc = (event) => {\n                if (event.keyCode === 27 && modalCNESAberto) {\n                    fecharModalCNES();\n                }\n            };\n            \n            if (modalCNESAberto) {\n                document.addEventListener('keydown', handleEsc);\n                // Impedir scroll do body quando modal está aberto\n                document.body.style.overflow = 'hidden';\n            } else {\n                document.body.style.overflow = 'auto';\n            }\n            \n            return () => {\n                document.removeEventListener('keydown', handleEsc);\n                document.body.style.overflow = 'auto';\n            };\n        }, [modalCNESAberto]);\n\n        // Função para obter CSRF token\n        const getCsrfToken = () => {\n            const csrfInput = document.querySelector('[name=csrfmiddlewaretoken]');\n            if (csrfInput) {\n                return csrfInput.value;\n            }\n            \n            const csrfCookie = document.cookie\n                .split('; ')\n                .find(row => row.startsWith('csrftoken='));\n            \n            if (csrfCookie) {\n                return csrfCookie.split('=')[1];\n            }\n            \n            return csrfToken; // Usar o token passado via props\n        };\n\n        // Verificar unidade no sistema (EXATAMENTE como na página original)\n        const verificarUnidade = async (nomeUnidade) => {\n            if (!nomeUnidade || nomeUnidade.trim() === '') {\n                setUnidadeVerificada(null);\n                return { sucesso: false, erro: 'Nome da unidade não pode estar vazio' };\n            }\n\n            setVerificandoUnidade(true);\n            \n            try {\n                showToast('Verificando se a unidade está cadastrada no sistema...', 'info');\n                \n                const response = await fetch('/accounts/api/unidade-saude/', {\n                    method: 'POST',\n                    headers: {\n                        'Accept': 'application/json',\n                        'Content-Type': 'application/json',\n                        'X-CSRFToken': getCsrfToken(),\n                        'X-Requested-With': 'XMLHttpRequest'\n                    },\n                    body: JSON.stringify({\n                        nome_unidade: nomeUnidade.trim()\n                    }),\n                    cache: 'no-cache'\n                });\n\n                console.log('Status da resposta:', response.status);\n\n                if (!response.ok) {\n                    if (response.status === 404) {\n                        try {\n                            const errorData = await response.json();\n                            console.warn('📋 Unidade não encontrada:', errorData);\n                            \n                            setUnidadeVerificada({\n                                encontrada: false,\n                                dados: null,\n                                unidadesDisponiveis: errorData.todas_unidades || [],\n                                unidadesSimilares: errorData.unidades_similares || []\n                            });\n                            \n                            return { \n                                sucesso: false, \n                                erro: errorData.erro || 'Unidade não encontrada',\n                                naoEncontrada: true,\n                                unidadesDisponiveis: errorData.todas_unidades || [],\n                                unidadesSimilares: errorData.unidades_similares || []\n                            };\n                        } catch (e) {\n                            setUnidadeVerificada({\n                                encontrada: false,\n                                dados: null\n                            });\n                            return { \n                                sucesso: false, \n                                erro: 'Unidade não encontrada',\n                                naoEncontrada: true \n                            };\n                        }\n                    }\n                    \n                    const errorText = await response.text();\n                    console.error('Erro na resposta:', errorText);\n                    setUnidadeVerificada({\n                        encontrada: false,\n                        dados: null\n                    });\n                    return { \n                        sucesso: false, \n                        erro: `Erro ${response.status}: ${response.statusText}` \n                    };\n                }\n\n                const resultado = await response.json();\n                console.log('Resultado da consulta:', resultado);\n\n                if (resultado.sucesso && resultado.unidade) {\n                    setUnidadeVerificada({\n                        encontrada: true,\n                        dados: resultado.unidade\n                    });\n                    \n                    // Preencher automaticamente os campos (como na página original)\n                    setFormData(prev => ({\n                        ...prev,\n                        municipio: resultado.unidade.municipio || prev.municipio,\n                        cnes: resultado.unidade.cnes || prev.cnes,\n                        contato_telefonico_cnes: resultado.unidade.telefone || prev.contato_telefonico_cnes\n                    }));\n\n                    showToast(`✅ Unidade \"${resultado.unidade.nome}\" encontrada no sistema!`, 'success');\n                    \n                    return {\n                        sucesso: true,\n                        unidade: resultado.unidade\n                    };\n                } else {\n                    setUnidadeVerificada({\n                        encontrada: false,\n                        dados: null,\n                        unidadesDisponiveis: resultado.todas_unidades || [],\n                        unidadesSimilares: resultado.unidades_similares || []\n                    });\n                    \n                    showToast('❌ Unidade não encontrada no sistema', 'error');\n                    \n                    return {\n                        sucesso: false,\n                        erro: resultado.erro || 'Unidade não encontrada no sistema',\n                        naoEncontrada: true,\n                        unidadesDisponiveis: resultado.todas_unidades || [],\n                        unidadesSimilares: resultado.unidades_similares || []\n                    };\n                }\n                \n            } catch (error) {\n                console.error('Erro detalhado na consulta da unidade:', error);\n                setUnidadeVerificada({\n                    encontrada: false,\n                    dados: null\n                });\n                showToast(`Erro de rede: ${error.message}`, 'error');\n                return { \n                    sucesso: false, \n                    erro: `Erro de rede: ${error.message}` \n                };\n            } finally {\n                setVerificandoUnidade(false);\n            }\n        };\n\n        // Consultar API CNES (EXATAMENTE como na página original)\n        const consultarCNES = async (codigoCNES) => {\n            // Limpar completamente o código CNES\n            let cnesLimpo = String(codigoCNES).replace(/[^0-9]/g, '');\n            \n            // Validar se tem exatamente 7 dígitos\n            if (cnesLimpo.length !== 7) {\n                console.warn('CNES inválido - deve ter 7 dígitos:', cnesLimpo);\n                setDadosCNES(null);\n                return { sucesso: false, erro: 'Código CNES deve ter exatamente 7 dígitos' };\n            }\n\n            // Construir URL de forma segura\n            const baseUrl = window.location.origin;\n            const apiPath = '/accounts/api/cnes/';\n            const fullUrl = `${baseUrl}${apiPath}${cnesLimpo}/`;\n            \n            console.log('=== DEBUG CONSULTA CNES ===');\n            console.log('Código original:', codigoCNES);\n            console.log('Código limpo:', cnesLimpo);\n            console.log('URL completa:', fullUrl);\n            console.log('=========================');\n\n            setConsultandoCNES(true);\n            \n            try {\n                showToast('Consultando CNES na base de dados do Ministério da Saúde...', 'info');\n                \n                const response = await fetch(fullUrl, {\n                    method: 'GET',\n                    headers: {\n                        'Accept': 'application/json',\n                        'Content-Type': 'application/json',\n                        'X-CSRFToken': getCsrfToken(),\n                        'X-Requested-With': 'XMLHttpRequest'\n                    },\n                    cache: 'no-cache'\n                });\n\n                console.log('Status da resposta:', response.status);\n                console.log('URL da requisição:', response.url);\n\n                if (!response.ok) {\n                    const errorText = await response.text();\n                    console.error('Erro na resposta:', errorText);\n                    \n                    if (response.status === 404) {\n                        setDadosCNES(null);\n                        showToast('❌ Código CNES não encontrado na base de dados do Ministério da Saúde', 'error');\n                        return { \n                            sucesso: false, \n                            erro: 'Código CNES não encontrado na base de dados do Ministério da Saúde' \n                        };\n                    }\n                    \n                    setDadosCNES(null);\n                    showToast(`❌ Erro ${response.status}: ${response.statusText}`, 'error');\n                    return { \n                        sucesso: false, \n                        erro: `Erro ${response.status}: ${response.statusText}` \n                    };\n                }\n\n                const resultado = await response.json();\n                console.log('Resultado da consulta CNES:', resultado);\n\n                if (resultado.sucesso || resultado.success) {\n                    // Armazenar dados CNES\n                    window.ultimosDadosCNES = resultado.dados || resultado.data;\n                    setDadosCNES(resultado.dados || resultado.data);\n                    \n                    // ABRIR MODAL CNES (como na página original)\n                    setModalCNESAberto(true);\n                    \n                    showToast('✅ CNES consultado com sucesso! Modal aberto com detalhes.', 'success');\n                } else {\n                    setDadosCNES(null);\n                    showToast('❌ Dados CNES não encontrados', 'error');\n                }\n\n                return resultado;\n                \n            } catch (error) {\n                console.error('Erro detalhado na consulta CNES:', error);\n                setDadosCNES(null);\n                showToast(`❌ Erro de rede: ${error.message}`, 'error');\n                return { \n                    sucesso: false, \n                    erro: `Erro de rede: ${error.message}` \n                };\n            } finally {\n                setConsultandoCNES(false);\n            }\n        };\n\n        // Manipular mudanças nos campos\n        const handleChange = (field, value) => {\n            setFormData(prev => ({\n                ...prev,\n                [field]: value\n            }));\n\n            // Limpar erro do campo\n            if (errors[field]) {\n                setErrors(prev => ({\n                    ...prev,\n                    [field]: null\n                }));\n            }\n\n            // Autocomplete para município\n            if (field === 'municipio') {\n                handleMunicipioSearch(value);\n            }\n\n            // Verificar unidade quando nome mudar\n            if (field === 'unidade') {\n                verificarUnidade(value);\n            }\n\n            // Consultar CNES quando código completo for digitado\n            if (field === 'cnes' && value.length === 7) {\n                consultarCNES(value);\n            } else if (field === 'cnes' && value.length !== 7) {\n                setDadosCNES(null);\n            }\n        };\n\n        // Função para buscar municípios via API com debounce\n        const handleMunicipioSearch = (query) => {\n            // Atualizar help text baseado no comprimento da query\n            if (query.length === 0) {\n                setMunicipioHelpText('⚡ Digite 2+ caracteres • 🔄 Busca inteligente • 📊 Máx. 10 resultados');\n                setMunicipioDropdownOpen(false);\n                setMunicipioResults([]);\n            } else if (query.length === 1) {\n                setMunicipioHelpText('⚡ Digite mais 1 caractere para iniciar a busca...');\n                setMunicipioDropdownOpen(false);\n            } else {\n                setMunicipioHelpText('🔄 Buscando municípios do MS...');\n                \n                // Limpar timer anterior se existir\n                if (municipioDebounceTimer) {\n                    clearTimeout(municipioDebounceTimer);\n                }\n                \n                // Configurar novo timer de debounce\n                const timer = setTimeout(() => {\n                    searchMunicipios(query);\n                }, 300);\n                \n                setMunicipioDebounceTimer(timer);\n            }\n        };\n\n        // Buscar municípios via API\n        const searchMunicipios = async (query) => {\n            console.log('🔍 Buscando municípios para:', query);\n            setMunicipioSearching(true);\n            \n            try {\n                const response = await fetch(`/api/municipios/autocomplete/?q=${encodeURIComponent(query)}`);\n                \n                if (!response.ok) {\n                    throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n                }\n                \n                const data = await response.json();\n                \n                console.log('📊 Resultados da API:', data);\n                console.log('📋 Municípios encontrados:', data.results);\n                console.log('📋 Número de resultados:', data.results?.length || 0);\n                \n                if (data.results && data.results.length > 0) {\n                    setMunicipioResults(data.results);\n                    setMunicipioDropdownOpen(true);\n                    setMunicipioHelpText(`✅ ${data.results.length} município(s) encontrado(s)`);\n                    console.log('✅ Dropdown aberto com', data.results.length, 'resultados');\n                } else {\n                    setMunicipioResults([]);\n                    setMunicipioDropdownOpen(false);\n                    setMunicipioHelpText('❌ Nenhum município encontrado no MS');\n                    console.log('❌ Nenhum resultado encontrado');\n                }\n                \n            } catch (error) {\n                console.error('❌ Erro ao buscar municípios:', error);\n                setMunicipioResults([]);\n                setMunicipioDropdownOpen(false);\n                setMunicipioHelpText('❌ Erro na busca. Tente novamente.');\n            } finally {\n                setMunicipioSearching(false);\n            }\n        };\n\n        // Selecionar município da lista\n        const selectMunicipio = (municipio) => {\n            handleChange('municipio', municipio);\n            setMunicipioDropdownOpen(false);\n            setMunicipioHelpText(`✅ Município selecionado: ${municipio}`);\n        };\n\n        // Validar formulário\n        const validateForm = () => {\n            const newErrors = {};\n            const requiredFields = {\n                nome: 'Nome do solicitante é obrigatório',\n                telefone: 'Telefone é obrigatório',\n                tipo_chamada: 'Tipo de chamada é obrigatório',\n                status: 'Status é obrigatório',\n                descricao: 'Descrição é obrigatória',\n                unidade: 'Nome da unidade é obrigatório',\n                municipio: 'Município é obrigatório',\n                nome_atendente: 'Nome do atendente é obrigatório'\n            };\n\n            for (const [field, message] of Object.entries(requiredFields)) {\n                if (!formData[field] || formData[field].trim() === '') {\n                    newErrors[field] = message;\n                }\n            }\n\n            // Validação específica para telefone\n            if (formData.telefone && !/^\\(\\d{2}\\)\\s\\d{4,5}-\\d{4}$/.test(formData.telefone)) {\n                newErrors.telefone = 'Formato de telefone inválido. Use: (XX) XXXXX-XXXX';\n            }\n\n            // Validação específica para CNES\n            if (formData.cnes && formData.cnes.length !== 7) {\n                newErrors.cnes = 'CNES deve ter exatamente 7 dígitos';\n            }\n\n            setErrors(newErrors);\n            return Object.keys(newErrors).length === 0;\n        };\n\n        // Submeter formulário (EXATAMENTE como na página original)\n        const handleSubmit = async (e) => {\n            e.preventDefault();\n            \n            console.log('=== INÍCIO DO SUBMIT ===');\n            console.log('Dados do formulário:', formData);\n            console.log('========================');\n            \n            if (!validateForm()) {\n                showToast('❌ Preencha todos os campos obrigatórios corretamente', 'error');\n                return;\n            }\n\n            setIsLoading(true);\n            \n            try {\n                showToast('📝 Registrando chamada no sistema...', 'info');\n                \n                // Preparar dados exatamente como na página original\n                const dadosParaEnvio = {\n                    // Dados do Solicitante\n                    nome: formData.nome.trim(),\n                    telefone: formData.telefone.trim(),\n                    funcao: formData.funcao.trim(),\n                    setor: formData.setor.trim(),\n                    \n                    // Dados da Unidade\n                    unidade: formData.unidade.trim(),\n                    municipio: formData.municipio.trim(),\n                    cnes: formData.cnes.trim(),\n                    contato_telefonico_cnes: formData.contato_telefonico_cnes.trim(),\n                    \n                    // Dados da Chamada\n                    tipo_chamada: formData.tipo_chamada,\n                    status: formData.status,\n                    nome_atendente: formData.nome_atendente.trim(),\n                    descricao: formData.descricao.trim(),\n                    solucao: formData.solucao.trim(),\n                    \n                    // Metadados\n                    data_registro: new Date().toISOString()\n                };\n                \n                console.log('Dados preparados para envio:', dadosParaEnvio);\n\n                const response = await fetch('/accounts/registro-chamada/', {\n                    method: 'POST',\n                    headers: {\n                        'Accept': 'application/json',\n                        'Content-Type': 'application/json',\n                        'X-CSRFToken': getCsrfToken(),\n                        'X-Requested-With': 'XMLHttpRequest'\n                    },\n                    body: JSON.stringify(dadosParaEnvio),\n                    cache: 'no-cache'\n                });\n\n                console.log('Status da resposta:', response.status);\n                console.log('Headers da resposta:', response.headers);\n\n                if (!response.ok) {\n                    const errorText = await response.text();\n                    console.error('Erro na resposta:', errorText);\n                    throw new Error(`Erro ${response.status}: ${response.statusText}`);\n                }\n\n                const result = await response.json();\n                console.log('Resultado:', result);\n\n                if (result.sucesso || result.success) {\n                    // Success feedback\n                    showToast('✅ Chamada registrada com sucesso no sistema!', 'success', 6000);\n                    \n                    // Limpar formulário\n                    setFormData({\n                        nome: '',\n                        telefone: '',\n                        funcao: '',\n                        setor: '',\n                        tipo_chamada: '',\n                        status: '',\n                        descricao: '',\n                        unidade: '',\n                        municipio: '',\n                        cnes: '',\n                        contato_telefonico_cnes: '',\n                        nome_atendente: '',\n                        solucao: ''\n                    });\n                    \n                    // Limpar verificações\n                    setUnidadeVerificada(null);\n                    setDadosCNES(null);\n                    setErrors({});\n                    \n                    // Scroll para o topo\n                    window.scrollTo({ top: 0, behavior: 'smooth' });\n                    \n                    console.log('✅ Formulário limpo e resetado com sucesso');\n                    \n                } else {\n                    throw new Error(result.erro || result.message || 'Erro desconhecido ao registrar chamada');\n                }\n                \n            } catch (error) {\n                console.error('Erro detalhado no submit:', error);\n                showToast(`❌ Erro ao registrar chamada: ${error.message}`, 'error', 8000);\n            } finally {\n                setIsLoading(false);\n                console.log('=== FIM DO SUBMIT ===');\n            }\n        };\n\n        // Sistema de Toasts (EXATAMENTE como na página original)\n        const showToast = (message, type = 'info', duration = 5000) => {\n            const toastContainer = document.getElementById('toast-container');\n            if (!toastContainer) return;\n\n            // Definir ícones por tipo\n            const icons = {\n                success: 'fa-check-circle',\n                error: 'fa-exclamation-circle',\n                warning: 'fa-exclamation-triangle',\n                info: 'fa-info-circle'\n            };\n\n            // Definir cores por tipo\n            const colors = {\n                success: '#10b981',\n                error: '#ef4444', \n                warning: '#f59e0b',\n                info: '#3b82f6'\n            };\n\n            const toast = document.createElement('div');\n            toast.className = `toast-notification toast-${type}`;\n            toast.style.cssText = `\n                background: rgba(255, 255, 255, 0.95);\n                backdrop-filter: blur(15px);\n                border-radius: 15px;\n                padding: 1rem 1.5rem;\n                margin-bottom: 1rem;\n                border: 1px solid rgba(255, 255, 255, 0.3);\n                box-shadow: 0 8px 30px rgba(0, 0, 0, 0.12);\n                display: flex;\n                align-items: center;\n                gap: 1rem;\n                min-width: 300px;\n                max-width: 500px;\n                animation: slideInRight 0.3s ease-out;\n                border-left: 4px solid ${colors[type]};\n            `;\n\n            toast.innerHTML = `\n                <div class=\"toast-icon\" style=\"color: ${colors[type]}; font-size: 1.2rem; flex-shrink: 0;\">\n                    <i class=\"fas ${icons[type]}\"></i>\n                </div>\n                <div class=\"toast-content\" style=\"flex: 1;\">\n                    <div class=\"toast-message\" style=\"color: #1f2937; font-weight: 500; line-height: 1.4;\">${message}</div>\n                </div>\n                <button class=\"toast-close\" style=\"background: none; border: none; color: #6b7280; cursor: pointer; font-size: 1.1rem; padding: 0;\" onclick=\"this.parentElement.remove()\">\n                    <i class=\"fas fa-times\"></i>\n                </button>\n            `;\n\n            toastContainer.appendChild(toast);\n\n            // Remover após duração especificada\n            const timer = setTimeout(() => {\n                if (toast.parentElement) {\n                    toast.style.animation = 'slideOutRight 0.3s ease-in';\n                    setTimeout(() => toast.remove(), 300);\n                }\n            }, duration);\n\n            // Pausar timer ao hover\n            toast.addEventListener('mouseenter', () => clearTimeout(timer));\n            toast.addEventListener('mouseleave', () => {\n                setTimeout(() => {\n                    if (toast.parentElement) {\n                        toast.style.animation = 'slideOutRight 0.3s ease-in';\n                        setTimeout(() => toast.remove(), 300);\n                    }\n                }, 1000);\n            });\n        };\n\n        // Sistema de Toast Manager (como na página original)\n        window.ToastManager = {\n            success: (message, duration = 4000) => showToast(message, 'success', duration),\n            error: (message, duration = 6000) => showToast(message, 'error', duration),\n            warning: (message, duration = 5000) => showToast(message, 'warning', duration),\n            info: (message, duration = 3000) => showToast(message, 'info', duration)\n        };\n\n        // Fechar modal CNES\n        const fecharModalCNES = () => {\n            setModalCNESAberto(false);\n        };\n\n        // Preencher formulário com dados do CNES (EXATAMENTE como na página original)\n        const preencherComDadosCNES = () => {\n            if (!dadosCNES) return;\n\n            try {\n                const nomeUnidade = dadosCNES.nome_fantasia || dadosCNES.nome || '';\n                const telefoneUnidade = dadosCNES.numero_telefone_estabelecimento || '';\n                const municipioUnidade = dadosCNES.descricao_municipio || dadosCNES.municipio || '';\n\n                // Preencher campos do formulário\n                setFormData(prev => ({\n                    ...prev,\n                    unidade: nomeUnidade,\n                    municipio: municipioUnidade,\n                    contato_telefonico_cnes: telefoneUnidade\n                }));\n\n                // Fechar modal\n                setModalCNESAberto(false);\n\n                // Feedback visual\n                showToast(`✅ Dados preenchidos automaticamente! Nome: \"${nomeUnidade}\", Telefone: \"${telefoneUnidade}\"`, 'success', 6000);\n\n                // Auto-verificar unidade se preenchida\n                if (nomeUnidade.trim() !== '') {\n                    setTimeout(() => {\n                        verificarUnidade(nomeUnidade);\n                    }, 1000);\n                }\n\n            } catch (error) {\n                console.error('Erro ao preencher dados do CNES:', error);\n                showToast('❌ Erro ao preencher dados automaticamente', 'error');\n            }\n        };\n\n        // Redirecionar para cadastro de unidade com dados do CNES\n        const redirecionarParaCadastroUnidade = () => {\n            if (!dadosCNES) {\n                showToast('❌ Nenhum dado do CNES disponível para pré-preenchimento', 'error');\n                return;\n            }\n\n            try {\n                // Construir URL com parâmetros dos dados do CNES\n                const params = new URLSearchParams();\n                \n                // Nome da unidade\n                const nomeUnidade = dadosCNES.nome_fantasia || dadosCNES.nome_razao_social || dadosCNES.nome || '';\n                if (nomeUnidade) params.set('nome', nomeUnidade);\n                \n                // CNES\n                const codigoCNES = dadosCNES.codigo_cnes || dadosCNES.codigo || '';\n                if (codigoCNES) params.set('cnes', codigoCNES);\n                \n                // Município\n                const municipio = dadosCNES.descricao_municipio || dadosCNES.municipio || '';\n                if (municipio) params.set('municipio', municipio);\n                \n                // Telefone\n                const telefone = dadosCNES.numero_telefone_estabelecimento || dadosCNES.telefone || '';\n                if (telefone) params.set('contato_telefonico', telefone);\n                \n                // Endereço\n                const endereco = dadosCNES.endereco_estabelecimento || dadosCNES.endereco || '';\n                if (endereco) params.set('endereco', endereco);\n\n                // Construir URL completa\n                const baseUrl = window.location.origin;\n                const createUrl = `${baseUrl}/accounts/unidades-saude/criar/?${params.toString()}`;\n                \n                console.log('🔄 Redirecionando para cadastro de unidade com dados:', {\n                    nome: nomeUnidade,\n                    cnes: codigoCNES,\n                    municipio: municipio,\n                    telefone: telefone,\n                    endereco: endereco,\n                    url: createUrl\n                });\n\n                // Redirecionar\n                window.location.href = createUrl;\n\n            } catch (error) {\n                console.error('Erro ao redirecionar para cadastro:', error);\n                showToast('❌ Erro ao redirecionar para cadastro de unidade', 'error');\n            }\n        };\n\n        // Formatar data e hora\n        const formatDateTime = (date) => {\n            return date.toLocaleString('pt-BR', {\n                weekday: 'long',\n                year: 'numeric',\n                month: 'long',\n                day: 'numeric',\n                hour: '2-digit',\n                minute: '2-digit',\n                second: '2-digit'\n            });\n        };\n\n        // Mascarar telefone\n        const maskTelefone = (value) => {\n            const cleaned = value.replace(/\\D/g, '');\n            if (cleaned.length <= 10) {\n                return cleaned.replace(/(\\d{2})(\\d{4})(\\d{4})/, '($1) $2-$3');\n            } else {\n                return cleaned.replace(/(\\d{2})(\\d{5})(\\d{4})/, '($1) $2-$3');\n            }\n        };\n\n        // Mascarar CNES\n        const maskCNES = (value) => {\n            return value.replace(/\\D/g, '').slice(0, 7);\n        };\n\n        // Função para limpar o formulário\n        const limparFormulario = () => {\n            setFormData({\n                nome: '',\n                telefone: '',\n                funcao: '',\n                setor: '',\n                tipo_chamada: '',\n                status: '',\n                descricao: '',\n                unidade: '',\n                municipio: '',\n                cnes: '',\n                contato_telefonico_cnes: '',\n                nome_atendente: '',\n                solucao: ''\n            });\n            setUnidadeVerificada(null);\n            setDadosCNES(null);\n            setErrors({});\n            showToast('Formulário limpo com sucesso!', 'success');\n            window.scrollTo({ top: 0, behavior: 'smooth' });\n        };\n\n        return React.createElement('div', { className: 'main-container' },\n            React.createElement('div', { className: 'content-wrapper' },\n                // Breadcrumb\n                React.createElement('div', { className: 'modern-breadcrumb' },\n                    React.createElement('nav', { className: 'breadcrumb-nav' },\n                        React.createElement('a', { \n                            href: '/accounts/', \n                            className: 'breadcrumb-link' \n                        },\n                            React.createElement('i', { className: 'fas fa-home' }),\n                            React.createElement('span', null, 'Dashboard')\n                        ),\n                        React.createElement('div', { className: 'breadcrumb-arrow' },\n                            React.createElement('i', { className: 'fas fa-chevron-right' })\n                        ),\n                        React.createElement('a', { \n                            href: '/accounts/unidades-saude/', \n                            className: 'breadcrumb-link' \n                        },\n                            React.createElement('i', { className: 'fas fa-hospital-alt' }),\n                            React.createElement('span', null, 'Unidades de Saúde')\n                        ),\n                        React.createElement('div', { className: 'breadcrumb-arrow' },\n                            React.createElement('i', { className: 'fas fa-chevron-right' })\n                        ),\n                        React.createElement('span', { className: 'breadcrumb-current' },\n                            React.createElement('i', { className: 'fas fa-phone-alt' }),\n                            React.createElement('span', null, 'Registro de Chamada')\n                        )\n                    )\n                ),\n\n                // Header da página\n                React.createElement('div', { className: 'page-header' },\n                    React.createElement('div', { className: 'header-content' },\n                        React.createElement('div', { className: 'header-main' },\n                            React.createElement('div', { className: 'header-icon' },\n                                React.createElement('i', { className: 'fas fa-phone-alt' })\n                            ),\n                            React.createElement('div', { className: 'header-text' },\n                                React.createElement('h1', null, 'Registro de Chamada'),\n                                React.createElement('p', { className: 'header-subtitle' }, \n                                    'Sistema de controle e acompanhamento de chamadas médicas'\n                                )\n                            )\n                        ),\n                        React.createElement('div', { className: 'header-status' },\n                            React.createElement('div', { className: 'status-badge' },\n                                React.createElement('i', { className: 'fas fa-circle' }),\n                                React.createElement('span', null, 'Sistema Online')\n                            )\n                        )\n                    )\n                ),\n\n                // Indicador de progresso\n                React.createElement('div', { className: 'progress-container' },\n                    React.createElement('div', { className: 'progress-circle' },\n                        React.createElement('svg', { \n                            className: 'progress-ring', \n                            width: '120', \n                            height: '120' \n                        },\n                            React.createElement('circle', {\n                                className: 'progress-ring-bg',\n                                cx: '60',\n                                cy: '60',\n                                r: '50'\n                            }),\n                            React.createElement('circle', {\n                                className: 'progress-ring-fill',\n                                cx: '60',\n                                cy: '60',\n                                r: '50',\n                                style: {\n                                    strokeDashoffset: 314 - (314 * progress.percent / 100)\n                                }\n                            })\n                        ),\n                        React.createElement('div', { className: 'progress-text' }, \n                            `${progress.percent}%`\n                        )\n                    ),\n                    React.createElement('div', { className: 'progress-label' },\n                        `Progresso do Formulário (${progress.filled}/${progress.total} campos obrigatórios)`\n                    )\n                ),\n\n                // Data e hora\n                React.createElement('div', { className: 'datetime-section' },\n                    React.createElement('div', { className: 'datetime-label' },\n                        React.createElement('i', { className: 'far fa-clock' }),\n                        React.createElement('span', null, 'Data e Hora do Registro')\n                    ),\n                    React.createElement('div', { className: 'datetime-value' },\n                        formatDateTime(currentDateTime)\n                    )\n                ),\n\n                // Seção Informações do Cadastrante (IGUAL À PÁGINA ORIGINAL)\n                React.createElement('div', { className: 'cadastrante-section' },\n                    React.createElement('div', { className: 'cadastrante-header' },\n                        React.createElement('div', { className: 'cadastrante-icon' },\n                            React.createElement('i', { className: 'fas fa-user-tie' })\n                        ),\n                        React.createElement('div', null,\n                            React.createElement('h3', { className: 'cadastrante-title' }, \n                                'Informações do Cadastrante'\n                            ),\n                            React.createElement('p', { className: 'cadastrante-subtitle' }, \n                                'Dados sobre quem está realizando este cadastro'\n                            )\n                        )\n                    ),\n                    React.createElement('div', { className: 'cadastrante-content' },\n                        React.createElement('div', { className: 'cadastrante-grid' },\n                            // Responsável pelo Cadastro\n                            React.createElement('div', { className: 'cadastrante-item' },\n                                React.createElement('div', { className: 'cadastrante-label' },\n                                    React.createElement('i', { className: 'fas fa-user' }),\n                                    'Responsável pelo Cadastro'\n                                ),\n                                React.createElement('div', { className: 'cadastrante-value' },\n                                    React.createElement('i', { className: 'fas fa-user-circle' }),\n                                    usuario.first_name || usuario.username || 'Usuário'\n                                ),\n                                React.createElement('div', { className: 'cadastrante-hint' },\n                                    React.createElement('i', { className: 'fas fa-info-circle' }),\n                                    'Usuário logado responsável por este registro'\n                                )\n                            ),\n\n                            // Data do Cadastro\n                            React.createElement('div', { className: 'cadastrante-item' },\n                                React.createElement('div', { className: 'cadastrante-label' },\n                                    React.createElement('i', { className: 'fas fa-calendar-alt' }),\n                                    'Data do Cadastro'\n                                ),\n                                React.createElement('div', { className: 'cadastrante-value' },\n                                    React.createElement('i', { className: 'fas fa-clock' }),\n                                    new Date().toLocaleString('pt-BR', {\n                                        day: '2-digit',\n                                        month: '2-digit',\n                                        year: 'numeric',\n                                        hour: '2-digit',\n                                        minute: '2-digit',\n                                        second: '2-digit'\n                                    })\n                                ),\n                                React.createElement('div', { className: 'cadastrante-hint' },\n                                    React.createElement('i', { className: 'fas fa-info-circle' }),\n                                    'Data e hora atual do sistema'\n                                )\n                            )\n                        )\n                    )\n                ),\n\n                // Seção de Verificação de Unidade\n                React.createElement('div', { className: 'form-section verification-section' },\n                    React.createElement('div', { className: 'section-header' },\n                        React.createElement('div', { className: 'section-icon' },\n                            React.createElement('i', { className: 'fas fa-hospital-alt' })\n                        ),\n                        React.createElement('div', null,\n                            React.createElement('h3', { className: 'section-title' }, \n                                'Unidade de Saúde'\n                            ),\n                            React.createElement('p', { className: 'section-subtitle' }, \n                                'Identificação e verificação da unidade'\n                            )\n                        )\n                    ),\n                    React.createElement('div', { className: 'section-content' },\n                        React.createElement('div', { className: 'field-group' },\n                            React.createElement('label', { className: 'field-label' },\n                                React.createElement('i', { className: 'fas fa-hospital' }),\n                                'Nome da Unidade de Saúde',\n                                React.createElement('span', { className: 'required-star' }, '*')\n                            ),\n                            React.createElement('div', { className: 'verification-input-group' },\n                                React.createElement('input', {\n                                    type: 'text',\n                                    className: `form-control verification-input ${errors.unidade ? 'is-invalid' : ''}`,\n                                    value: formData.unidade,\n                                    onChange: (e) => handleChange('unidade', e.target.value),\n                                    placeholder: 'HOSPITAL JULIO MAIA'\n                                }),\n                                React.createElement('button', {\n                                    type: 'button',\n                                    className: 'btn btn-verify',\n                                    disabled: verificandoUnidade || !formData.unidade || formData.unidade.length < 3,\n                                    onClick: () => verificarUnidade(formData.unidade)\n                                },\n                                    verificandoUnidade ? \n                                        React.createElement('i', { className: 'fas fa-spinner fa-spin' }) :\n                                        React.createElement('i', { className: 'fas fa-search' }),\n                                    ' VERIFICAR'\n                                )\n                            ),\n                            errors.unidade && React.createElement('div', { \n                                className: 'field-hint',\n                                style: { color: '#ef4444' }\n                            }, errors.unidade),\n                            React.createElement('div', { className: 'field-hint' },\n                                React.createElement('i', { className: 'fas fa-info-circle' }),\n                                'Digite o nome da unidade e clique em verificar'\n                            )\n                        ),\n\n                        // Resultado da verificação\n                        unidadeVerificada && React.createElement('div', { \n                            className: `verification-result ${unidadeVerificada.encontrada ? 'success' : 'not-found'}` \n                        },\n                            unidadeVerificada.encontrada ? (\n                                React.createElement('div', null,\n                                    React.createElement('div', { className: 'verification-header' },\n                                        React.createElement('div', { className: 'verification-status' },\n                                            React.createElement('i', { className: 'fas fa-check-circle' }),\n                                            React.createElement('span', null, 'Unidade Cadastrada'),\n                                            React.createElement('span', { className: 'status-badge-active' }, 'Ativa')\n                                        )\n                                    ),\n                                    React.createElement('div', { className: 'unidade-card' },\n                                        React.createElement('div', { className: 'unidade-title' },\n                                            React.createElement('i', { className: 'fas fa-hospital' }),\n                                            React.createElement('span', null, unidadeVerificada.dados.nome)\n                                        ),\n                                        React.createElement('div', { className: 'unidade-dados-grid' },\n                                            React.createElement('div', { className: 'unidade-dado-item' },\n                                                React.createElement('div', { className: 'unidade-dado-label' },\n                                                    React.createElement('i', { className: 'fas fa-map-marker-alt' }),\n                                                    'MUNICÍPIO'\n                                                ),\n                                                React.createElement('div', { className: 'unidade-dado-value' },\n                                                    unidadeVerificada.dados.municipio\n                                                )\n                                            ),\n                                            React.createElement('div', { className: 'unidade-dado-item' },\n                                                React.createElement('div', { className: 'unidade-dado-label' },\n                                                    React.createElement('i', { className: 'fas fa-phone' }),\n                                                    'TELEFONE'\n                                                ),\n                                                React.createElement('div', { className: 'unidade-dado-value' },\n                                                    unidadeVerificada.dados.telefone || 'Não informado'\n                                                )\n                                            ),\n                                            React.createElement('div', { className: 'unidade-dado-item' },\n                                                React.createElement('div', { className: 'unidade-dado-label' },\n                                                    React.createElement('i', { className: 'fas fa-user' }),\n                                                    'RESPONSÁVEL'\n                                                ),\n                                                React.createElement('div', { className: 'unidade-dado-value' },\n                                                    unidadeVerificada.dados.responsavel || 'Não informado'\n                                                )\n                                            ),\n                                            React.createElement('div', { className: 'unidade-dado-item' },\n                                                React.createElement('div', { className: 'unidade-dado-label' },\n                                                    React.createElement('i', { className: 'fas fa-home' }),\n                                                    'ENDEREÇO'\n                                                ),\n                                                React.createElement('div', { className: 'unidade-dado-value' },\n                                                    unidadeVerificada.dados.endereco || 'Não informado'\n                                                )\n                                            ),\n                                            React.createElement('div', { className: 'unidade-dado-item' },\n                                                React.createElement('div', { className: 'unidade-dado-label' },\n                                                    React.createElement('i', { className: 'fas fa-id-card' }),\n                                                    'CNES'\n                                                ),\n                                                React.createElement('div', { className: 'unidade-dado-value' },\n                                                    unidadeVerificada.dados.cnes || 'Não informado'\n                                                )\n                                            ),\n                                            React.createElement('div', { className: 'unidade-dado-item' },\n                                                React.createElement('div', { className: 'unidade-dado-label' },\n                                                    React.createElement('i', { className: 'fas fa-tag' }),\n                                                    'TIPO'\n                                                ),\n                                                React.createElement('div', { className: 'unidade-dado-value' },\n                                                    unidadeVerificada.dados.tipo || 'Não informado'\n                                                )\n                                            )\n                                        ),\n                                        React.createElement('div', { className: 'unidade-card-footer' },\n                                            React.createElement('i', { className: 'fas fa-database' }),\n                                            React.createElement('span', null, 'Dados obtidos do sistema de cadastro')\n                                        )\n                                    )\n                                )\n                            ) : (\n                                React.createElement('div', { className: 'not-found-container' },\n                                    React.createElement('div', { className: 'not-found-message' },\n                                        React.createElement('i', { className: 'fas fa-exclamation-triangle' }),\n                                        React.createElement('span', null, 'Unidade não cadastrada no sistema')\n                                    ),\n                                    React.createElement('div', { className: 'not-found-description' },\n                                        'A unidade \"', formData.unidade, '\" não foi encontrada na base de dados. É necessário cadastrá-la primeiro para prosseguir.'\n                                    ),\n                                    React.createElement('div', { className: 'not-found-info' },\n                                        React.createElement('i', { className: 'fas fa-info-circle' }),\n                                        React.createElement('span', null, 'O formulário de cadastro será pré-preenchido automaticamente com os dados da consulta CNES (se disponível). Após cadastrar, volte aqui e clique em \"Verificar novamente\".')\n                                    ),\n                                    React.createElement('div', { className: 'not-found-actions' },\n                                        React.createElement('button', {\n                                            type: 'button',\n                                            className: 'btn-create-unit',\n                                            onClick: redirecionarParaCadastroUnidade,\n                                            disabled: !dadosCNES\n                                        },\n                                            React.createElement('i', { className: 'fas fa-plus-circle' }),\n                                            'CADASTRAR UNIDADE DE SAÚDE'\n                                        ),\n                                        React.createElement('button', {\n                                            type: 'button',\n                                            className: 'btn-verify-again',\n                                            onClick: () => verificarUnidade(formData.unidade)\n                                        },\n                                            React.createElement('i', { className: 'fas fa-sync-alt' }),\n                                            'VERIFICAR NOVAMENTE'\n                                        )\n                                    )\n                                )\n                            )\n                        )\n                    )\n                ),\n\n                // Formulário\n                React.createElement('form', { onSubmit: handleSubmit },\n                    // Seção 1: Informações do Solicitante\n                    React.createElement('div', { className: 'form-section' },\n                        React.createElement('div', { className: 'section-header' },\n                            React.createElement('div', { className: 'section-icon' },\n                                React.createElement('i', { className: 'fas fa-user' })\n                            ),\n                            React.createElement('div', null,\n                                React.createElement('h3', { className: 'section-title' }, \n                                    'Informações do Solicitante'\n                                ),\n                                React.createElement('p', { className: 'section-subtitle' }, \n                                    'Dados da pessoa que está fazendo a solicitação'\n                                )\n                            )\n                        ),\n                        React.createElement('div', { className: 'section-content' },\n                            React.createElement('div', { className: 'fields-grid' },\n                                // Nome\n                                React.createElement('div', { className: 'field-group' },\n                                    React.createElement('label', { className: 'field-label' },\n                                        React.createElement('i', { className: 'fas fa-user' }),\n                                        'Nome Completo',\n                                        React.createElement('span', { className: 'required-star' }, '*')\n                                    ),\n                                    React.createElement('input', {\n                                        type: 'text',\n                                        className: `form-control ${errors.nome ? 'is-invalid' : ''}`,\n                                        value: formData.nome,\n                                        onChange: (e) => handleChange('nome', e.target.value),\n                                        placeholder: 'Digite o nome completo do solicitante'\n                                    }),\n                                    errors.nome && React.createElement('div', { \n                                        className: 'field-hint',\n                                        style: { color: '#ef4444' }\n                                    }, errors.nome)\n                                ),\n\n                                // Telefone\n                                React.createElement('div', { className: 'field-group' },\n                                    React.createElement('label', { className: 'field-label' },\n                                        React.createElement('i', { className: 'fas fa-phone' }),\n                                        'Telefone',\n                                        React.createElement('span', { className: 'required-star' }, '*')\n                                    ),\n                                    React.createElement('input', {\n                                        type: 'text',\n                                        className: `form-control ${errors.telefone ? 'is-invalid' : ''}`,\n                                        value: formData.telefone,\n                                        onChange: (e) => handleChange('telefone', maskTelefone(e.target.value)),\n                                        placeholder: '(XX) XXXXX-XXXX'\n                                    }),\n                                    errors.telefone && React.createElement('div', { \n                                        className: 'field-hint',\n                                        style: { color: '#ef4444' }\n                                    }, errors.telefone)\n                                ),\n\n                                // Função\n                                React.createElement('div', { className: 'field-group' },\n                                    React.createElement('label', { className: 'field-label' },\n                                        React.createElement('i', { className: 'fas fa-briefcase' }),\n                                        'Função/Cargo'\n                                    ),\n                                    React.createElement('input', {\n                                        type: 'text',\n                                        className: 'form-control',\n                                        value: formData.funcao,\n                                        onChange: (e) => handleChange('funcao', e.target.value),\n                                        placeholder: 'Ex: Médico, Enfermeiro, Técnico...'\n                                    })\n                                ),\n\n                                // Setor\n                                React.createElement('div', { className: 'field-group' },\n                                    React.createElement('label', { className: 'field-label' },\n                                        React.createElement('i', { className: 'fas fa-building' }),\n                                        'Setor de Atuação'\n                                    ),\n                                    React.createElement('input', {\n                                        type: 'text',\n                                        className: 'form-control',\n                                        value: formData.setor,\n                                        onChange: (e) => handleChange('setor', e.target.value),\n                                        placeholder: 'Ex: Emergência, UTI, Clínica...'\n                                    })\n                                )\n                            )\n                        )\n                    ),\n\n                    // Seção 2: Dados da Unidade de Saúde\n                    React.createElement('div', { className: 'form-section' },\n                        React.createElement('div', { className: 'section-header' },\n                            React.createElement('div', { className: 'section-icon' },\n                                React.createElement('i', { className: 'fas fa-hospital' })\n                            ),\n                            React.createElement('div', null,\n                                React.createElement('h3', { className: 'section-title' }, \n                                    'Dados da Unidade de Saúde'\n                                ),\n                                React.createElement('p', { className: 'section-subtitle' }, \n                                    'Informações da unidade que está fazendo a solicitação'\n                                )\n                            )\n                        ),\n                        React.createElement('div', { className: 'section-content' },\n                            React.createElement('div', { className: 'fields-grid' },\n\n                                // Município\n                                React.createElement('div', { className: 'field-group autocomplete-container' },\n                                    React.createElement('label', { className: 'field-label' },\n                                        React.createElement('i', { className: 'fas fa-map-marker-alt' }),\n                                        'Município',\n                                        React.createElement('span', { className: 'required-star' }, '*')\n                                    ),\n                                    React.createElement('div', { className: 'position-relative' },\n                                        React.createElement('input', {\n                                            type: 'text',\n                                            className: `form-control ${errors.municipio ? 'is-invalid' : ''}`,\n                                            value: formData.municipio,\n                                            onChange: (e) => handleChange('municipio', e.target.value),\n                                            placeholder: 'Digite o município (MS)',\n                                            autoComplete: 'off'\n                                        }),\n                                        municipioSearching && React.createElement('div', { \n                                            className: 'autocomplete-loading show'\n                                        },\n                                            React.createElement('i', { className: 'fas fa-spinner fa-spin' })\n                                        )\n                                    ),\n                                    municipioDropdownOpen && municipioResults.length > 0 && React.createElement('div', { \n                                        className: 'autocomplete-dropdown show',\n                                        style: {\n                                            position: 'absolute',\n                                            top: '100%',\n                                            left: '0',\n                                            right: '0',\n                                            zIndex: 99999,\n                                            backgroundColor: 'white',\n                                            border: '2px solid #ef4444',\n                                            borderTop: 'none',\n                                            borderRadius: '0 0 10px 10px',\n                                            boxShadow: '0 4px 15px rgba(239, 68, 68, 0.2)',\n                                            maxHeight: '600px',\n                                            overflowY: 'auto'\n                                        }\n                                    },\n                                        React.createElement('div', {\n                                            style: {\n                                                padding: '8px 16px',\n                                                background: 'linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%)',\n                                                borderBottom: '1px solid #e9ecef',\n                                                fontSize: '0.8rem',\n                                                color: '#6c757d',\n                                                display: 'flex',\n                                                justifyContent: 'space-between'\n                                            }\n                                        },\n                                            React.createElement('span', {},\n                                                React.createElement('i', { className: 'fas fa-map-marker-alt' }),\n                                                ` ${municipioResults.length} município(s)`\n                                            ),\n                                            React.createElement('span', {},\n                                                React.createElement('i', { className: 'fas fa-clock' }),\n                                                ' MS - Brasil'\n                                            )\n                                        ),\n                                        municipioResults.map((municipio, index) => \n                                            React.createElement('div', {\n                                                key: `municipio-${index}`,\n                                                style: {\n                                                    padding: '12px 16px',\n                                                    cursor: 'pointer',\n                                                    borderBottom: index < municipioResults.length - 1 ? '1px solid #f1f3f4' : 'none',\n                                                    display: 'flex',\n                                                    alignItems: 'center',\n                                                    transition: 'all 0.2s ease',\n                                                    fontSize: '0.95rem'\n                                                },\n                                                onClick: () => selectMunicipio(municipio.nome),\n                                                onMouseEnter: (e) => {\n                                                    e.target.style.background = 'linear-gradient(135deg, #f0fdf4 0%, #dcfce7 100%)';\n                                                    e.target.style.color = '#15803d';\n                                                    e.target.style.transform = 'translateX(4px)';\n                                                },\n                                                onMouseLeave: (e) => {\n                                                    e.target.style.background = 'white';\n                                                    e.target.style.color = 'inherit';\n                                                    e.target.style.transform = 'translateX(0)';\n                                                }\n                                            }, \n                                                React.createElement('span', { style: { marginRight: '8px' } }, '📍'),\n                                                municipio.nome\n                                            )\n                                        )\n                                    ),\n                                    React.createElement('div', { \n                                        className: 'field-hint',\n                                        style: { \n                                            marginTop: '4px',\n                                            fontSize: '12px',\n                                            color: municipioHelpText.includes('✅') ? '#10b981' : '#6b7280'\n                                        }\n                                    },\n                                        React.createElement('i', { className: 'fas fa-info-circle' }),\n                                        ' ' + municipioHelpText\n                                    ),\n                                    errors.municipio && React.createElement('div', { \n                                        className: 'field-hint',\n                                        style: { color: '#ef4444' }\n                                    }, errors.municipio)\n                                ),\n\n                                // CNES\n                                React.createElement('div', { className: 'field-group cnes-field-group' },\n                                    React.createElement('label', { className: 'field-label' },\n                                        React.createElement('i', { className: 'fas fa-id-card' }),\n                                        'Código CNES'\n                                    ),\n                                    React.createElement('div', { className: 'cnes-input-container' },\n                                        React.createElement('input', {\n                                            type: 'text',\n                                            className: `form-control ${errors.cnes ? 'is-invalid' : ''}`,\n                                            value: formData.cnes,\n                                            onChange: (e) => handleChange('cnes', maskCNES(e.target.value)),\n                                            placeholder: '1234567'\n                                        }),\n                                        consultandoCNES && React.createElement('div', { className: 'cnes-loading' },\n                                            React.createElement('i', { className: 'fas fa-spinner fa-spin' })\n                                        )\n                                    ),\n                                    React.createElement('div', { className: 'field-hint' },\n                                        React.createElement('i', { className: 'fas fa-info-circle' }),\n                                        'Código de 7 dígitos do CNES (opcional)'\n                                    ),\n                                    errors.cnes && React.createElement('div', { \n                                        className: 'field-hint',\n                                        style: { color: '#ef4444' }\n                                    }, errors.cnes),\n\n                                    // Resultado da consulta CNES\n                                    dadosCNES && React.createElement('div', { className: 'cnes-result' },\n                                        React.createElement('div', { className: 'cnes-status' },\n                                            React.createElement('span', { className: 'cnes-badge' }, 'AUXÍLIO'),\n                                            React.createElement('span', { className: 'cnes-title' }, 'Cadastro Nacional de Estabelecimentos de Saúde (Campo auxiliar)')\n                                        ),\n                                        React.createElement('div', { className: 'cnes-info' },\n                                            React.createElement('i', { className: 'fas fa-info-circle' }),\n                                            React.createElement('span', null, 'AUXÍLIO: O código CNES é um campo auxiliar que ajudará na identificação da unidade com dados do Ministério da Saúde')\n                                        ),\n                                        React.createElement('div', { className: 'cnes-data' },\n                                            React.createElement('span', null, `${formData.cnes} (opcional)`)\n                                        )\n                                    )\n                                ),\n\n                                // Contato Telefônico CNES\n                                React.createElement('div', { className: 'field-group' },\n                                    React.createElement('label', { className: 'field-label' },\n                                        React.createElement('i', { className: 'fas fa-phone-alt' }),\n                                        'Contato Telefônico da Unidade'\n                                    ),\n                                    React.createElement('input', {\n                                        type: 'text',\n                                        className: 'form-control',\n                                        value: formData.contato_telefonico_cnes,\n                                        onChange: (e) => handleChange('contato_telefonico_cnes', maskTelefone(e.target.value)),\n                                        placeholder: '(XX) XXXXX-XXXX'\n                                    })\n                                )\n                            )\n                        )\n                    ),\n\n                    // Seção 3: Detalhes da Chamada\n                    React.createElement('div', { className: 'form-section' },\n                        React.createElement('div', { className: 'section-header' },\n                            React.createElement('div', { className: 'section-icon' },\n                                React.createElement('i', { className: 'fas fa-phone-volume' })\n                            ),\n                            React.createElement('div', null,\n                                React.createElement('h3', { className: 'section-title' }, \n                                    'Detalhes da Chamada'\n                                ),\n                                React.createElement('p', { className: 'section-subtitle' }, \n                                    'Informações específicas sobre a solicitação'\n                                )\n                            )\n                        ),\n                        React.createElement('div', { className: 'section-content' },\n                            React.createElement('div', { className: 'fields-grid' },\n                                // Tipo de Chamada\n                                React.createElement('div', { className: 'field-group' },\n                                    React.createElement('label', { className: 'field-label' },\n                                        React.createElement('i', { className: 'fas fa-tag' }),\n                                        'Tipo de Chamada',\n                                        React.createElement('span', { className: 'required-star' }, '*')\n                                    ),\n                                    React.createElement('select', {\n                                        className: `form-select ${errors.tipo_chamada ? 'is-invalid' : ''}`,\n                                        value: formData.tipo_chamada,\n                                        onChange: (e) => handleChange('tipo_chamada', e.target.value)\n                                    },\n                                        React.createElement('option', { value: '' }, 'Selecione o tipo de chamada'),\n                                        React.createElement('option', { value: 'REGULACAO_AMBULATORIAL' }, 'Regulação Ambulatorial'),\n                                        React.createElement('option', { value: 'REGULACAO_HOSPITALAR' }, 'Regulação Hospitalar'),\n                                        React.createElement('option', { value: 'TRANSPORTE_SANITARIO' }, 'Transporte Sanitário'),\n                                        React.createElement('option', { value: 'EMERGENCIA_MEDICA' }, 'Emergência Médica'),\n                                        React.createElement('option', { value: 'CONSULTA_ESPECIALIZADA' }, 'Consulta Especializada'),\n                                        React.createElement('option', { value: 'EXAME_DIAGNOSTICO' }, 'Exame Diagnóstico'),\n                                        React.createElement('option', { value: 'INTERNACAO_HOSPITALAR' }, 'Internação Hospitalar'),\n                                        React.createElement('option', { value: 'OUTROS' }, 'Outros')\n                                    ),\n                                    errors.tipo_chamada && React.createElement('div', { \n                                        className: 'field-hint',\n                                        style: { color: '#ef4444' }\n                                    }, errors.tipo_chamada)\n                                ),\n\n                                // Status\n                                React.createElement('div', { className: 'field-group' },\n                                    React.createElement('label', { className: 'field-label' },\n                                        React.createElement('i', { className: 'fas fa-flag' }),\n                                        'Status',\n                                        React.createElement('span', { className: 'required-star' }, '*')\n                                    ),\n                                    React.createElement('select', {\n                                        className: `form-select ${errors.status ? 'is-invalid' : ''}`,\n                                        value: formData.status,\n                                        onChange: (e) => handleChange('status', e.target.value)\n                                    },\n                                        React.createElement('option', { value: '' }, 'Selecione o status'),\n                                        React.createElement('option', { value: 'PENDENTE' }, 'Pendente'),\n                                        React.createElement('option', { value: 'EM_ANDAMENTO' }, 'Em Andamento'),\n                                        React.createElement('option', { value: 'RESOLVIDO' }, 'Resolvido'),\n                                        React.createElement('option', { value: 'CANCELADO' }, 'Cancelado')\n                                    ),\n                                    errors.status && React.createElement('div', { \n                                        className: 'field-hint',\n                                        style: { color: '#ef4444' }\n                                    }, errors.status)\n                                ),\n\n                                // Nome do Atendente\n                                React.createElement('div', { className: 'field-group' },\n                                    React.createElement('label', { className: 'field-label' },\n                                        React.createElement('i', { className: 'fas fa-user-md' }),\n                                        'Nome do Atendente',\n                                        React.createElement('span', { className: 'required-star' }, '*')\n                                    ),\n                                    React.createElement('input', {\n                                        type: 'text',\n                                        className: `form-control ${errors.nome_atendente ? 'is-invalid' : ''}`,\n                                        value: formData.nome_atendente,\n                                        onChange: (e) => handleChange('nome_atendente', e.target.value),\n                                        placeholder: 'Nome de quem atendeu a chamada'\n                                    }),\n                                    errors.nome_atendente && React.createElement('div', { \n                                        className: 'field-hint',\n                                        style: { color: '#ef4444' }\n                                    }, errors.nome_atendente)\n                                )\n                            ),\n\n                            // Descrição da Solicitação (campo grande)\n                            React.createElement('div', { className: 'field-group', style: { marginTop: '1.5rem' } },\n                                React.createElement('label', { className: 'field-label' },\n                                    React.createElement('i', { className: 'fas fa-file-alt' }),\n                                    'Descrição da Solicitação',\n                                    React.createElement('span', { className: 'required-star' }, '*')\n                                ),\n                                React.createElement('textarea', {\n                                    className: `form-control ${errors.descricao ? 'is-invalid' : ''}`,\n                                    value: formData.descricao,\n                                    onChange: (e) => handleChange('descricao', e.target.value),\n                                    placeholder: 'Descreva detalhadamente a solicitação...',\n                                    rows: 4\n                                }),\n                                errors.descricao && React.createElement('div', { \n                                    className: 'field-hint',\n                                    style: { color: '#ef4444' }\n                                }, errors.descricao)\n                            ),\n\n                            // Solução/Encaminhamento (campo grande)\n                            React.createElement('div', { className: 'field-group', style: { marginTop: '1.5rem' } },\n                                React.createElement('label', { className: 'field-label' },\n                                    React.createElement('i', { className: 'fas fa-check-circle' }),\n                                    'Solução/Encaminhamento'\n                                ),\n                                React.createElement('textarea', {\n                                    className: 'form-control',\n                                    value: formData.solucao,\n                                    onChange: (e) => handleChange('solucao', e.target.value),\n                                    placeholder: 'Descreva a solução dada ou encaminhamento realizado...',\n                                    rows: 3\n                                }),\n                                React.createElement('div', { className: 'field-hint' },\n                                    React.createElement('i', { className: 'fas fa-info-circle' }),\n                                    'Campo opcional - pode ser preenchido posteriormente'\n                                )\n                            )\n                        )\n                    ),\n\n                    // Botões de ação (IGUAL À PÁGINA ORIGINAL)\n                    React.createElement('div', { className: 'action-buttons' },\n                        React.createElement('button', {\n                            type: 'submit',\n                            className: 'btn btn-primary',\n                            disabled: isLoading\n                        },\n                            React.createElement('i', { className: isLoading ? 'fas fa-spinner fa-spin' : 'fas fa-save' }),\n                            isLoading ? 'REGISTRANDO...' : 'REGISTRAR CHAMADA'\n                        ),\n                        React.createElement('button', {\n                            type: 'button',\n                            className: 'btn btn-secondary',\n                            onClick: limparFormulario\n                        },\n                            React.createElement('i', { className: 'fas fa-sync-alt' }),\n                            'LIMPAR FORMULÁRIO'\n                        )\n                    )\n                ),\n\n                // Modal CNES (EXATAMENTE como na página original)\n                modalCNESAberto && dadosCNES && React.createElement('div', { \n                    className: 'cnes-modal',\n                    onClick: fecharModalCNES \n                },\n                    React.createElement('div', { \n                        className: 'cnes-modal-content',\n                        onClick: (e) => e.stopPropagation()\n                    },\n                        // Header do Modal\n                        React.createElement('div', { className: 'cnes-modal-header' },\n                            React.createElement('div', { className: 'cnes-modal-title' },\n                                React.createElement('i', { className: 'fas fa-hospital-alt' }),\n                                `CNES: ${dadosCNES.codigo_cnes || dadosCNES.codigo || formData.cnes}`\n                            ),\n                            React.createElement('button', {\n                                className: 'cnes-modal-close',\n                                onClick: fecharModalCNES\n                            },\n                                React.createElement('i', { className: 'fas fa-times' })\n                            )\n                        ),\n\n                        // Body do Modal\n                        React.createElement('div', { className: 'cnes-modal-body' },\n                            // Header do Estabelecimento\n                            React.createElement('div', { className: 'cnes-estabelecimento-header' },\n                                React.createElement('div', { className: 'cnes-estabelecimento-title' },\n                                    React.createElement('i', { className: 'fas fa-hospital' }),\n                                    'Estabelecimento Encontrado'\n                                ),\n                                React.createElement('div', { className: 'cnes-badge-ministerio' },\n                                    'Ministério da Saúde'\n                                )\n                            ),\n\n                            // Nome Principal\n                            React.createElement('div', { className: 'cnes-nome-principal' },\n                                dadosCNES.nome_fantasia || dadosCNES.nome || 'Nome não informado'\n                            ),\n\n                            // Razão Social\n                            React.createElement('div', { className: 'cnes-razao-social' },\n                                React.createElement('i', { className: 'fas fa-building' }),\n                                dadosCNES.nome_razao_social || 'Razão social não informada'\n                            ),\n\n                            // Grid de Informações\n                            React.createElement('div', { className: 'cnes-info-grid' },\n                                // Localização\n                                React.createElement('div', { className: 'cnes-info-item' },\n                                    React.createElement('div', { className: 'cnes-info-label' },\n                                        React.createElement('i', { className: 'fas fa-map-marker-alt' }),\n                                        'Localização'\n                                    ),\n                                    React.createElement('div', { className: 'cnes-info-value' },\n                                        `${dadosCNES.descricao_municipio || dadosCNES.municipio || 'Não informado'} - ${dadosCNES.sigla_uf || dadosCNES.uf || 'N/A'}`\n                                    )\n                                ),\n\n                                // Tipo de Unidade\n                                React.createElement('div', { className: 'cnes-info-item' },\n                                    React.createElement('div', { className: 'cnes-info-label' },\n                                        React.createElement('i', { className: 'fas fa-hospital-alt' }),\n                                        'Tipo de Unidade'\n                                    ),\n                                    React.createElement('div', { className: 'cnes-info-value' },\n                                        dadosCNES.tipo_unidade || 'Não informado'\n                                    )\n                                ),\n\n                                // Endereço\n                                React.createElement('div', { className: 'cnes-info-item' },\n                                    React.createElement('div', { className: 'cnes-info-label' },\n                                        React.createElement('i', { className: 'fas fa-map-signs' }),\n                                        'Endereço'\n                                    ),\n                                    React.createElement('div', { className: 'cnes-info-value' },\n                                        `${dadosCNES.endereco_estabelecimento || dadosCNES.endereco || 'Não informado'}${dadosCNES.numero_estabelecimento ? ', ' + dadosCNES.numero_estabelecimento : ''}`\n                                    )\n                                ),\n\n                                // Bairro/CEP\n                                React.createElement('div', { className: 'cnes-info-item' },\n                                    React.createElement('div', { className: 'cnes-info-label' },\n                                        React.createElement('i', { className: 'fas fa-location-arrow' }),\n                                        'Bairro/CEP'\n                                    ),\n                                    React.createElement('div', { className: 'cnes-info-value' },\n                                        `${dadosCNES.bairro || 'CENTRO'} - CEP: ${dadosCNES.cep || '79670000'}`\n                                    )\n                                ),\n\n                                // Telefone\n                                React.createElement('div', { className: 'cnes-info-item' },\n                                    React.createElement('div', { className: 'cnes-info-label' },\n                                        React.createElement('i', { className: 'fas fa-phone' }),\n                                        'Telefone'\n                                    ),\n                                    React.createElement('div', { className: 'cnes-info-value' },\n                                        dadosCNES.numero_telefone_estabelecimento || dadosCNES.telefone || 'Não informado'\n                                    )\n                                ),\n\n                                // E-mail\n                                React.createElement('div', { className: 'cnes-info-item' },\n                                    React.createElement('div', { className: 'cnes-info-label' },\n                                        React.createElement('i', { className: 'fas fa-envelope' }),\n                                        'E-mail'\n                                    ),\n                                    React.createElement('div', { className: 'cnes-info-value' },\n                                        dadosCNES.email || 'Não informado'\n                                    )\n                                ),\n\n                                // CNPJ\n                                React.createElement('div', { className: 'cnes-info-item' },\n                                    React.createElement('div', { className: 'cnes-info-label' },\n                                        React.createElement('i', { className: 'fas fa-file-alt' }),\n                                        'CNPJ'\n                                    ),\n                                    React.createElement('div', { className: 'cnes-info-value' },\n                                        dadosCNES.numero_cnpj_entidade || 'Não informado'\n                                    )\n                                ),\n\n                                // Gestão\n                                React.createElement('div', { className: 'cnes-info-item' },\n                                    React.createElement('div', { className: 'cnes-info-label' },\n                                        React.createElement('i', { className: 'fas fa-users-cog' }),\n                                        'Gestão'\n                                    ),\n                                    React.createElement('div', { className: 'cnes-info-value' },\n                                        dadosCNES.gestao || 'D'\n                                    )\n                                )\n                            )\n                        ),\n\n                        // Footer do Modal\n                        React.createElement('div', { className: 'cnes-modal-footer' },\n                            React.createElement('button', {\n                                className: 'btn-preencher',\n                                onClick: preencherComDadosCNES\n                            },\n                                React.createElement('i', { className: 'fas fa-download' }),\n                                'Preencher com os dados da unidade no formulário'\n                            ),\n                            React.createElement('button', {\n                                className: 'btn-fechar',\n                                onClick: fecharModalCNES\n                            },\n                                React.createElement('i', { className: 'fas fa-times' }),\n                                'Fechar'\n                            )\n                        )\n                    )\n                )\n            )\n        );\n    }\n\n    // Exportar o componente globalmente (para compatibilidade)\n    window.RegistroChamadaReact = RegistroChamadaReact;\n\n    // Exportar como módulo ES6\n    if (typeof module !== 'undefined' && module.exports) {\n        module.exports = RegistroChamadaReact;\n    }\n\n})();\n\n// Export para ES6 modules\n ","module.exports = ReactDOM;","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = React;","import React from 'react';\r\nimport { createRoot } from 'react-dom/client';\r\nimport RegistroChamadaReact from '../components/RegistroChamadaReact';\r\n\r\n// Exportar componente para window (para testes e uso global)\r\nwindow.RegistroChamadaReact = RegistroChamadaReact;\r\n\r\n// Renderizar automaticamente se container existir\r\nconst rootDiv = document.getElementById('registro-chamada-root');\r\nif (rootDiv) {\r\n  const root = createRoot(rootDiv);\r\n  root.render(React.createElement(RegistroChamadaReact));\r\n}"],"names":["e","t","r","Symbol","n","iterator","o","toStringTag","i","c","prototype","Generator","u","Object","create","_regeneratorDefine2","f","p","y","G","v","a","d","bind","length","l","TypeError","call","done","value","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","m","defineProperty","enumerable","configurable","writable","_invoke","ownKeys","keys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","push","apply","_objectSpread","arguments","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","_typeof","toPrimitive","String","_toPrimitive","_toPropertyKey","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","_next","_throw","_slicedToArray","Array","isArray","_arrayWithHoles","next","_iterableToArrayLimit","_arrayLikeToArray","toString","slice","constructor","name","from","test","_unsupportedIterableToArray","_nonIterableRest","RegistroChamadaReact","props","usuario","csrfToken","dataAtual","_React$useState2","React","useState","nome","telefone","funcao","setor","tipo_chamada","status","descricao","unidade","municipio","cnes","contato_telefonico_cnes","nome_atendente","solucao","formData","setFormData","_React$useState4","isLoading","setIsLoading","_React$useState6","errors","setErrors","_React$useState8","_React$useState0","_React$useState10","Date","currentDateTime","setCurrentDateTime","_React$useState12","percent","filled","total","progress","setProgress","_React$useState14","unidadeVerificada","setUnidadeVerificada","_React$useState16","verificandoUnidade","setVerificandoUnidade","_React$useState18","dadosCNES","setDadosCNES","_React$useState20","consultandoCNES","setConsultandoCNES","_React$useState22","modalCNESAberto","setModalCNESAberto","_React$useState24","municipioSearching","setMunicipioSearching","_React$useState26","municipioResults","setMunicipioResults","_React$useState28","municipioDropdownOpen","setMunicipioDropdownOpen","_React$useState30","municipioDebounceTimer","setMunicipioDebounceTimer","_React$useState32","municipioHelpText","setMunicipioHelpText","useEffect","timer","setInterval","clearInterval","requiredFields","filledFields","field","trim","Math","round","clearTimeout","console","log","dropdownOpen","resultsCount","results","handleEsc","event","keyCode","fecharModalCNES","document","addEventListener","body","style","overflow","removeEventListener","getCsrfToken","csrfInput","querySelector","csrfCookie","cookie","split","find","row","startsWith","verificarUnidade","_ref","_callee","nomeUnidade","response","errorData","errorText","resultado","_t2","_context","sucesso","erro","showToast","fetch","method","headers","JSON","stringify","nome_unidade","cache","ok","json","warn","encontrada","dados","unidadesDisponiveis","todas_unidades","unidadesSimilares","unidades_similares","naoEncontrada","text","error","concat","statusText","prev","message","_x","consultarCNES","_ref2","_callee2","codigoCNES","cnesLimpo","baseUrl","fullUrl","_t3","_context2","replace","window","location","origin","url","success","ultimosDadosCNES","data","_x2","handleChange","handleMunicipioSearch","query","setTimeout","searchMunicipios","_ref3","_callee3","_data$results","_t4","_context3","encodeURIComponent","Error","_x3","validateForm","newErrors","_i","_Object$entries","entries","_Object$entries$_i","handleSubmit","_ref4","_callee4","dadosParaEnvio","result","_t5","_context4","preventDefault","data_registro","toISOString","scrollTo","top","behavior","_x4","type","undefined","duration","toastContainer","getElementById","colors","warning","info","toast","createElement","className","cssText","innerHTML","appendChild","parentElement","animation","remove","ToastManager","maskTelefone","cleaned","href","width","height","cx","cy","strokeDashoffset","toLocaleString","weekday","year","month","day","hour","minute","second","first_name","username","onChange","target","placeholder","disabled","onClick","color","responsavel","endereco","tipo","params","URLSearchParams","nome_fantasia","nome_razao_social","set","codigo_cnes","codigo","descricao_municipio","numero_telefone_estabelecimento","endereco_estabelecimento","createUrl","onSubmit","autoComplete","position","left","right","zIndex","backgroundColor","border","borderTop","borderRadius","boxShadow","maxHeight","overflowY","padding","background","borderBottom","fontSize","display","justifyContent","map","index","key","cursor","alignItems","transition","selectMunicipio","onMouseEnter","transform","onMouseLeave","marginRight","marginTop","includes","rows","stopPropagation","sigla_uf","uf","tipo_unidade","numero_estabelecimento","bairro","cep","email","numero_cnpj_entidade","gestao","telefoneUnidade","municipioUnidade","module","exports","ReactDOM","createRoot","hydrateRoot","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","__esModule","definition","get","obj","prop","hasOwnProperty","rootDiv","render"],"sourceRoot":""}