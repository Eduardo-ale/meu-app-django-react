{"version":3,"file":"criar-usuario.bundle.js","mappings":"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","sources":["webpack://registro-chamados/./static/js/components/CriarUsuarioReact.js","webpack://registro-chamados/external var \"ReactDOM\"","webpack://registro-chamados/./node_modules/react-dom/client.js","webpack://registro-chamados/webpack/bootstrap","webpack://registro-chamados/webpack/runtime/compat get default export","webpack://registro-chamados/webpack/runtime/define property getters","webpack://registro-chamados/webpack/runtime/hasOwnProperty shorthand","webpack://registro-chamados/external var \"React\"","webpack://registro-chamados/./static/js/entries/criar-usuario.js"],"sourcesContent":["(function() {\n    'use strict';\n    \n    console.log('🔄 [CRIAR USUÁRIO] Carregando componente CriarUsuarioReact...');\n    \n    function CriarUsuarioReact(props) {\n        console.log('🎯 [CRIAR USUÁRIO] Componente inicializado com props:', props);\n        // Estados do componente\n        const [currentStep, setCurrentStep] = React.useState(1);\n        const [formData, setFormData] = React.useState({\n            first_name: '',\n            last_name: '',\n            username: '',\n            email: '',\n            password1: '',\n            password2: '',\n            is_active: true,\n            is_staff: false\n        });\n        \n        const [errors, setErrors] = React.useState({});\n        const [fieldValidation, setFieldValidation] = React.useState({});\n        const [isLoading, setIsLoading] = React.useState(false);\n        const [showPasswords, setShowPasswords] = React.useState({\n            password1: false,\n            password2: false\n        });\n        const [passwordStrength, setPasswordStrength] = React.useState(0);\n        const [showSuccessAnimation, setShowSuccessAnimation] = React.useState(false);\n        const [usernameAvailable, setUsernameAvailable] = React.useState(null);\n        const [checkingUsername, setCheckingUsername] = React.useState(false);\n        const [focusedField, setFocusedField] = React.useState(null);\n        const [suggestions, setSuggestions] = React.useState({});\n        const [showTooltips, setShowTooltips] = React.useState(false);\n        const [typingTimeout, setTypingTimeout] = React.useState(null);\n        const [fieldProgress, setFieldProgress] = React.useState({});\n        const [showAdvancedOptions, setShowAdvancedOptions] = React.useState(false);\n        \n        // Dados das props\n        const { usuario, estatisticas_usuarios, csrf_token } = props;\n        \n        // Função para calcular força da senha\n        const calculatePasswordStrength = (password) => {\n            if (!password) return 0;\n            \n            let strength = 0;\n            const checks = [\n                { regex: /.{8,}/, weight: 1 },     // Pelo menos 8 caracteres\n                { regex: /[a-z]/, weight: 1 },     // Letra minúscula\n                { regex: /[A-Z]/, weight: 1 },     // Letra maiúscula\n                { regex: /[0-9]/, weight: 1 },     // Número\n                { regex: /[^a-zA-Z0-9]/, weight: 1 }, // Caractere especial\n                { regex: /.{12,}/, weight: 1 }     // Muito longo\n            ];\n            \n            checks.forEach(check => {\n                if (check.regex.test(password)) strength += check.weight;\n            });\n            \n            return Math.min(strength, 5);\n        };\n        \n        // Função para obter info da força da senha\n        const getStrengthInfo = (strength) => {\n            const levels = {\n                0: { text: 'Muito Fraca', color: '#ef4444', progress: 0 },\n                1: { text: 'Fraca', color: '#f97316', progress: 20 },\n                2: { text: 'Regular', color: '#f59e0b', progress: 40 },\n                3: { text: 'Boa', color: '#eab308', progress: 60 },\n                4: { text: 'Forte', color: '#84cc16', progress: 80 },\n                5: { text: 'Muito Forte', color: '#22c55e', progress: 100 }\n            };\n            return levels[strength] || levels[0];\n        };\n        \n        // Função para validar campos\n        const validateField = (name, value) => {\n            const validations = {\n                first_name: {\n                    required: true,\n                    minLength: 2,\n                    pattern: /^[a-zA-ZÀ-ÿ\\s]+$/,\n                    message: 'Nome deve ter pelo menos 2 caracteres e conter apenas letras'\n                },\n                username: {\n                    required: true,\n                    minLength: 3,\n                    pattern: /^[a-zA-Z0-9_]+$/,\n                    message: 'Username deve ter pelo menos 3 caracteres (apenas letras, números e _)'\n                },\n                email: {\n                    required: false,\n                    pattern: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\n                    message: 'Email deve ter formato válido'\n                },\n                password1: {\n                    required: true,\n                    minLength: 8,\n                    message: 'Senha deve ter pelo menos 8 caracteres'\n                },\n                password2: {\n                    required: true,\n                    match: 'password1',\n                    message: 'Senhas devem coincidir'\n                }\n            };\n            \n            const validation = validations[name];\n            if (!validation) return { valid: true };\n            \n            // Verificar se é obrigatório\n            if (validation.required && !value) {\n                return { valid: false, message: `${name.charAt(0).toUpperCase() + name.slice(1)} é obrigatório` };\n            }\n            \n            // Se não é obrigatório e está vazio, é válido\n            if (!validation.required && !value) {\n                return { valid: true };\n            }\n            \n            // Verificar comprimento mínimo\n            if (validation.minLength && value.length < validation.minLength) {\n                return { valid: false, message: validation.message };\n            }\n            \n            // Verificar padrão\n            if (validation.pattern && !validation.pattern.test(value)) {\n                return { valid: false, message: validation.message };\n            }\n            \n            // Verificar match (para confirmação de senha)\n            if (validation.match && value !== formData[validation.match]) {\n                return { valid: false, message: validation.message };\n            }\n            \n            return { valid: true };\n        };\n        \n        // Função para verificar disponibilidade do username\n        const checkUsernameAvailability = async (username) => {\n            if (!username || username.length < 3) {\n                setUsernameAvailable(null);\n                return;\n            }\n            \n            setCheckingUsername(true);\n            \n            try {\n                // Simular verificação (aqui você faria uma chamada real para o backend)\n                await new Promise(resolve => setTimeout(resolve, 500));\n                \n                // Por enquanto, simular que usernames que terminam com 'admin' já existem\n                const exists = username.toLowerCase().includes('admin');\n                setUsernameAvailable(!exists);\n            } catch (error) {\n                console.error('Erro ao verificar username:', error);\n                setUsernameAvailable(null);\n            } finally {\n                setCheckingUsername(false);\n            }\n        };\n        \n        // Função para gerar sugestões de username\n        const generateUsernameSuggestions = (firstName, lastName) => {\n            if (!firstName) return [];\n            \n            const suggestions = [];\n            const cleanFirst = firstName.toLowerCase().replace(/[^a-z]/g, '');\n            const cleanLast = lastName ? lastName.toLowerCase().replace(/[^a-z]/g, '') : '';\n            \n            // Diferentes combinações\n            if (cleanFirst.length >= 2) {\n                suggestions.push(cleanFirst);\n                if (cleanLast) {\n                    suggestions.push(cleanFirst + cleanLast);\n                    suggestions.push(cleanFirst + '.' + cleanLast);\n                    suggestions.push(cleanFirst.charAt(0) + cleanLast);\n                    suggestions.push(cleanFirst + cleanLast.charAt(0));\n                }\n                suggestions.push(cleanFirst + Math.floor(Math.random() * 99));\n                suggestions.push(cleanFirst + '2024');\n            }\n            \n            return suggestions.slice(0, 4);\n        };\n        \n        // Função para calcular progresso do campo\n        const calculateFieldProgress = (name, value) => {\n            const validation = validateField(name, value);\n            let progress = 0;\n            \n            if (!value) return 0;\n            \n            switch (name) {\n                case 'first_name':\n                    progress = Math.min((value.length / 2) * 100, 100);\n                    break;\n                case 'username':\n                    if (validation.valid && usernameAvailable !== false) {\n                        progress = 100;\n                    } else if (value.length >= 3) {\n                        progress = 70;\n                    } else {\n                        progress = (value.length / 3) * 50;\n                    }\n                    break;\n                case 'email':\n                    if (validation.valid) {\n                        progress = 100;\n                    } else if (value.includes('@')) {\n                        progress = 60;\n                    } else {\n                        progress = (value.length / 10) * 50;\n                    }\n                    break;\n                default:\n                    progress = validation.valid ? 100 : (value.length > 0 ? 50 : 0);\n            }\n            \n            return Math.min(progress, 100);\n        };\n        \n        // Função para atualizar campos do formulário\n        const handleInputChange = (name, value) => {\n            setFormData(prev => ({\n                ...prev,\n                [name]: value\n            }));\n            \n            // Validar campo em tempo real\n            const validation = validateField(name, value);\n            setFieldValidation(prev => ({\n                ...prev,\n                [name]: validation\n            }));\n            \n            // Calcular progresso do campo\n            const progress = calculateFieldProgress(name, value);\n            setFieldProgress(prev => ({\n                ...prev,\n                [name]: progress\n            }));\n            \n            // Calcular força da senha\n            if (name === 'password1') {\n                const strength = calculatePasswordStrength(value);\n                setPasswordStrength(strength);\n                \n                // Re-validar confirmação de senha se ela já foi preenchida\n                if (formData.password2) {\n                    const password2Validation = validateField('password2', formData.password2);\n                    setFieldValidation(prev => ({\n                        ...prev,\n                        password2: password2Validation\n                    }));\n                }\n            }\n            \n            // Verificar username disponibilidade\n            if (name === 'username') {\n                if (typingTimeout) clearTimeout(typingTimeout);\n                const timeout = setTimeout(() => {\n                    checkUsernameAvailability(value);\n                }, 500);\n                setTypingTimeout(timeout);\n            }\n            \n            // Gerar sugestões de username quando nome é digitado\n            if (name === 'first_name' || name === 'last_name') {\n                const firstName = name === 'first_name' ? value : formData.first_name;\n                const lastName = name === 'last_name' ? value : formData.last_name;\n                const usernameSuggestions = generateUsernameSuggestions(firstName, lastName);\n                setSuggestions(prev => ({\n                    ...prev,\n                    username: usernameSuggestions\n                }));\n            }\n            \n            // Limpar erros quando usuário digita\n            if (errors[name]) {\n                setErrors(prev => ({\n                    ...prev,\n                    [name]: ''\n                }));\n            }\n        };\n        \n        // Função para alternar visibilidade da senha\n        const togglePasswordVisibility = (field) => {\n            setShowPasswords(prev => ({\n                ...prev,\n                [field]: !prev[field]\n            }));\n        };\n        \n        // Função para navegar entre etapas\n        const navigateStep = (direction) => {\n            const newStep = currentStep + direction;\n            \n            if (direction > 0) {\n                // Validar etapa atual antes de avançar\n                if (!validateCurrentStep()) return;\n            }\n            \n            if (newStep >= 1 && newStep <= 3) {\n                setCurrentStep(newStep);\n            }\n        };\n        \n        // Função para validar etapa atual\n        const validateCurrentStep = () => {\n            if (currentStep === 1) {\n                const requiredFields = ['first_name', 'username'];\n                for (const field of requiredFields) {\n                    const validation = validateField(field, formData[field]);\n                    if (!validation.valid) {\n                        setFieldValidation(prev => ({\n                            ...prev,\n                            [field]: validation\n                        }));\n                        return false;\n                    }\n                }\n                \n                // Verificar se username está disponível\n                if (usernameAvailable === false) {\n                    return false;\n                }\n            }\n            \n            if (currentStep === 2) {\n                const requiredFields = ['password1', 'password2'];\n                for (const field of requiredFields) {\n                    const validation = validateField(field, formData[field]);\n                    if (!validation.valid) {\n                        setFieldValidation(prev => ({\n                            ...prev,\n                            [field]: validation\n                        }));\n                        return false;\n                    }\n                }\n                \n                // Verificar força da senha\n                if (passwordStrength < 3) {\n                    setErrors(prev => ({\n                        ...prev,\n                        password1: 'Senha deve ser pelo menos \"Boa\" para continuar'\n                    }));\n                    return false;\n                }\n            }\n            \n            return true;\n        };\n        \n        // Função para enviar formulário\n        const handleSubmit = async (e) => {\n            e.preventDefault();\n            \n            if (!validateCurrentStep()) return;\n            \n            setIsLoading(true);\n            \n            try {\n                const response = await fetch('/accounts/usuarios/criar/', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/x-www-form-urlencoded',\n                        'X-CSRFToken': csrf_token,\n                    },\n                    body: new URLSearchParams(formData)\n                });\n                \n                if (response.ok) {\n                    setShowSuccessAnimation(true);\n                    setTimeout(() => {\n                        window.location.href = '/accounts/usuarios/gerenciar/';\n                    }, 3000);\n                } else {\n                    const text = await response.text();\n                    // Tentar extrair erros do HTML retornado\n                    if (text.includes('já existe')) {\n                        setErrors({ username: 'Este nome de usuário já existe' });\n                    } else if (text.includes('email')) {\n                        setErrors({ email: 'Este email já está em uso' });\n                    } else {\n                        setErrors({ general: 'Erro ao criar usuário. Verifique os dados.' });\n                    }\n                }\n            } catch (error) {\n                console.error('Erro:', error);\n                setErrors({ general: 'Erro de conexão. Tente novamente.' });\n            } finally {\n                setIsLoading(false);\n            }\n        };\n        \n        // Função para obter critérios da senha\n        const getPasswordCriteria = (password) => {\n            return [\n                { text: 'Pelo menos 8 caracteres', check: /.{8,}/.test(password) },\n                { text: 'Letra minúscula', check: /[a-z]/.test(password) },\n                { text: 'Letra maiúscula', check: /[A-Z]/.test(password) },\n                { text: 'Número', check: /[0-9]/.test(password) },\n                { text: 'Caractere especial', check: /[^a-zA-Z0-9]/.test(password) }\n            ];\n        };\n        \n        // Renderização do componente\n        return React.createElement('div', { className: 'criar-usuario-react' },\n            // Background animado\n            React.createElement('div', { className: 'background-animation' },\n                React.createElement('div', { className: 'floating-shape shape-1' }),\n                React.createElement('div', { className: 'floating-shape shape-2' }),\n                React.createElement('div', { className: 'floating-shape shape-3' }),\n                React.createElement('div', { className: 'floating-shape shape-4' }),\n                React.createElement('div', { className: 'floating-shape shape-5' }),\n                React.createElement('div', { className: 'floating-shape shape-6' })\n            ),\n            \n            React.createElement('div', { className: 'main-container' },\n                // Breadcrumb moderno\n                React.createElement('div', { className: 'modern-breadcrumb' },\n                    React.createElement('div', { className: 'breadcrumb-card' },\n                        React.createElement('nav', { className: 'breadcrumb-nav' },\n                            React.createElement('a', { \n                                href: '/accounts/', \n                                className: 'breadcrumb-link'\n                            },\n                                React.createElement('i', { className: 'fas fa-home' }),\n                                React.createElement('span', null, 'Dashboard')\n                            ),\n                            React.createElement('div', { className: 'breadcrumb-arrow' },\n                                React.createElement('i', { className: 'fas fa-chevron-right' })\n                            ),\n                            React.createElement('a', { \n                                href: '/accounts/configuracoes/', \n                                className: 'breadcrumb-link'\n                            },\n                                React.createElement('i', { className: 'fas fa-cog' }),\n                                React.createElement('span', null, 'Configurações')\n                            ),\n                            React.createElement('div', { className: 'breadcrumb-arrow' },\n                                React.createElement('i', { className: 'fas fa-chevron-right' })\n                            ),\n                            React.createElement('span', { className: 'breadcrumb-current' },\n                                React.createElement('i', { className: 'fas fa-user-plus' }),\n                                React.createElement('span', null, 'Criar Usuário')\n                            )\n                        )\n                    )\n                ),\n                \n                // Header da página modernizado\n                React.createElement('div', { className: 'modern-header' },\n                    React.createElement('div', { className: 'header-content' },\n                        React.createElement('div', { className: 'header-main' },\n                            React.createElement('div', { className: 'header-icon-wrapper' },\n                                React.createElement('div', { className: 'header-icon' },\n                                    React.createElement('i', { className: 'fas fa-user-plus' })\n                                ),\n                                React.createElement('div', { className: 'header-icon-pulse' })\n                            ),\n                            React.createElement('div', { className: 'header-text' },\n                                React.createElement('h1', { className: 'modern-title' }, 'Criar Novo Usuário'),\n                                React.createElement('p', { className: 'modern-subtitle' }, \n                                    'Configure um novo membro da equipe com acesso personalizado'\n                                ),\n                                                            React.createElement('div', { className: 'stats-dashboard-modern' },\n                                React.createElement('div', { className: 'stats-header-modern' },\n                                    React.createElement('div', { className: 'stats-title-section' },\n                                        React.createElement('h3', { className: 'stats-title' }, 'Visão Geral do Sistema'),\n                                        React.createElement('p', { className: 'stats-subtitle' }, 'Estatísticas em tempo real dos usuários')\n                                    ),\n                                    React.createElement('div', { className: 'stats-live-indicator' },\n                                        React.createElement('div', { className: 'live-dot' }),\n                                        React.createElement('span', null, 'Ao vivo')\n                                    )\n                                ),\n                                \n                                React.createElement('div', { className: 'stats-grid-modern' },\n                                    // Card Total de Usuários\n                                    React.createElement('div', { \n                                        className: 'stat-card-modern primary',\n                                        'data-tooltip': 'Total de usuários cadastrados no sistema'\n                                    },\n                                        React.createElement('div', { className: 'stat-card-bg' }),\n                                        React.createElement('div', { className: 'stat-card-header' },\n                                            React.createElement('div', { className: 'stat-icon-container' },\n                                                React.createElement('div', { className: 'stat-icon-modern total' },\n                                                    React.createElement('i', { className: 'fas fa-users' }),\n                                                    React.createElement('div', { className: 'icon-pulse-ring' })\n                                                )\n                                            ),\n                                            React.createElement('div', { className: 'stat-trend positive' },\n                                                React.createElement('i', { className: 'fas fa-arrow-up' }),\n                                                React.createElement('span', null, '+12%')\n                                            )\n                                        ),\n                                        React.createElement('div', { className: 'stat-content-modern' },\n                                            React.createElement('div', { className: 'stat-number-large' }, \n                                                estatisticas_usuarios?.total_usuarios || 0\n                                            ),\n                                            React.createElement('div', { className: 'stat-label-modern' }, 'Total de usuários'),\n                                            React.createElement('div', { className: 'stat-description' }, 'Todos os usuários registrados')\n                                        ),\n\n                                        React.createElement('div', { className: 'stat-footer-modern' },\n                                            React.createElement('span', { className: 'stat-change positive' }, '+2 esta semana'),\n                                            React.createElement('div', { className: 'stat-sparkline' },\n                                                React.createElement('i', { className: 'fas fa-chart-line' })\n                                            )\n                                        )\n                                    ),\n                                    \n                                    // Card Usuários Ativos\n                                    React.createElement('div', { \n                                        className: 'stat-card-modern success',\n                                        'data-tooltip': 'Usuários com acesso habilitado'\n                                    },\n                                        React.createElement('div', { className: 'stat-card-bg' }),\n                                        React.createElement('div', { className: 'stat-card-header' },\n                                            React.createElement('div', { className: 'stat-icon-container' },\n                                                React.createElement('div', { className: 'stat-icon-modern active' },\n                                                    React.createElement('i', { className: 'fas fa-user-check' }),\n                                                    React.createElement('div', { className: 'icon-pulse-ring' })\n                                                )\n                                            ),\n                                            React.createElement('div', { className: 'stat-trend positive' },\n                                                React.createElement('i', { className: 'fas fa-arrow-up' }),\n                                                React.createElement('span', null, '+8%')\n                                            )\n                                        ),\n                                        React.createElement('div', { className: 'stat-content-modern' },\n                                            React.createElement('div', { className: 'stat-number-large' }, \n                                                estatisticas_usuarios?.usuarios_ativos || 0\n                                            ),\n                                            React.createElement('div', { className: 'stat-label-modern' }, 'Usuários ativos'),\n                                            React.createElement('div', { className: 'stat-description' }, 'Com acesso habilitado')\n                                        ),\n\n                                        React.createElement('div', { className: 'stat-footer-modern' },\n                                            React.createElement('span', { className: 'stat-change positive' }, 'Taxa: 100%'),\n                                            React.createElement('div', { className: 'stat-sparkline' },\n                                                React.createElement('i', { className: 'fas fa-check-circle' })\n                                            )\n                                        )\n                                    ),\n                                    \n                                    // Card Administradores\n                                    React.createElement('div', { \n                                        className: 'stat-card-modern warning',\n                                        'data-tooltip': 'Usuários com privilégios administrativos'\n                                    },\n                                        React.createElement('div', { className: 'stat-card-bg' }),\n                                        React.createElement('div', { className: 'stat-card-header' },\n                                            React.createElement('div', { className: 'stat-icon-container' },\n                                                React.createElement('div', { className: 'stat-icon-modern admin' },\n                                                    React.createElement('i', { className: 'fas fa-crown' }),\n                                                    React.createElement('div', { className: 'icon-pulse-ring' })\n                                                )\n                                            ),\n                                            React.createElement('div', { className: 'stat-trend stable' },\n                                                React.createElement('i', { className: 'fas fa-minus' }),\n                                                React.createElement('span', null, '0%')\n                                            )\n                                        ),\n                                        React.createElement('div', { className: 'stat-content-modern' },\n                                            React.createElement('div', { className: 'stat-number-large' }, \n                                                estatisticas_usuarios?.usuarios_admins || 0\n                                            ),\n                                            React.createElement('div', { className: 'stat-label-modern' }, 'Administradores'),\n                                            React.createElement('div', { className: 'stat-description' }, 'Acesso completo')\n                                        ),\n\n                                        React.createElement('div', { className: 'stat-footer-modern' },\n                                            React.createElement('span', { className: 'stat-change neutral' }, 'Controlado'),\n                                            React.createElement('div', { className: 'stat-sparkline' },\n                                                React.createElement('i', { className: 'fas fa-shield-alt' })\n                                            )\n                                        )\n                                    ),\n                                    \n                                    // Card Novo: Usuários Recentes\n                                    React.createElement('div', { \n                                        className: 'stat-card-modern info',\n                                        'data-tooltip': 'Usuários criados nos últimos 30 dias'\n                                    },\n                                        React.createElement('div', { className: 'stat-card-bg' }),\n                                        React.createElement('div', { className: 'stat-card-header' },\n                                            React.createElement('div', { className: 'stat-icon-container' },\n                                                React.createElement('div', { className: 'stat-icon-modern recent' },\n                                                    React.createElement('i', { className: 'fas fa-user-plus' }),\n                                                    React.createElement('div', { className: 'icon-pulse-ring' })\n                                                )\n                                            ),\n                                            React.createElement('div', { className: 'stat-trend positive' },\n                                                React.createElement('i', { className: 'fas fa-arrow-up' }),\n                                                React.createElement('span', null, '+25%')\n                                            )\n                                        ),\n                                        React.createElement('div', { className: 'stat-content-modern' },\n                                            React.createElement('div', { className: 'stat-number-large' }, \n                                                estatisticas_usuarios?.usuarios_recentes || 0\n                                            ),\n                                            React.createElement('div', { className: 'stat-label-modern' }, 'Novos usuários'),\n                                            React.createElement('div', { className: 'stat-description' }, 'Últimos 30 dias')\n                                        ),\n\n                                        React.createElement('div', { className: 'stat-footer-modern' },\n                                            React.createElement('span', { className: 'stat-change positive' }, 'Crescimento'),\n                                            React.createElement('div', { className: 'stat-sparkline' },\n                                                React.createElement('i', { className: 'fas fa-trending-up' })\n                                            )\n                                        )\n                                    )\n                                ),\n                                \n                                // Resumo Geral\n                                React.createElement('div', { className: 'stats-summary-modern' },\n                                    React.createElement('div', { className: 'summary-card' },\n                                        React.createElement('div', { className: 'summary-header' },\n                                            React.createElement('i', { className: 'fas fa-analytics' }),\n                                            React.createElement('span', null, 'Resumo Geral')\n                                        ),\n                                        React.createElement('div', { className: 'summary-content' },\n                                            React.createElement('div', { className: 'summary-item' },\n                                                React.createElement('span', { className: 'summary-label' }, 'Taxa de ativação:'),\n                                                React.createElement('span', { className: 'summary-value success' }, '100%')\n                                            ),\n                                            React.createElement('div', { className: 'summary-item' },\n                                                React.createElement('span', { className: 'summary-label' }, 'Crescimento mensal:'),\n                                                React.createElement('span', { className: 'summary-value positive' }, '+12%')\n                                            ),\n                                            React.createElement('div', { className: 'summary-item' },\n                                                React.createElement('span', { className: 'summary-label' }, 'Segurança:'),\n                                                React.createElement('span', { className: 'summary-value secure' }, 'Alta')\n                                            )\n                                        )\n                                    )\n                                )\n                            )\n                            )\n                        )\n                    )\n                ),\n                \n                // Animação de sucesso\n                showSuccessAnimation && React.createElement('div', { className: 'success-overlay-modern' },\n                    React.createElement('div', { className: 'success-card' },\n                        React.createElement('div', { className: 'success-animation-wrapper' },\n                            React.createElement('div', { className: 'success-checkmark' },\n                                React.createElement('i', { className: 'fas fa-check' })\n                            ),\n                            React.createElement('div', { className: 'success-ripple' })\n                        ),\n                        React.createElement('h2', { className: 'success-title' }, 'Usuário Criado!'),\n                        React.createElement('p', { className: 'success-message' }, \n                            'Novo usuário foi criado com sucesso. Redirecionando...'\n                        ),\n                        React.createElement('div', { className: 'success-progress' },\n                            React.createElement('div', { className: 'progress-bar' })\n                        )\n                    )\n                ),\n                \n                // Indicador de progresso\n                React.createElement('div', { className: 'progress-flow' },\n                    React.createElement('div', { className: 'flow-line' },\n                        React.createElement('div', { \n                            className: 'flow-progress',\n                            style: { width: `${(currentStep / 3) * 100}%` }\n                        })\n                    ),\n                    React.createElement('div', { className: 'flow-steps' },\n                        React.createElement('div', { \n                            className: `flow-step ${currentStep >= 1 ? 'active' : ''} ${currentStep > 1 ? 'completed' : ''}`\n                        },\n                            React.createElement('div', { className: 'step-circle' },\n                                React.createElement('i', { className: 'fas fa-user' })\n                            ),\n                            React.createElement('div', { className: 'step-content' },\n                                React.createElement('div', { className: 'step-title' }, 'Dados Pessoais'),\n                                React.createElement('div', { className: 'step-desc' }, 'Informações básicas')\n                            )\n                        ),\n                        React.createElement('div', { \n                            className: `flow-step ${currentStep >= 2 ? 'active' : ''} ${currentStep > 2 ? 'completed' : ''}`\n                        },\n                            React.createElement('div', { className: 'step-circle' },\n                                React.createElement('i', { className: 'fas fa-lock' })\n                            ),\n                            React.createElement('div', { className: 'step-content' },\n                                React.createElement('div', { className: 'step-title' }, 'Credenciais'),\n                                React.createElement('div', { className: 'step-desc' }, 'Senha e acesso')\n                            )\n                        ),\n                        React.createElement('div', { \n                            className: `flow-step ${currentStep >= 3 ? 'active' : ''}`\n                        },\n                            React.createElement('div', { className: 'step-circle' },\n                                React.createElement('i', { className: 'fas fa-shield-alt' })\n                            ),\n                            React.createElement('div', { className: 'step-content' },\n                                React.createElement('div', { className: 'step-title' }, 'Permissões'),\n                                React.createElement('div', { className: 'step-desc' }, 'Nível de acesso')\n                            )\n                        )\n                    )\n                ),\n                \n                // Formulário moderno\n                React.createElement('div', { className: 'form-container-modern' },\n                    React.createElement('div', { className: 'form-card-modern' },\n                        React.createElement('form', { \n                            onSubmit: handleSubmit,\n                            className: 'modern-form'\n                        },\n                            // Alerta de erro geral\n                            errors.general && React.createElement('div', { className: 'alert-modern error' },\n                                React.createElement('div', { className: 'alert-icon' },\n                                    React.createElement('i', { className: 'fas fa-exclamation-triangle' })\n                                ),\n                                React.createElement('div', { className: 'alert-content' },\n                                    React.createElement('strong', null, 'Erro:'),\n                                    React.createElement('span', null, errors.general)\n                                )\n                            ),\n                            \n                            // Etapa 1: Dados Pessoais\n                            currentStep === 1 && React.createElement('div', { className: 'step-panel active' },\n                                React.createElement('div', { className: 'panel-header' },\n                                    React.createElement('div', { className: 'panel-icon' },\n                                        React.createElement('i', { className: 'fas fa-user' })\n                                    ),\n                                    React.createElement('div', { className: 'panel-content' },\n                                        React.createElement('h2', null, 'Informações Pessoais'),\n                                        React.createElement('p', null, 'Configure os dados básicos do novo usuário')\n                                    )\n                                ),\n                                React.createElement('div', { className: 'fields-grid' },\n                                    // Nome\n                                    React.createElement('div', { className: 'field-group-modern' },\n                                        React.createElement('label', { className: 'field-label-modern' },\n                                            React.createElement('i', { className: 'fas fa-user' }),\n                                            React.createElement('span', null, 'Nome Completo'),\n                                            React.createElement('span', { className: 'required-star' }, ' *'),\n                                            React.createElement('button', {\n                                                type: 'button',\n                                                className: 'tooltip-trigger',\n                                                onMouseEnter: () => setShowTooltips(true),\n                                                onMouseLeave: () => setShowTooltips(false)\n                                            },\n                                                React.createElement('i', { className: 'fas fa-info-circle' }),\n                                                showTooltips && React.createElement('div', { className: 'tooltip-content' },\n                                                    'Digite o nome completo do usuário. Este será o nome exibido no sistema.'\n                                                )\n                                            )\n                                        ),\n                                        React.createElement('div', { \n                                            className: `input-wrapper-modern ${focusedField === 'first_name' ? 'focused' : ''} ${fieldValidation.first_name?.valid === false ? 'invalid' : fieldValidation.first_name?.valid === true ? 'valid' : ''}`\n                                        },\n                                            React.createElement('div', { className: 'input-icon' },\n                                                React.createElement('i', { className: 'fas fa-user' })\n                                            ),\n                                            React.createElement('input', {\n                                                type: 'text',\n                                                className: 'input-modern',\n                                                value: formData.first_name,\n                                                onChange: (e) => handleInputChange('first_name', e.target.value),\n                                                onFocus: () => setFocusedField('first_name'),\n                                                onBlur: () => setFocusedField(null),\n                                                placeholder: 'Digite o nome completo',\n                                                required: true\n                                            }),\n                                            fieldProgress.first_name > 0 && React.createElement('div', { className: 'field-progress' },\n                                                React.createElement('div', { \n                                                    className: 'progress-fill',\n                                                    style: { width: `${fieldProgress.first_name}%` }\n                                                })\n                                            )\n                                        ),\n                                        fieldValidation.first_name?.valid === false && React.createElement('div', { className: 'field-error-modern' },\n                                            React.createElement('i', { className: 'fas fa-exclamation-circle' }),\n                                            React.createElement('span', null, fieldValidation.first_name.message)\n                                        ),\n                                        React.createElement('div', { className: 'field-help' },\n                                            'Nome que será exibido no sistema'\n                                        )\n                                    ),\n                                    \n                                    // Sobrenome\n                                    React.createElement('div', { className: 'field-group-modern' },\n                                        React.createElement('label', { className: 'field-label-modern' },\n                                            React.createElement('i', { className: 'fas fa-user-tag' }),\n                                            React.createElement('span', null, 'Sobrenome')\n                                        ),\n                                        React.createElement('div', { \n                                            className: `input-wrapper-modern ${focusedField === 'last_name' ? 'focused' : ''}`\n                                        },\n                                            React.createElement('div', { className: 'input-icon' },\n                                                React.createElement('i', { className: 'fas fa-user-tag' })\n                                            ),\n                                            React.createElement('input', {\n                                                type: 'text',\n                                                className: 'input-modern',\n                                                value: formData.last_name,\n                                                onChange: (e) => handleInputChange('last_name', e.target.value),\n                                                onFocus: () => setFocusedField('last_name'),\n                                                onBlur: () => setFocusedField(null),\n                                                placeholder: 'Digite o sobrenome'\n                                            })\n                                        ),\n                                        React.createElement('div', { className: 'field-help' },\n                                            'Sobrenome ou nome da família (opcional)'\n                                        )\n                                    ),\n                                    \n                                    // Username\n                                    React.createElement('div', { className: 'field-group-modern' },\n                                        React.createElement('label', { className: 'field-label-modern' },\n                                            React.createElement('i', { className: 'fas fa-at' }),\n                                            React.createElement('span', null, 'Nome de Usuário'),\n                                            React.createElement('span', { className: 'required-star' }, ' *')\n                                        ),\n                                        React.createElement('div', { \n                                            className: `input-wrapper-modern ${focusedField === 'username' ? 'focused' : ''} ${fieldValidation.username?.valid === false || usernameAvailable === false ? 'invalid' : fieldValidation.username?.valid === true && usernameAvailable === true ? 'valid' : ''}`\n                                        },\n                                            React.createElement('div', { className: 'input-icon' },\n                                                React.createElement('i', { className: 'fas fa-at' })\n                                            ),\n                                            React.createElement('input', {\n                                                type: 'text',\n                                                className: 'input-modern',\n                                                value: formData.username,\n                                                onChange: (e) => handleInputChange('username', e.target.value),\n                                                onFocus: () => setFocusedField('username'),\n                                                onBlur: () => setFocusedField(null),\n                                                placeholder: 'usuario_sistema',\n                                                required: true\n                                            }),\n                                            React.createElement('div', { className: 'field-status' },\n                                                checkingUsername && React.createElement('i', { className: 'fas fa-spinner fa-spin' }),\n                                                !checkingUsername && usernameAvailable === true && React.createElement('i', { className: 'fas fa-check', style: { color: '#22c55e' } }),\n                                                !checkingUsername && usernameAvailable === false && React.createElement('i', { className: 'fas fa-times', style: { color: '#ef4444' } })\n                                            ),\n                                            fieldProgress.username > 0 && React.createElement('div', { className: 'field-progress' },\n                                                React.createElement('div', { \n                                                    className: 'progress-fill',\n                                                    style: { width: `${fieldProgress.username}%` }\n                                                })\n                                            )\n                                        ),\n                                        \n                                        // Sugestões de username\n                                        suggestions.username && suggestions.username.length > 0 && focusedField === 'username' && React.createElement('div', { className: 'suggestions-dropdown' },\n                                            React.createElement('div', { className: 'suggestions-header' },\n                                                React.createElement('i', { className: 'fas fa-lightbulb' }),\n                                                React.createElement('span', null, 'Sugestões disponíveis')\n                                            ),\n                                            React.createElement('div', { className: 'suggestions-list' },\n                                                suggestions.username.map((suggestion, index) => \n                                                    React.createElement('button', {\n                                                        key: index,\n                                                        type: 'button',\n                                                        className: 'suggestion-item',\n                                                        onClick: () => handleInputChange('username', suggestion)\n                                                    },\n                                                        React.createElement('i', { className: 'fas fa-magic' }),\n                                                        React.createElement('span', null, suggestion),\n                                                        React.createElement('div', { className: 'suggestion-action' },\n                                                            React.createElement('i', { className: 'fas fa-arrow-right' })\n                                                        )\n                                                    )\n                                                )\n                                            )\n                                        ),\n                                        \n                                        (fieldValidation.username?.valid === false || usernameAvailable === false) && React.createElement('div', { className: 'field-error-modern' },\n                                            React.createElement('i', { className: 'fas fa-exclamation-circle' }),\n                                            React.createElement('span', null, \n                                                usernameAvailable === false ? 'Este nome de usuário já existe' : fieldValidation.username?.message\n                                            )\n                                        ),\n                                        React.createElement('div', { className: 'field-help' },\n                                            'Nome único para login (apenas letras, números e _)'\n                                        )\n                                    ),\n                                    \n                                    // Email\n                                    React.createElement('div', { className: 'field-group-modern' },\n                                        React.createElement('label', { className: 'field-label-modern' },\n                                            React.createElement('i', { className: 'fas fa-envelope' }),\n                                            React.createElement('span', null, 'Email'),\n                                            React.createElement('span', { className: 'field-badge optional' }, 'Opcional')\n                                        ),\n                                        React.createElement('div', { \n                                            className: `input-wrapper-modern ${focusedField === 'email' ? 'focused' : ''} ${fieldValidation.email?.valid === false ? 'invalid' : fieldValidation.email?.valid === true ? 'valid' : ''}`\n                                        },\n                                            React.createElement('div', { className: 'input-icon' },\n                                                React.createElement('i', { className: 'fas fa-envelope' })\n                                            ),\n                                            React.createElement('input', {\n                                                type: 'email',\n                                                className: 'input-modern',\n                                                value: formData.email,\n                                                onChange: (e) => handleInputChange('email', e.target.value),\n                                                onFocus: () => setFocusedField('email'),\n                                                onBlur: () => setFocusedField(null),\n                                                placeholder: 'usuario@exemplo.com'\n                                            }),\n                                            fieldProgress.email > 0 && React.createElement('div', { className: 'field-progress' },\n                                                React.createElement('div', { \n                                                    className: 'progress-fill',\n                                                    style: { width: `${fieldProgress.email}%` }\n                                                })\n                                            )\n                                        ),\n                                        fieldValidation.email?.valid === false && React.createElement('div', { className: 'field-error-modern' },\n                                            React.createElement('i', { className: 'fas fa-exclamation-circle' }),\n                                            React.createElement('span', null, fieldValidation.email.message)\n                                        ),\n                                        React.createElement('div', { className: 'field-help' },\n                                            React.createElement('i', { className: 'fas fa-info-circle' }),\n                                            React.createElement('span', null, 'Endereço de email para notificações e recuperação de senha')\n                                        )\n                                    )\n                                )\n                            ),\n                            \n                            // Etapa 2: Credenciais\n                            currentStep === 2 && React.createElement('div', { className: 'step-panel active' },\n                                React.createElement('div', { className: 'panel-header' },\n                                    React.createElement('div', { className: 'panel-icon' },\n                                        React.createElement('i', { className: 'fas fa-lock' })\n                                    ),\n                                    React.createElement('div', { className: 'panel-content' },\n                                        React.createElement('h2', null, 'Credenciais de Acesso'),\n                                        React.createElement('p', null, 'Defina uma senha segura para o usuário')\n                                    )\n                                ),\n                                React.createElement('div', { className: 'fields-grid' },\n                                    // Nova Senha\n                                    React.createElement('div', { className: 'field-group-modern' },\n                                        React.createElement('label', { className: 'field-label-modern' },\n                                            React.createElement('i', { className: 'fas fa-key' }),\n                                            React.createElement('span', null, 'Nova Senha'),\n                                            React.createElement('span', { className: 'required-star' }, ' *')\n                                        ),\n                                        React.createElement('div', { \n                                            className: `input-wrapper-modern ${focusedField === 'password1' ? 'focused' : ''} ${fieldValidation.password1?.valid === false ? 'invalid' : ''}`\n                                        },\n                                            React.createElement('div', { className: 'input-icon' },\n                                                React.createElement('i', { className: 'fas fa-key' })\n                                            ),\n                                            React.createElement('input', {\n                                                type: showPasswords.password1 ? 'text' : 'password',\n                                                className: 'input-modern',\n                                                value: formData.password1,\n                                                onChange: (e) => handleInputChange('password1', e.target.value),\n                                                onFocus: () => setFocusedField('password1'),\n                                                onBlur: () => setFocusedField(null),\n                                                placeholder: '••••••••',\n                                                required: true\n                                            }),\n                                            React.createElement('button', {\n                                                type: 'button',\n                                                className: 'toggle-password-modern',\n                                                onClick: () => togglePasswordVisibility('password1')\n                                            },\n                                                React.createElement('i', { \n                                                    className: showPasswords.password1 ? 'fas fa-eye-slash' : 'fas fa-eye'\n                                                })\n                                            )\n                                        ),\n                                        \n                                        // Indicador de força da senha\n                                        formData.password1 && React.createElement('div', { className: 'password-strength-modern' },\n                                            React.createElement('div', { className: 'strength-bar-container' },\n                                                React.createElement('div', { \n                                                    className: 'strength-bar-fill',\n                                                    style: {\n                                                        width: `${getStrengthInfo(passwordStrength).progress}%`,\n                                                        backgroundColor: getStrengthInfo(passwordStrength).color\n                                                    }\n                                                })\n                                            ),\n                                            React.createElement('div', { className: 'strength-info' },\n                                                React.createElement('span', { \n                                                    className: 'strength-text',\n                                                    style: { color: getStrengthInfo(passwordStrength).color }\n                                                }, getStrengthInfo(passwordStrength).text),\n                                                React.createElement('span', { className: 'strength-score' }, \n                                                    `${passwordStrength}/5`\n                                                )\n                                            )\n                                        ),\n                                        \n                                        // Critérios da senha\n                                        formData.password1 && React.createElement('div', { className: 'password-criteria' },\n                                            React.createElement('div', { className: 'criteria-header' },\n                                                React.createElement('i', { className: 'fas fa-list-check' }),\n                                                React.createElement('span', null, 'Critérios da Senha')\n                                            ),\n                                            React.createElement('div', { className: 'criteria-list' },\n                                                getPasswordCriteria(formData.password1).map((criterion, index) => \n                                                    React.createElement('div', { \n                                                        key: index, \n                                                        className: `criterion ${criterion.check ? 'met' : 'unmet'}`\n                                                    },\n                                                        React.createElement('i', { \n                                                            className: criterion.check ? 'fas fa-check-circle' : 'fas fa-circle'\n                                                        }),\n                                                        React.createElement('span', null, criterion.text)\n                                                    )\n                                                )\n                                            )\n                                        ),\n                                        \n                                        fieldValidation.password1?.valid === false && React.createElement('div', { className: 'field-error-modern' },\n                                            React.createElement('i', { className: 'fas fa-exclamation-circle' }),\n                                            React.createElement('span', null, fieldValidation.password1.message)\n                                        ),\n                                        errors.password1 && React.createElement('div', { className: 'field-error-modern' },\n                                            React.createElement('i', { className: 'fas fa-exclamation-circle' }),\n                                            React.createElement('span', null, errors.password1)\n                                        )\n                                    ),\n                                    \n                                    // Confirmar Senha\n                                    React.createElement('div', { className: 'field-group-modern' },\n                                        React.createElement('label', { className: 'field-label-modern' },\n                                            React.createElement('i', { className: 'fas fa-check-double' }),\n                                            React.createElement('span', null, 'Confirmar Senha'),\n                                            React.createElement('span', { className: 'required-star' }, ' *')\n                                        ),\n                                        React.createElement('div', { \n                                            className: `input-wrapper-modern ${focusedField === 'password2' ? 'focused' : ''} ${fieldValidation.password2?.valid === false ? 'invalid' : fieldValidation.password2?.valid === true ? 'valid' : ''}`\n                                        },\n                                            React.createElement('div', { className: 'input-icon' },\n                                                React.createElement('i', { className: 'fas fa-check-double' })\n                                            ),\n                                            React.createElement('input', {\n                                                type: showPasswords.password2 ? 'text' : 'password',\n                                                className: 'input-modern',\n                                                value: formData.password2,\n                                                onChange: (e) => handleInputChange('password2', e.target.value),\n                                                onFocus: () => setFocusedField('password2'),\n                                                onBlur: () => setFocusedField(null),\n                                                placeholder: '••••••••',\n                                                required: true\n                                            }),\n                                            React.createElement('button', {\n                                                type: 'button',\n                                                className: 'toggle-password-modern',\n                                                onClick: () => togglePasswordVisibility('password2')\n                                            },\n                                                React.createElement('i', { \n                                                    className: showPasswords.password2 ? 'fas fa-eye-slash' : 'fas fa-eye'\n                                                })\n                                            )\n                                        ),\n                                        \n                                        // Indicador de correspondência\n                                        formData.password2 && React.createElement('div', { className: 'password-match' },\n                                            React.createElement('div', { \n                                                className: `match-indicator ${formData.password1 === formData.password2 ? 'match' : 'no-match'}`\n                                            },\n                                                formData.password1 === formData.password2 ? \n                                                    React.createElement(React.Fragment, null,\n                                                        React.createElement('i', { className: 'fas fa-check-circle' }),\n                                                        React.createElement('span', null, 'Senhas coincidem')\n                                                    ) :\n                                                    React.createElement(React.Fragment, null,\n                                                        React.createElement('i', { className: 'fas fa-times-circle' }),\n                                                        React.createElement('span', null, 'Senhas diferentes')\n                                                    )\n                                            )\n                                        ),\n                                        \n                                        fieldValidation.password2?.valid === false && React.createElement('div', { className: 'field-error-modern' },\n                                            React.createElement('i', { className: 'fas fa-exclamation-circle' }),\n                                            React.createElement('span', null, fieldValidation.password2.message)\n                                        ),\n                                        React.createElement('div', { className: 'field-help' },\n                                            'Digite a senha novamente para confirmar'\n                                        )\n                                    )\n                                )\n                            ),\n                            \n                            // Etapa 3: Permissões\n                            currentStep === 3 && React.createElement('div', { className: 'step-panel active' },\n                                React.createElement('div', { className: 'panel-header' },\n                                    React.createElement('div', { className: 'panel-icon' },\n                                        React.createElement('i', { className: 'fas fa-shield-alt' })\n                                    ),\n                                    React.createElement('div', { className: 'panel-content' },\n                                        React.createElement('h2', null, 'Permissões e Acesso'),\n                                        React.createElement('p', null, 'Configure o nível de acesso do usuário')\n                                    )\n                                ),\n                                React.createElement('div', { className: 'permissions-grid' },\n                                    // Status do Usuário\n                                    React.createElement('div', { className: 'permission-card' },\n                                        React.createElement('div', { className: 'permission-header' },\n                                            React.createElement('div', { className: 'permission-icon' },\n                                                React.createElement('i', { className: 'fas fa-user-check' })\n                                            ),\n                                            React.createElement('div', { className: 'permission-info' },\n                                                React.createElement('h3', null, 'Status do Usuário'),\n                                                React.createElement('p', null, 'Controla se o usuário pode fazer login')\n                                            )\n                                        ),\n                                        React.createElement('div', { className: 'permission-control' },\n                                            React.createElement('label', { className: 'modern-switch' },\n                                                React.createElement('input', {\n                                                    type: 'checkbox',\n                                                    checked: formData.is_active,\n                                                    onChange: (e) => handleInputChange('is_active', e.target.checked)\n                                                }),\n                                                React.createElement('span', { className: 'switch-slider' }),\n                                                React.createElement('span', { className: 'switch-text' }, \n                                                    formData.is_active ? 'Usuário Ativo' : 'Usuário Inativo'\n                                                )\n                                            )\n                                        )\n                                    ),\n                                    \n                                    // Privilégios Administrativos\n                                    React.createElement('div', { className: 'permission-card' },\n                                        React.createElement('div', { className: 'permission-header' },\n                                            React.createElement('div', { className: 'permission-icon admin' },\n                                                React.createElement('i', { className: 'fas fa-crown' })\n                                            ),\n                                            React.createElement('div', { className: 'permission-info' },\n                                                React.createElement('h3', null, 'Privilégios Administrativos'),\n                                                React.createElement('p', null, 'Permite gerenciar outros usuários')\n                                            )\n                                        ),\n                                        React.createElement('div', { className: 'permission-control' },\n                                            React.createElement('label', { className: 'modern-switch' },\n                                                React.createElement('input', {\n                                                    type: 'checkbox',\n                                                    checked: formData.is_staff,\n                                                    onChange: (e) => handleInputChange('is_staff', e.target.checked)\n                                                }),\n                                                React.createElement('span', { className: 'switch-slider' }),\n                                                React.createElement('span', { className: 'switch-text' }, \n                                                    formData.is_staff ? 'Administrador' : 'Usuário Comum'\n                                                )\n                                            )\n                                        )\n                                    )\n                                ),\n                                \n                                // Opções Avançadas\n                                React.createElement('div', { className: 'advanced-options' },\n                                    React.createElement('div', { className: 'advanced-header' },\n                                        React.createElement('button', {\n                                            type: 'button',\n                                            className: 'advanced-toggle',\n                                            onClick: () => setShowAdvancedOptions(!showAdvancedOptions)\n                                        },\n                                            React.createElement('i', { className: showAdvancedOptions ? 'fas fa-chevron-up' : 'fas fa-chevron-down' }),\n                                            React.createElement('span', null, 'Opções Avançadas'),\n                                            React.createElement('div', { className: 'advanced-badge' },\n                                                React.createElement('i', { className: 'fas fa-cog' })\n                                            )\n                                        )\n                                    ),\n                                    showAdvancedOptions && React.createElement('div', { className: 'advanced-content' },\n                                        React.createElement('div', { className: 'advanced-grid' },\n                                            React.createElement('div', { className: 'advanced-group' },\n                                                React.createElement('h4', null, 'Configurações de Conta'),\n                                                React.createElement('label', { className: 'modern-checkbox' },\n                                                    React.createElement('input', {\n                                                        type: 'checkbox',\n                                                        checked: formData.send_welcome_email || false,\n                                                        onChange: (e) => handleInputChange('send_welcome_email', e.target.checked)\n                                                    }),\n                                                    React.createElement('span', { className: 'checkbox-mark' }),\n                                                    React.createElement('span', { className: 'checkbox-text' }, 'Enviar email de boas-vindas')\n                                                ),\n                                                React.createElement('label', { className: 'modern-checkbox' },\n                                                    React.createElement('input', {\n                                                        type: 'checkbox',\n                                                        checked: formData.require_password_change || false,\n                                                        onChange: (e) => handleInputChange('require_password_change', e.target.checked)\n                                                    }),\n                                                    React.createElement('span', { className: 'checkbox-mark' }),\n                                                    React.createElement('span', { className: 'checkbox-text' }, 'Exigir troca de senha no primeiro login')\n                                                )\n                                            ),\n                                            React.createElement('div', { className: 'advanced-group' },\n                                                React.createElement('h4', null, 'Data de Expiração'),\n                                                React.createElement('div', { className: 'date-field' },\n                                                    React.createElement('label', null, 'Conta expira em (opcional)'),\n                                                    React.createElement('input', {\n                                                        type: 'date',\n                                                        className: 'input-modern',\n                                                        value: formData.expiry_date || '',\n                                                        onChange: (e) => handleInputChange('expiry_date', e.target.value),\n                                                        min: (function() {\n                                                            const today = new Date();\n                                                            const year = today.getFullYear();\n                                                            const month = String(today.getMonth() + 1).padStart(2, '0');\n                                                            const day = String(today.getDate()).padStart(2, '0');\n                                                            return year + '-' + month + '-' + day;\n                                                        })()\n                                                    })\n                                                )\n                                            )\n                                        )\n                                    )\n                                ),\n                                \n                                // Preview do usuário\n                                React.createElement('div', { className: 'user-preview' },\n                                    React.createElement('div', { className: 'preview-header' },\n                                        React.createElement('div', { className: 'preview-icon' },\n                                            React.createElement('i', { className: 'fas fa-eye' })\n                                        ),\n                                        React.createElement('h3', null, 'Preview do Usuário'),\n                                        React.createElement('p', null, 'Como o usuário aparecerá no sistema')\n                                    ),\n                                    React.createElement('div', { className: 'preview-card' },\n                                        React.createElement('div', { className: 'preview-avatar' },\n                                            React.createElement('div', { className: 'avatar-circle' },\n                                                React.createElement('i', { className: 'fas fa-user' })\n                                            ),\n                                            React.createElement('div', { \n                                                className: `avatar-status ${formData.is_active ? 'active' : 'inactive'}`\n                                            })\n                                        ),\n                                        React.createElement('div', { className: 'preview-details' },\n                                            React.createElement('div', { className: 'preview-name' }, \n                                                formData.first_name && formData.last_name ? \n                                                    `${formData.first_name} ${formData.last_name}` :\n                                                    formData.first_name || 'Novo Usuário'\n                                            ),\n                                            React.createElement('div', { className: 'preview-username' }, \n                                                `@${formData.username || 'usuario'}`\n                                            ),\n                                            formData.email && React.createElement('div', { className: 'preview-email' }, formData.email),\n                                            React.createElement('div', { className: 'preview-badges' },\n                                                React.createElement('div', { \n                                                    className: `preview-badge status ${formData.is_active ? 'active' : 'inactive'}`\n                                                }, formData.is_active ? 'Ativo' : 'Inativo'),\n                                                formData.is_staff && React.createElement('div', { className: 'preview-badge role' }, 'Administrador')\n                                            )\n                                        )\n                                    )\n                                )\n                            ),\n                            \n                            // Navegação\n                            React.createElement('div', { className: 'form-navigation' },\n                                currentStep > 1 && React.createElement('button', {\n                                    type: 'button',\n                                    className: 'nav-btn-modern nav-btn-secondary',\n                                    onClick: () => navigateStep(-1)\n                                },\n                                    React.createElement('i', { className: 'fas fa-arrow-left' }),\n                                    React.createElement('span', null, 'Voltar')\n                                ),\n                                \n                                React.createElement('div', { className: 'step-indicator' },\n                                    React.createElement('span', { className: 'current-step' }, currentStep),\n                                    React.createElement('span', { className: 'step-separator' }, 'de'),\n                                    React.createElement('span', { className: 'total-steps' }, '3')\n                                ),\n                                \n                                currentStep < 3 ? React.createElement('button', {\n                                    type: 'button',\n                                    className: 'nav-btn-modern nav-btn-primary',\n                                    onClick: () => navigateStep(1)\n                                },\n                                    React.createElement('span', null, 'Continuar'),\n                                    React.createElement('i', { className: 'fas fa-arrow-right' })\n                                ) : React.createElement('button', {\n                                    type: 'submit',\n                                    className: 'nav-btn-modern nav-btn-success',\n                                    disabled: isLoading\n                                },\n                                    isLoading ? \n                                        React.createElement(React.Fragment, null,\n                                            React.createElement('div', { className: 'loading-spinner' }),\n                                            React.createElement('span', null, 'Criando...')\n                                        ) :\n                                        React.createElement(React.Fragment, null,\n                                            React.createElement('i', { className: 'fas fa-user-plus' }),\n                                            React.createElement('span', null, 'Criar Usuário')\n                                        )\n                                )\n                            )\n                        )\n                    )\n                )\n            )\n        );\n    }\n    \n    // Disponibilizar o componente globalmente (para compatibilidade)\n    window.CriarUsuarioReact = CriarUsuarioReact;\n\n    // Exportar como módulo ES6\n    if (typeof module !== 'undefined' && module.exports) {\n        module.exports = CriarUsuarioReact;\n    }\n    \n    console.log('✅ [CRIAR USUÁRIO] Componente CriarUsuarioReact definido globalmente');\n    \n})();\n\n// Export para ES6 modules\n ","module.exports = ReactDOM;","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = React;","import React from 'react';\r\nimport { createRoot } from 'react-dom/client';\r\nimport CriarUsuarioReact from '../components/CriarUsuarioReact';\r\n\r\nconst rootDiv = document.getElementById('criar-usuario-root');\r\nif (rootDiv) {\r\n  const root = createRoot(rootDiv);\r\n  root.render(<CriarUsuarioReact />);\r\n}"],"names":["e","t","r","Symbol","n","iterator","o","toStringTag","i","c","prototype","Generator","u","Object","create","_regeneratorDefine2","f","p","y","G","v","a","d","bind","length","l","TypeError","call","done","value","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","m","defineProperty","enumerable","configurable","writable","_invoke","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","_slicedToArray","Array","isArray","_arrayWithHoles","next","push","_iterableToArrayLimit","_arrayLikeToArray","toString","slice","constructor","name","from","test","_unsupportedIterableToArray","_nonIterableRest","CriarUsuarioReact","props","_fieldValidation$firs","_fieldValidation$firs2","_fieldValidation$firs3","_fieldValidation$user","_fieldValidation$user2","_fieldValidation$user3","_fieldValidation$user4","_fieldValidation$emai","_fieldValidation$emai2","_fieldValidation$emai3","_fieldValidation$pass","_fieldValidation$pass2","_fieldValidation$pass3","_fieldValidation$pass4","_fieldValidation$pass5","console","log","today","password","_React$useState2","React","useState","currentStep","setCurrentStep","_React$useState4","first_name","last_name","username","email","password1","password2","is_active","is_staff","formData","setFormData","_React$useState6","errors","setErrors","_React$useState8","fieldValidation","setFieldValidation","_React$useState0","isLoading","setIsLoading","_React$useState10","showPasswords","setShowPasswords","_React$useState12","passwordStrength","setPasswordStrength","_React$useState14","showSuccessAnimation","setShowSuccessAnimation","_React$useState16","usernameAvailable","setUsernameAvailable","_React$useState18","checkingUsername","setCheckingUsername","_React$useState20","focusedField","setFocusedField","_React$useState22","suggestions","setSuggestions","_React$useState24","showTooltips","setShowTooltips","_React$useState26","typingTimeout","setTypingTimeout","_React$useState28","fieldProgress","setFieldProgress","_React$useState30","showAdvancedOptions","setShowAdvancedOptions","estatisticas_usuarios","usuario","csrf_token","getStrengthInfo","strength","levels","text","color","progress","validateField","validation","required","minLength","pattern","message","match","valid","concat","charAt","toUpperCase","checkUsernameAvailability","_ref","_callee","exists","_t","_context","setTimeout","toLowerCase","includes","error","_x","handleInputChange","prev","_objectSpread","_defineProperty","Math","min","calculateFieldProgress","regex","weight","forEach","check","calculatePasswordStrength","password2Validation","clearTimeout","timeout","usernameSuggestions","firstName","lastName","cleanFirst","replace","cleanLast","floor","random","generateUsernameSuggestions","togglePasswordVisibility","field","navigateStep","direction","newStep","validateCurrentStep","_ret","_loop","_requiredFields","_i","_ret2","_loop2","_requiredFields3","_i2","handleSubmit","_ref2","_callee2","response","_t2","_context2","preventDefault","fetch","method","headers","body","URLSearchParams","ok","window","location","href","general","_x2","createElement","className","total_usuarios","usuarios_ativos","usuarios_admins","usuarios_recentes","style","width","onSubmit","type","onMouseEnter","onMouseLeave","onChange","target","onFocus","onBlur","placeholder","map","suggestion","index","key","onClick","backgroundColor","criterion","Fragment","checked","send_welcome_email","require_password_change","expiry_date","Date","getFullYear","String","getMonth","padStart","getDate","disabled","module","exports","ReactDOM","createRoot","hydrateRoot","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","getter","__esModule","definition","get","obj","prop","hasOwnProperty","rootDiv","document","getElementById","render"],"sourceRoot":""}